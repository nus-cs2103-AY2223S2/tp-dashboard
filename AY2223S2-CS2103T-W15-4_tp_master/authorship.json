[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"* This is **a software engineering project done by Team W15-4 from CS2103T(AY2223S2)**.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"  The aim of this project is to:","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"  * help Computer Science students to keep track of their internship applications","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"  * provide a flexible internship application management interface which includes CLI and GUI","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"* The project is based on an ongoing software project for a desktop application (called _AddressBook-Level3_) used for managing contact details by [SE-EDU initiative](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"* It is named `InternEase` because it eases the internship application management process via both well-implemented CLI and GUI to help users focus on their internship preparations.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"* For the detailed documentation of this project, see the **[InternEase Product Website](https://ay2223s2-cs2103t-w15-4.github.io/tp/)**.","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"laihuiqi":7,"zm-l":1,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jiasheng59"},"content":"### Lee Jia Sheng","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jiasheng59"},"content":"\u003cimg src\u003d\"images/jiasheng59.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jiasheng59"},"content":"[[github](https://github.com/jiasheng59)]","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"jiasheng59"},"content":"[[portfolio](team/jiasheng59.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jiasheng59"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"jiasheng59"},"content":"* Responsibilities: `Find` and `Help` feature","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"### Lai Hui Qi","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"\u003cimg src\u003d\"images/laihuiqi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"[[github](http://github.com/laihuiqi)]","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"[[portfolio](team/laihuiqi.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"* Responsibilities: `clear`, `delete` and `exit` feature","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"### Benjamin Wee ","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"benjamin-wee"},"content":"\u003cimg src\u003d\"images/benjamin-wee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"benjamin-wee"},"content":"[[github](http://github.com/benjamin-wee)] [[portfolio](team/benjamin-wee.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"* Responsibilities: `list` feature","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"### Lau Zhan Ming","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"\u003cimg src\u003d\"images/zm-l.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"[[github](http://github.com/zm-l)]","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"[[portfolio](team/zm-l.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"* Responsibilities: `Add` internship applications entry","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"### Lok Jian Ming","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"\u003cimg src\u003d\"images/jianminglok.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"[[github](http://github.com/jianminglok)]","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"[[portfolio](team/jianminglok.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"* Responsibilities: Add contact and edit status feature","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"benjamin-wee":4,"jianminglok":5,"jiasheng59":6,"laihuiqi":6,"zm-l":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"jianminglok"},"content":"* Computer Science undergraduate","lastModifiedDate":"2023-02-28"},{"lineNumber":261,"author":{"gitId":"jianminglok"},"content":"* has a need to manage a number of internship applications","lastModifiedDate":"2023-02-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"jianminglok"},"content":"* able to type fast","lastModifiedDate":"2023-02-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"jianminglok"},"content":"**Value proposition**: manage internship applications faster and more efficiently than a typical mouse/GUI driven app","lastModifiedDate":"2023-02-28"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                  | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"benjamin-wee"},"content":"| -------- |--------------------------------------------|---------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-02-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                        | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"zm-l"},"content":"| `* * *`  | user                                       | add a new internship application entry                        |                                                                        |","lastModifiedDate":"2023-02-28"},{"lineNumber":278,"author":{"gitId":"jianminglok"},"content":"| `* * *`  | internship applicant                       | note down the contact details of the company I am applying to | conveninently contact the company for queries or setting up interviews |","lastModifiedDate":"2023-02-28"},{"lineNumber":279,"author":{"gitId":"laihuiqi"},"content":"| `* * *`  | internship applicant                       | delete my submission                                          | remove wrong entries or application that I no longer need              |","lastModifiedDate":"2023-02-28"},{"lineNumber":280,"author":{"gitId":"benjamin-wee"},"content":"| `* * *`  | internship applicant                       | view a list of my internship applications submitted           | prevent repeated applications to the same company                      |","lastModifiedDate":"2023-02-28"},{"lineNumber":281,"author":{"gitId":"laihuiqi"},"content":"| `* *`    | internship applicant                       | delete all my applications                                    | start fresh                                                            |","lastModifiedDate":"2023-02-28"},{"lineNumber":282,"author":{"gitId":"jianminglok"},"content":"| `* * *` | internship applicant                       | note down the status of my application                        | identify which stage of the application I am in                        |","lastModifiedDate":"2023-02-28"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jianminglok"},"content":"(For all use cases below, the **System** is `InternEase` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"zm-l"},"content":"**Use case: UC01 Add an internship application entry**","lastModifiedDate":"2023-02-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":294,"author":{"gitId":"zm-l"},"content":"1.  User requests to add an internship applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":295,"author":{"gitId":"zm-l"},"content":"2.  InternEase adds the internship application and displays a success message.","lastModifiedDate":"2023-02-28"},{"lineNumber":296,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":297,"author":{"gitId":"zm-l"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":298,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":299,"author":{"gitId":"zm-l"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":300,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":301,"author":{"gitId":"zm-l"},"content":"* 1a. The command format is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":302,"author":{"gitId":"zm-l"},"content":"    * 1a1. InternEase shows an error message and gives a specific suggestion on the correct command format.","lastModifiedDate":"2023-02-28"},{"lineNumber":303,"author":{"gitId":"zm-l"},"content":"    ","lastModifiedDate":"2023-02-28"},{"lineNumber":304,"author":{"gitId":"zm-l"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":305,"author":{"gitId":"zm-l"},"content":"    ","lastModifiedDate":"2023-02-28"},{"lineNumber":306,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":307,"author":{"gitId":"jianminglok"},"content":"**Use case: UC02 Add contact details of a company to an internship application**","lastModifiedDate":"2023-02-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"jianminglok"},"content":"1.  User requests to view the list of internship applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":312,"author":{"gitId":"jianminglok"},"content":"2.  InternEase shows the internship application list with their indexes specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":313,"author":{"gitId":"jianminglok"},"content":"3.  User requests to add the contact details of a company to a specific internship application in the list by specifying its respective index. ","lastModifiedDate":"2023-02-28"},{"lineNumber":314,"author":{"gitId":"jianminglok"},"content":"4.  InternEase adds the contact details of the company to the internship application and displays a success message.","lastModifiedDate":"2023-02-28"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"jianminglok"},"content":"    * 2a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":322,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"jianminglok"},"content":"* 3a. The provided index is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"jianminglok"},"content":"    * 3a1. InternEase shows an error message and gives a specific suggestion on the index\u0027s range.","lastModifiedDate":"2023-02-28"},{"lineNumber":328,"author":{"gitId":"jianminglok"},"content":"    * 3a2. User enters a new internship application index.","lastModifiedDate":"2023-02-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"jianminglok"},"content":"      Steps 3a1 to 3a2 are repeated until a valid index is provided. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"jianminglok"},"content":"* 3b. The command format is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":333,"author":{"gitId":"jianminglok"},"content":"    * 3b1. InternEase shows an error message and gives a specific suggestion on the correct command format.","lastModifiedDate":"2023-02-28"},{"lineNumber":334,"author":{"gitId":"jianminglok"},"content":"    * 3b2. User enters a new command.","lastModifiedDate":"2023-02-28"},{"lineNumber":335,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":336,"author":{"gitId":"jianminglok"},"content":"      Steps 3b1 to 3b2 are repeated until a valid command is entered. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":337,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":338,"author":{"gitId":"laihuiqi"},"content":"**Use case: UC05 Delete an internship application entry**","lastModifiedDate":"2023-02-28"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"laihuiqi"},"content":"1. User requests to view the list internship applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":343,"author":{"gitId":"laihuiqi"},"content":"2. InternEase shows the internship applications list with their indexes specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":344,"author":{"gitId":"laihuiqi"},"content":"3. User requests to delete a specific internship application in the list by specifying its respective index.","lastModifiedDate":"2023-02-28"},{"lineNumber":345,"author":{"gitId":"laihuiqi"},"content":"4. InterEase deletes the internship application from the list and displays a success message.","lastModifiedDate":"2023-02-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"laihuiqi"},"content":"    * 2a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"jianminglok"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":357,"author":{"gitId":"laihuiqi"},"content":"    * 3a1. InternEase shows an error message and gives specific suggestion on the index\u0027s range.","lastModifiedDate":"2023-02-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"laihuiqi"},"content":"    * 3a2. User enters new internship application index.","lastModifiedDate":"2023-02-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"laihuiqi"},"content":"      Steps 3a1 to 3a2 are repeated until a valid index is provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":362,"author":{"gitId":"laihuiqi"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":364,"author":{"gitId":"laihuiqi"},"content":"* 3b. The command format is incorrect.","lastModifiedDate":"2023-02-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":366,"author":{"gitId":"laihuiqi"},"content":"    * 3b1. InternEase shows an error message and gives specific suggestion on the command format.","lastModifiedDate":"2023-02-28"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":368,"author":{"gitId":"laihuiqi"},"content":"    * 3b2. User enters new command.","lastModifiedDate":"2023-02-28"},{"lineNumber":369,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":370,"author":{"gitId":"laihuiqi"},"content":"      Steps 3b1 to 3b2 are repeated until a valid command is provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":371,"author":{"gitId":"laihuiqi"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":372,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":373,"author":{"gitId":"jiasheng59"},"content":"**Use case: UC06 Find an application by its field**","lastModifiedDate":"2023-02-28"},{"lineNumber":374,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":375,"author":{"gitId":"jiasheng59"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":376,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":377,"author":{"gitId":"jiasheng59"},"content":"1.  User enters keyword of field for the application.","lastModifiedDate":"2023-02-28"},{"lineNumber":378,"author":{"gitId":"jiasheng59"},"content":"2.  InternEase shows a list of application whose company name or description fulfill the matching keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":379,"author":{"gitId":"jiasheng59"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":380,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":381,"author":{"gitId":"jiasheng59"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":382,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":383,"author":{"gitId":"jiasheng59"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-28"},{"lineNumber":384,"author":{"gitId":"jiasheng59"},"content":"    * 1a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":385,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":386,"author":{"gitId":"jiasheng59"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":387,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":388,"author":{"gitId":"laihuiqi"},"content":"**Use case: UC07 Clear all internship application entries**","lastModifiedDate":"2023-02-28"},{"lineNumber":389,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":390,"author":{"gitId":"laihuiqi"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":391,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":392,"author":{"gitId":"laihuiqi"},"content":"1. User requests to clear all the data in the application.","lastModifiedDate":"2023-02-28"},{"lineNumber":393,"author":{"gitId":"laihuiqi"},"content":"2. InternEase clears all the internship application entries, shows an empty list of internship application data and displays a success message.","lastModifiedDate":"2023-02-28"},{"lineNumber":394,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":395,"author":{"gitId":"laihuiqi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"jianminglok"},"content":"**Use case: UC08 Edit the status of an internship application**","lastModifiedDate":"2023-02-28"},{"lineNumber":398,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":399,"author":{"gitId":"jianminglok"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":400,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":401,"author":{"gitId":"jianminglok"},"content":"1.  User requests to view the list of internship applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":402,"author":{"gitId":"jianminglok"},"content":"2.  InternEase shows the internship application list with their indexes specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":403,"author":{"gitId":"jianminglok"},"content":"3.  User requests to edit the application status of a specific internship application in the list by specifying its respective index.","lastModifiedDate":"2023-02-28"},{"lineNumber":404,"author":{"gitId":"jianminglok"},"content":"4.  InternEase updates the application status of the internship application and displays a success message.","lastModifiedDate":"2023-02-28"},{"lineNumber":405,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":406,"author":{"gitId":"jianminglok"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":407,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":408,"author":{"gitId":"jianminglok"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":409,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":410,"author":{"gitId":"jianminglok"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-28"},{"lineNumber":411,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":412,"author":{"gitId":"jianminglok"},"content":"    * 2a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":413,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":414,"author":{"gitId":"jianminglok"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":415,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":416,"author":{"gitId":"jianminglok"},"content":"* 3a. The provided index is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":417,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":418,"author":{"gitId":"jianminglok"},"content":"    * 3a1. InternEase shows an error message and gives a specific suggestion on the index\u0027s range.","lastModifiedDate":"2023-02-28"},{"lineNumber":419,"author":{"gitId":"jianminglok"},"content":"    * 3a2. User enters a new internship application index.","lastModifiedDate":"2023-02-28"},{"lineNumber":420,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":421,"author":{"gitId":"jianminglok"},"content":"      Steps 3a1 to 3a2 are repeated until a valid index is provided. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":422,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":423,"author":{"gitId":"jianminglok"},"content":"* 3b. The command format is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":424,"author":{"gitId":"jianminglok"},"content":"    * 3b1. InternEase shows an error message and gives a specific suggestion on the correct command format.","lastModifiedDate":"2023-02-28"},{"lineNumber":425,"author":{"gitId":"jianminglok"},"content":"    * 3b2. User enters a new command.","lastModifiedDate":"2023-02-28"},{"lineNumber":426,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":427,"author":{"gitId":"jianminglok"},"content":"      Steps 3b1 to 3b2 are repeated until a valid command is entered. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":430,"author":{"gitId":"jiasheng59"},"content":"**Use case: UC09 Help**","lastModifiedDate":"2023-02-28"},{"lineNumber":431,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":432,"author":{"gitId":"jiasheng59"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":433,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":434,"author":{"gitId":"jiasheng59"},"content":"1. User requests for help.","lastModifiedDate":"2023-02-28"},{"lineNumber":435,"author":{"gitId":"jiasheng59"},"content":"2. InternEase shows a list of available commands to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":436,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":437,"author":{"gitId":"benjamin-wee"},"content":"**Use case: UC10 List**","lastModifiedDate":"2023-02-28"},{"lineNumber":438,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":439,"author":{"gitId":"benjamin-wee"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":440,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":441,"author":{"gitId":"benjamin-wee"},"content":"1.  User requests to view the list of internship applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":442,"author":{"gitId":"benjamin-wee"},"content":"2.  InternEase shows all the internship applications as a list with their indexes specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":443,"author":{"gitId":"benjamin-wee"},"content":"   ","lastModifiedDate":"2023-02-28"},{"lineNumber":444,"author":{"gitId":"benjamin-wee"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":445,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":446,"author":{"gitId":"benjamin-wee"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":447,"author":{"gitId":"benjamin-wee"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-28"},{"lineNumber":448,"author":{"gitId":"benjamin-wee"},"content":"    * 1a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":449,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":450,"author":{"gitId":"benjamin-wee"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":451,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":452,"author":{"gitId":"laihuiqi"},"content":"**Use case: UC11 Clear relevant internship application entries by keyword**","lastModifiedDate":"2023-03-14"},{"lineNumber":453,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":454,"author":{"gitId":"laihuiqi"},"content":"**MSS**","lastModifiedDate":"2023-03-14"},{"lineNumber":455,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":456,"author":{"gitId":"laihuiqi"},"content":"1. User requests to view the list of internship applications.","lastModifiedDate":"2023-03-14"},{"lineNumber":457,"author":{"gitId":"laihuiqi"},"content":"2. InternEase shows the internship application list with their attributes specified.","lastModifiedDate":"2023-03-14"},{"lineNumber":458,"author":{"gitId":"laihuiqi"},"content":"3. User requests to clear all the relevant entries with specific keyword and its attribute.","lastModifiedDate":"2023-03-14"},{"lineNumber":459,"author":{"gitId":"laihuiqi"},"content":"4. InternEase requests confirmation from user.","lastModifiedDate":"2023-03-14"},{"lineNumber":460,"author":{"gitId":"laihuiqi"},"content":"5. InternEase updates the application status of the internship application and displays a success message.","lastModifiedDate":"2023-03-14"},{"lineNumber":461,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":462,"author":{"gitId":"laihuiqi"},"content":"    Use case ends.","lastModifiedDate":"2023-03-14"},{"lineNumber":463,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":464,"author":{"gitId":"laihuiqi"},"content":"**Extensions**","lastModifiedDate":"2023-03-14"},{"lineNumber":465,"author":{"gitId":"laihuiqi"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-14"},{"lineNumber":466,"author":{"gitId":"laihuiqi"},"content":"    * 1a1. InternEase shows an alert message that there is no internship application in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":467,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":468,"author":{"gitId":"laihuiqi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-14"},{"lineNumber":469,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":470,"author":{"gitId":"laihuiqi"},"content":"* 2a. The provided attribute is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":471,"author":{"gitId":"laihuiqi"},"content":"    * 2a1. InternEase shows an error message and gives a specific suggestion on the correct command format.","lastModifiedDate":"2023-03-14"},{"lineNumber":472,"author":{"gitId":"laihuiqi"},"content":"    * 2a2. User enters a new command.","lastModifiedDate":"2023-03-14"},{"lineNumber":473,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":474,"author":{"gitId":"laihuiqi"},"content":"      Steps 2a1 to 2a2 are repeated until a valid attribute is provided. Use case resumes at step 4.","lastModifiedDate":"2023-03-14"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"benjamin-wee"},"content":"2. Should be able to hold up to 1000 persons without a noticeable increase in sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-10"},{"lineNumber":480,"author":{"gitId":"benjamin-wee"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster typing commands than using the mouse.","lastModifiedDate":"2023-03-10"},{"lineNumber":481,"author":{"gitId":"benjamin-wee"},"content":"4. InternEase doesn\u0027t support resume storing function. User can only include links to their resume used for a particular application. ","lastModifiedDate":"2023-03-10"},{"lineNumber":482,"author":{"gitId":"jiasheng59"},"content":"5. InternEase is unable to remind user through platform outside of the application.","lastModifiedDate":"2023-02-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"jianminglok"},"content":"* **CLI**: Command line interface","lastModifiedDate":"2023-02-28"},{"lineNumber":489,"author":{"gitId":"benjamin-wee"},"content":"* **GUI**: Graphical User interface","lastModifiedDate":"2023-02-28"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"laihuiqi"},"content":"1. Initial launch of InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"laihuiqi"},"content":"   2. Launch the application by:","lastModifiedDate":"2023-02-28"},{"lineNumber":509,"author":{"gitId":"laihuiqi"},"content":"      1. Double-click the jar file.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":510,"author":{"gitId":"laihuiqi"},"content":"         or","lastModifiedDate":"2023-02-28"},{"lineNumber":511,"author":{"gitId":"laihuiqi"},"content":"      2. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar InternEase.jar` command to run the program.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":512,"author":{"gitId":"benjamin-wee"},"content":"   Expected: Shows the GUI with a set of sample internship applications. The window size may not be optimal.","lastModifiedDate":"2023-03-10"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"laihuiqi"},"content":"2. Saving window preferences","lastModifiedDate":"2023-02-28"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"benjamin-wee"},"content":"    1. Resize the window to an optimal size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-03-10"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"benjamin-wee"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":519,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"benjamin-wee"},"content":"3. Shutting down InternEase","lastModifiedDate":"2023-03-10"},{"lineNumber":522,"author":{"gitId":"benjamin-wee"},"content":"   1. Shut down InternEase","lastModifiedDate":"2023-03-10"},{"lineNumber":523,"author":{"gitId":"laihuiqi"},"content":"      1. Using `exit` command.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":524,"author":{"gitId":"laihuiqi"},"content":"         or","lastModifiedDate":"2023-02-28"},{"lineNumber":525,"author":{"gitId":"laihuiqi"},"content":"      2. Close the window using the \u0027X\u0027 button on top-right of the window frame.","lastModifiedDate":"2023-02-28"},{"lineNumber":526,"author":{"gitId":"laihuiqi"},"content":"   2. All prior activities will be saved.","lastModifiedDate":"2023-02-28"},{"lineNumber":527,"author":{"gitId":"laihuiqi"},"content":"   3. Re-launch InternEase by [Step 1(ii)](#Launch-and-shutdown).\u003cbr\u003eExpected: All the saved data will be loaded and displayed.","lastModifiedDate":"2023-02-28"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"benjamin-wee"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"benjamin-wee":27,"jianminglok":58,"laihuiqi":61,"jiasheng59":25,"zm-l":14,"-":344}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"InternEase is a powerful and innovative desktop app designed to streamline the internship application process for Computer Science undergraduates. With its optimized combination of a Command Line Interface (CLI) and Graphical User Interface (GUI), InternEase offers users the best of both worlds - the speed and efficiency of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. Whether you\u0027re a seasoned CLI user or a first-time applicant, InternEase makes it easy to keep track of your progress, deadlines, and follow-up actions, so you can focus on landing your dream internship.","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"\u003e **Note**\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"\u003e This is a desktop app.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"1. Have Java `11` or above installed in local laptop or Computer.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"2. Download the latest version (InternEase v0.0) of `InternEase.jar` from [here](https://github.com/AY2223S2-CS2103T-W15-4/tp/releases).\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your InternEaseApp.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"4. Start the app by:","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"    - Opening a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar InternEase.jar` command to run the program.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"      or","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"    - Double-clicking the downloaded `InternEase.jar` file.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"   \u003e **Note**\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"   \u003e You should see the app is running now. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    * `add n/TechCompany j/Software Engineer` : Adds an application for the `Software Engineer` role at `TechCompany`.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"benjamin-wee"},"content":"    * `list` : Displays all the internships that the user has applied for.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"    * `delete 2` : Deletes the second internship application in the list of applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    * `find TechCompany` : Searches for all application with `COMPANY_NAME` and/or `JOB_TITLE` as `Google`","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    * `edit_status 2 s/PENDING` : Changes the status of the 2nd application in the applications list to `Pending offer`.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"benjamin-wee"},"content":"    * `exit` : Exits the application.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"jiasheng59"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"jiasheng59"},"content":"Shows a user guide message on how to use the internship tracker.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"jiasheng59"},"content":"Format: help","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"### Adding an application: `add`","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"Adds an application to the internship tracker.","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"Format: ` add n/COMPANY_NAME j/JOB_TITLE`","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"* `add n/Facebook j/Product Manager` adds an application for the Product Manager role at Facebook.","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"* `add n/LinkedIn j/Software Engineer` adds an application for the Software Engineer role at LinkedIn.","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"### Adding contact details: `add_contact`","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"Adds the contact details of a company to a specified application.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"Format: `add_contact INDEX p/PHONE NUMBER e/EMAIL`","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"* `add_contact INDEX p/87654321 e/abc@gmail.com` adds the contact number `87654321` and email `abc@gmail.com` to the application specified by the `INDEX` in the list of applications.","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"* `add_contact INDEX e/someemail@gmail.com` adds the email `someemail@gmail.com` to the application specified by the `INDEX` in the list of applications.","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"### Edit application status : `edit_status`","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"Edits the application status.","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"Format: `edit_status INDEX s/STATUS`","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"- Edits the status of the specified `INDEX` to the specified `STATUS`.","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"- The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"- The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"- Available status: NA, PENDING, RECEIVED, REJECTED, NO","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"    - NA: Internship application is not submitted.","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"    - PENDING: Internship application submitted, outcome has not been released.","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"    - RECEIVED: Offer received.","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"    - REJECTED: Offer rejected.","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"    - NO: Application rejected.","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"jianminglok"},"content":"* `edit_status 2 s/PENDING` Changes the status of the 2nd application in the applications list to `PENDING` (Internship application submitted, outcome has not been released).","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"benjamin-wee"},"content":"### Displaying list of internship applications:`list`","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"benjamin-wee"},"content":"Displays a list of applied internships","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"benjamin-wee"},"content":"Format: `list`","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"benjamin-wee"},"content":"* `list` shows all the internships that the user has applied for with 1 indexing.","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"benjamin-wee"},"content":"* If there are no internships applied for at the moment,","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"benjamin-wee"},"content":"  \"No applications at the moment\" will be shown.","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"### Deleting an application of internship : `delete`","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"Deletes the specified application from the list of internships applied","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"* Deletes the application of internship at the specified `INDEX`.","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"* The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"* `delete 2` Deletes the 2nd internship application in the list of applications.","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"### Clearing entries with keyword: `clear_by`","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"Clear all relevant entries from the internship tracker with specific keyword","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"Format: `clear_by n/COMPANY_NAME` OR `clear_by j/JOB_TITLE` OR `clear_by s/STATUS`","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"* Clears all application with the specified keyword - COMPANY_NAME, JOB_TITLE or STATUS.","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"* Three types of clear_by features are provided, but can only execute independently.","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"* `clear_by n/Meta` Clears all application with COMPANY_NAME as Meta.","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"* `clear_by j/Software engineer` Clears all application with JOB_TITLE as Software Engineer.","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"* `clear_by s/REJECTED` Clears all rejected application (with STATUS as REJECTED).","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"jiasheng59"},"content":"### Search for an application : `find`","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"jiasheng59"},"content":"Searches the list of internships applied by keyword (status, role, company)","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"jiasheng59"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"jiasheng59"},"content":"Searches for the application with the specified `KEYWORD`.","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"jiasheng59"},"content":"The keyword refers to the status, role or company that the user intends to look for.","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"jiasheng59"},"content":"Examples:","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"jiasheng59"},"content":"`find Google` searches for all application with `COMPANY_NAME` and/or `JOB_TITLE` as Google","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"Clears all entries from the internship tracker.","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"jianminglok"},"content":"**Add Contact** | `add_contact INDEX p/PHONE NUMBER e/EMAIL` \u003cbr\u003e e.g., `add_contact INDEX p/87654321 e/abc@gmail.com`","lastModifiedDate":"2023-02-27"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"**Clear**  | `clear`                             ","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"**Clear_by**  | `clear_by n/COMPANY_NAME` OR `clear_by j/JOB_TITLE` OR `clear_by s/STATUS`","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 2`                              ","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"jianminglok"},"content":"**Edit Status** | `edit_status INDEX s/STATUS` \u003cbr\u003e e.g., `edit_status 2 s/PENDING`","lastModifiedDate":"2023-02-27"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"**Exit**   | `exit` ","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"benjamin-wee"},"content":"**List** |`list`","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"benjamin-wee":12,"jianminglok":21,"laihuiqi":35,"jiasheng59":10,"zm-l":5,"-":119}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jianminglok"},"content":"    content: \"InternEase\";","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jianminglok":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"title: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"**InternEase is a desktop application for managing your internship applications.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"* If you are interested in using InternEase, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"laihuiqi":4,"-":15}},{"path":"docs/team/benjamin-wee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"benjamin-wee"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"benjamin-wee"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"benjamin-wee"},"content":"title: Benjamin Wee\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"benjamin-wee"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"benjamin-wee"},"content":"### Project: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"benjamin-wee"},"content":"InternEase is a **powerful and innovative desktop app designed to streamline the internship application process** for **Computer Science undergraduates**. With its optimized **combination of a Command Line Interface (CLI) and Graphical User Interface (GUI)**, InternEase offers users the best of both worlds - the speed and efficiency of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. InternEase is a good choice for you who wants to concentrate on your internship preparation by helping to manage your internship applications\u0027 data.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"benjamin-wee"},"content":"Listed below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"benjamin-wee"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"benjamin-wee"},"content":"    * What it does: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"benjamin-wee"},"content":"    * Justification: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"benjamin-wee"},"content":"    * Highlights: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"benjamin-wee"},"content":"    * Credits: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"benjamin-wee"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbenjamin-wee\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"benjamin-wee"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"benjamin-wee"},"content":"    * Managed releases [to be added soon] (* releases) on GitHub","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"benjamin-wee"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"benjamin-wee"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"benjamin-wee"},"content":"        * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"benjamin-wee"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"        * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"benjamin-wee"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"benjamin-wee"},"content":"    * PRs reviewed (with non-trivial review comments): [To be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"benjamin-wee"},"content":"    * Contributed to forum discussions (examples: [To be added soon])","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"benjamin-wee"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [To be added soon])","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"benjamin-wee"},"content":"    * [to be added soon]","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"benjamin-wee":40}},{"path":"docs/team/jianminglok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"title: Lok Jian Ming\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"### Project: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"InternEase is a **powerful and innovative desktop app designed to streamline the internship application process** for **Computer Science undergraduates**. With its optimized **combination of a Command Line Interface (CLI) and Graphical User Interface (GUI)**, InternEase offers users the best of both worlds - the speed and efficiency of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. InternEase is a good choice for you who wants to concentrate on your internship preparation by helping to manage your internship applications\u0027 data.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djianminglok\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        * Added documentation for the features `add_contact` and `edit_status` in [#45](https://github.com/AY2223S2-CS2103T-W15-4/tp/pull/45).","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        * To be added soon ","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    * Contributed to forum discussions (examples: To be added soon)","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon)","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"jianminglok":35}},{"path":"docs/team/jiasheng59.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiasheng59"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"jiasheng59"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"jiasheng59"},"content":"title: Lee Jia Sheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"jiasheng59"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"jiasheng59"},"content":"### Project: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"jiasheng59"},"content":"InternEase is a powerful and innovative desktop app designed to streamline the internship application process for Computer Science undergraduates. ","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"jiasheng59"},"content":"With its optimized combination of a Command Line Interface (CLI) and Graphical User Interface (GUI), ","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"jiasheng59"},"content":"InternEase offers users the best of both worlds - the speed and efficiency ","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"jiasheng59"},"content":"of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. ","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"jiasheng59"},"content":"InternEase is a good choice for you who wants to concentrate on your internship preparation by helping to manage your internship applications\u0027 data.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"jiasheng59"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"jiasheng59"},"content":"*--------Below are placeholders---------*","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"jiasheng59"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"jiasheng59"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"jiasheng59"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"jiasheng59"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"jiasheng59"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"jiasheng59"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"jiasheng59"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"jiasheng59"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"jiasheng59"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"jiasheng59"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"jiasheng59"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"jiasheng59"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"jiasheng59"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"jiasheng59"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"jiasheng59"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"jiasheng59"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"jiasheng59"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"jiasheng59"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"jiasheng59"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"jiasheng59"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"jiasheng59"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"jiasheng59"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"jiasheng59"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"jiasheng59"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"jiasheng59"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"jiasheng59"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"jiasheng59"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"jiasheng59"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"jiasheng59":52}},{"path":"docs/team/laihuiqi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"title: Lai Hui Qi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"### Project: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"InternEase is a **powerful and innovative desktop app designed to streamline the internship application process** for **Computer Science undergraduates**. With its optimized **combination of a Command Line Interface (CLI) and Graphical User Interface (GUI)**, InternEase offers users the best of both worlds - the speed and efficiency of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. InternEase is a good choice for you who wants to concentrate on your internship preparation by helping to manage your internship applications\u0027 data.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"  * What it does: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"  * Justification: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"  * Highlights: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"  * Credits: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dlaihuiqi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"  * Managed releases [to be added soon] (* releases) on GitHub","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"  * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    * Added documentation for Quick Start.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    * Added documentation for the features `clear`, `delete` and `exit` [\\#47](https://github.com/AY2223S2-CS2103T-W15-4/tp/issues/47)","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    * Added implementation details of the `clear`, `delete` and `exit` feature [\\#52](https://github.com/AY2223S2-CS2103T-W15-4/tp/issues/52).","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"  * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"  * [to be added soon]","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"  ","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"laihuiqi":40}},{"path":"docs/team/zm-l.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"title: Lau Zhan Ming\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"### Project: InternEase","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"InternEase is a **powerful and innovative desktop app designed to streamline the internship application process** for **Computer Science undergraduates**. With its optimized **combination of a Command Line Interface (CLI) and Graphical User Interface (GUI)**, InternEase offers users the best of both worlds - the speed and efficiency of a CLI for those who can type quickly, and the user-friendly experience of a GUI for those who prefer a visual interface. InternEase is a good choice for you who wants to concentrate on your internship preparation by helping to manage your internship applications\u0027 data.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djianminglok\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"* **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"        * Added documentation for the features `add_contact` and `edit_status` in [#45](https://github.com/AY2223S2-CS2103T-W15-4/tp/pull/45).","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"        * To be added soon ","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"* **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"    * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    * Contributed to forum discussions (examples: To be added soon)","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: To be added soon)","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"* **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    * To be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zm-l":35}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"            \"The application index provided is invalid\";","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jiasheng59"},"content":"    public static final String MESSAGE_APPLICATION_LISTED_OVERVIEW \u003d \"%1$d applications listed!\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_INVALID_DISPLAYED_INDEX \u003d \"This provided index is invalid!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_RESULT_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laihuiqi":4,"jiasheng59":1,"-":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    /** Returns an unmodifiable view of the filtered list of internship applications */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    ObservableList\u003cInternshipApplication\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zm-l":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"    public ObservableList\u003cInternshipApplication\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"laihuiqi":1,"zm-l":2,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":" * Adds an application to the internship tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an internship application to the tracker.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY_NAME \"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"            + PREFIX_JOB_TITLE + \"JOB_TITLE\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"            + PREFIX_COMPANY_NAME + \"LinkedIn \"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"            + PREFIX_JOB_TITLE + \"Software Engineer \";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship application added: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This internship application \"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"                                                            + \"already exists in the address book\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"    private final InternshipApplication toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"     * Creates an AddCommand to add the specified {@code InternshipApplication}","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    public AddCommand(InternshipApplication application) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        requireNonNull(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        toAdd \u003d application;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        if (model.hasApplication(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"        model.addApplication(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zm-l":19,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICATIONS;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":" * Adds a contact to an application identified using it\u0027s displayed index from the list of internship applications.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    public static final String COMMAND_WORD \u003d \"add_contact\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"            + \": Adds contact details to the specified application from the list of internships applied.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \";","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_ADD_CONTACT_SUCCESS \u003d \"Contact details added to application: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    private final Contact toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"     * @param targetIndex of the internship application to add contact details","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"     * @param contact Contact to add","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    public AddContactCommand(Index targetIndex, Contact contact) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"        toAdd \u003d contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"        InternshipApplication internshipToAddContact \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        InternshipApplication internshipWithContact \u003d createInternshipWithContact(internshipToAddContact, toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"        model.setApplication(internshipToAddContact, internshipWithContact);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_CONTACT_SUCCESS, internshipToAddContact + \"\\n\" + toAdd));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"     * Creates and returns a {@code InternshipApplication} with the details of {@code internshipToAddContact}","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"     * added with the contact {@code toAdd}.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"    private static InternshipApplication createInternshipWithContact(InternshipApplication internshipToAddContact,","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"                                                                     Contact contact) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"        assert internshipToAddContact !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"        CompanyName companyName \u003d internshipToAddContact.getCompanyName();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"        JobTitle jobTitle \u003d internshipToAddContact.getJobTitle();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"benjamin-wee"},"content":"        InterviewDate interviewDate \u003d internshipToAddContact.getInterviewDate();","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"benjamin-wee"},"content":"        return new InternshipApplication(companyName, jobTitle, contact, interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 targetIndex.equals(((AddContactCommand) other).targetIndex)","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"benjamin-wee":3,"jianminglok":89}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benjamin-wee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"benjamin-wee"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"benjamin-wee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICATIONS;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"benjamin-wee"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"benjamin-wee"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"benjamin-wee"},"content":" * Adds an interview date to an application identified using it\u0027s displayed index from the list of internship","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"benjamin-wee"},"content":" * applications.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"benjamin-wee"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"public class AddInterviewDateCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"    public static final String COMMAND_WORD \u003d \"add_date\";","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"benjamin-wee"},"content":"            + \": Adds interview date to the specified application from the list of internships applied.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"benjamin-wee"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] (DATE must be in \u0027MM/dd/yyyy hh:mm a\u0027 format, where a can be AM or PM)\"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"benjamin-wee"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"benjamin-wee"},"content":"            + PREFIX_DATE + \"06/07/2023 at 12:00 PM\";","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"benjamin-wee"},"content":"    public static final String MESSAGE_ADD_INTERVIEW_DATE_SUCCESS \u003d \"Interview date added to application: %1$s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"    private final InterviewDate toAdd;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"benjamin-wee"},"content":"     * @param targetIndex of the internship application to add interview date","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"benjamin-wee"},"content":"     * @param interviewDate InterviewDate to add","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"benjamin-wee"},"content":"    public AddInterviewDateCommand(Index targetIndex, InterviewDate interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"benjamin-wee"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"benjamin-wee"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"benjamin-wee"},"content":"        toAdd \u003d interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"benjamin-wee"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"benjamin-wee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"benjamin-wee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"benjamin-wee"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"benjamin-wee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"benjamin-wee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"benjamin-wee"},"content":"        InternshipApplication internshipToAddInterviewDate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"benjamin-wee"},"content":"        InternshipApplication internshipWithInterviewDate \u003d createInternshipWithInterviewDate(","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"benjamin-wee"},"content":"                internshipToAddInterviewDate, toAdd);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"benjamin-wee"},"content":"        model.setApplication(internshipToAddInterviewDate, internshipWithInterviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"benjamin-wee"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"benjamin-wee"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_INTERVIEW_DATE_SUCCESS, internshipToAddInterviewDate","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"benjamin-wee"},"content":"                + \"\\n\" + toAdd));","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"benjamin-wee"},"content":"    private static InternshipApplication createInternshipWithInterviewDate(","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"benjamin-wee"},"content":"            InternshipApplication internshipToAddInterviewDate, InterviewDate interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"benjamin-wee"},"content":"        assert internshipToAddInterviewDate !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"benjamin-wee"},"content":"        CompanyName companyName \u003d internshipToAddInterviewDate.getCompanyName();","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"benjamin-wee"},"content":"        JobTitle jobTitle \u003d internshipToAddInterviewDate.getJobTitle();","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"benjamin-wee"},"content":"        Contact contact \u003d internshipToAddInterviewDate.getContact();","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"benjamin-wee"},"content":"        InternshipStatus status \u003d internshipToAddInterviewDate.getStatus();","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"benjamin-wee"},"content":"        if (isNull(contact)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"benjamin-wee"},"content":"            return new InternshipApplication(companyName, jobTitle, status, interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"benjamin-wee"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"benjamin-wee"},"content":"            return new InternshipApplication(companyName, jobTitle, contact, status, interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"benjamin-wee"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"benjamin-wee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"benjamin-wee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"benjamin-wee"},"content":"                || (other instanceof AddInterviewDateCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"benjamin-wee"},"content":"                \u0026\u0026 targetIndex.equals(((AddInterviewDateCommand) other).targetIndex)","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"benjamin-wee"},"content":"                \u0026\u0026 toAdd.equals(((AddInterviewDateCommand) other).toAdd)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"benjamin-wee"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"benjamin-wee":94}},{"path":"src/main/java/seedu/address/logic/commands/ClearByCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" * Clears the address book entries by parameter specified.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"public class ClearByCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    enum ParamType {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        JOBTITLE(\"Job title\"), COMPANYNAME(\"Company name\"), STATUS(\"Status\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        private String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        ParamType(String name) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            return name;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"clear_by\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"            + \": Clear all relevant entries from the internship tracker with specific keyword.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"            + \"Clears all application with the specified keyword - COMPANY_NAME, JOB_TITLE or STATUS.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"            + \"Three types of clear_by features are provided, but can only execute independently.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"            + COMMAND_WORD + \" n/Meta Clears all application with COMPANY_NAME as Meta.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"            + COMMAND_WORD + \" j/Software engineer Clears all application with JOB_TITLE as Software Engineer.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"            + COMMAND_WORD + \" s/REJECTED Clears all rejected application (with STATUS as REJECTED).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_INVALID_PARAMETER \u003d \"Invalid param!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_CLEAR_SUCCESS \u003d \"All internship application with %s : %s has been cleared!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NULL \u003d \"There is nothing to clear!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_FAILED \u003d \"Clear command cannot be executed!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_EMPTY_FILTERED_LIST \u003d \"There is no %s with keyword \\\"%s\\\"!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    private CompanyName companyName \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    private JobTitle jobTitle \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    private InternshipStatus status \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    private String param;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    private ParamType paramType;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     * Creates an ClearByCommand to delete all the relevant {@code company} internship","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    public ClearByCommand(CompanyName companyName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        param \u003d companyName.fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        paramType \u003d ParamType.COMPANYNAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"     * Creates an ClearByCommand to delete all the relevant {@code jobTitle} internship","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"    public ClearByCommand(JobTitle jobTitle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        param \u003d jobTitle.fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"        paramType \u003d ParamType.JOBTITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     * Creates an ClearByCommand to delete all the relevant {@code status} internship","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"    public ClearByCommand(InternshipStatus status) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        param \u003d status.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        paramType \u003d ParamType.STATUS;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NULL);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"            ParamType.valueOf(String.valueOf(paramType));","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"            List\u003cInternshipApplication\u003e filteredList \u003d getFilteredList(lastShownList);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"            if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"                return new CommandResult(String.format(MESSAGE_EMPTY_FILTERED_LIST, paramType.getName(), param));","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"            for (InternshipApplication application : filteredList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"                model.deleteInternship(application);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(String.format(MESSAGE_CLEAR_SUCCESS, paramType.getName(), param));","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_FAILED);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"    private List\u003cInternshipApplication\u003e getFilteredList(List\u003cInternshipApplication\u003e lastShownList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipApplication\u003e filteredList;","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"        switch (paramType) {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"        case COMPANYNAME:","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"            filteredList \u003d lastShownList","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"                    .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"                    .filter(a -\u003e (a.getCompanyName()).equals(companyName))","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"        case JOBTITLE:","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"            filteredList \u003d lastShownList","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"                    .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"                    .filter(a -\u003e (a.getJobTitle().equals(jobTitle)))","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"        case STATUS:","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"            filteredList \u003d lastShownList","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"                    .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"                    .filter(a -\u003e (a.getStatus().equals(status)))","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"            filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"        return filteredList;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"        } else if (!(other instanceof ClearByCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"        switch (paramType) {","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"        case COMPANYNAME:","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"            return companyName.equals(((ClearByCommand) other).companyName);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"        case JOBTITLE:","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"            return jobTitle.equals(((ClearByCommand) other).jobTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"        case STATUS:","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"            return status.equals(((ClearByCommand) other).status);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"laihuiqi":159}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All internship application has been cleared!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NULL \u003d \"There is nothing to clear!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NULL);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        model.setInternEase(new AddressBook());","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laihuiqi":14,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"            + \": Deletes the specified application from the list of internships applied.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            + \"Deletes the application of internship at the specified INDEX.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + \"The index refers to the index number shown in the displayed internship list.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: INDEX (must be a positive integer 1, 2, 3, ...)\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_DELETE_APPLICATION_SUCCESS \u003d \"Deleted Application: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     * Creates an DeleteCommand to delete the specified {@code targetIndex} internship","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        InternshipApplication internshipToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPLICATION_SUCCESS, internshipToDelete));","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"laihuiqi":17,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"laihuiqi":1,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/EditStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":" * Edits the status of an application identified using it\u0027s displayed index from the list of internship applications.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"public class EditStatusCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    public static final String COMMAND_WORD \u003d \"edit_status\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"            + \": Edits the status the specified application from the list of internships applied.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] (must be one of NA, PENDING, RECEIVED, REJECTED or NO)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"            + PREFIX_STATUS + \"NA\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_UPDATE_STATUS_SUCCESS \u003d \"Status of application updated: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    private final InternshipStatus toUpdate;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     * @param targetIndex of the internship application to update status","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"     * @param internshipStatus Internship status to update","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"    public EditStatusCommand(Index targetIndex, InternshipStatus internshipStatus) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        toUpdate \u003d internshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"        InternshipApplication internshipToUpdateStatus \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        InternshipApplication updatedApplication \u003d createdUpdatedApplication(internshipToUpdateStatus, toUpdate);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"        model.setApplication(internshipToUpdateStatus, updatedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_STATUS_SUCCESS, updatedApplication));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"     * Creates and returns a {@code InternshipApplication} with the status of {@code InternshipStatus}","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"    private static InternshipApplication createdUpdatedApplication(InternshipApplication internshipApplication,","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"                                                    InternshipStatus status) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"        assert internshipApplication !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"        CompanyName companyName \u003d internshipApplication.getCompanyName();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"        JobTitle jobTitle \u003d internshipApplication.getJobTitle();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"        Contact contact \u003d internshipApplication.getContact();","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"        if (contact !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"            return new InternshipApplication(companyName, jobTitle, contact, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"            return new InternshipApplication(companyName, jobTitle, status);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"                || (other instanceof EditStatusCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 targetIndex.equals(((EditStatusCommand) other).targetIndex)","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 toUpdate.equals(((EditStatusCommand) other).toUpdate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":92}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting InternEase as requested ...\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"laihuiqi":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"jiasheng59"},"content":" * Finds and lists all internship application in record whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"jiasheng59"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internship applications whose names \"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jiasheng59"},"content":"            + \"contain any of the specified keywords (case-insensitive) \"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jiasheng59"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"jiasheng59"},"content":"            + \"Example: \" + COMMAND_WORD + \" google software engineer intern\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jiasheng59"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"jiasheng59"},"content":"                String.format(Messages.MESSAGE_APPLICATION_LISTED_OVERVIEW, model.getFilteredInternshipList().size()));","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jiasheng59":7,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    // I need help","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zm-l":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICATIONS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"benjamin-wee"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applications\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"    public static final String MESSAGE_NO_APPLICATIONS \u003d \"No applications at the moment\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"benjamin-wee"},"content":"        List\u003cInternshipApplication\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"        if (lastShownList.size() \u003e 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"benjamin-wee"},"content":"            return new CommandResult(MESSAGE_NO_APPLICATIONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benjamin-wee":11,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/task/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ContentContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" * Finds and lists all todos and notes in record whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"find tn\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all todos and notes whose names \"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"            + \"contain any of the specified keywords (case-insensitive) \"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" google software engineer intern\";","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    private final TitleContainsKeywordsPredicate titlePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    private final ContentContainsKeywordsPredicate contentPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     * Find task or notes matches with keyword predicate {@code titlePredicate} and {@code contentPredicate}","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * respectively.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public FindTaskCommand(TitleContainsKeywordsPredicate titlePredicate,","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"                           ContentContainsKeywordsPredicate contentPredicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        this.titlePredicate \u003d titlePredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        this.contentPredicate \u003d contentPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredTodoList(titlePredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredNoteList(contentPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"                String.format(Messages.MESSAGE_RESULT_LISTED_OVERVIEW,","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"                        model.getFilteredNoteList().size() + model.getFilteredInternshipList().size()));","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 titlePredicate.equals(((FindTaskCommand) other).titlePredicate)","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 contentPredicate.equals(((FindTaskCommand) other).contentPredicate)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":56}},{"path":"src/main/java/seedu/address/logic/commands/task/note/ClearNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Clears the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class ClearNoteCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"clear note\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All notes has been cleared!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NULL \u003d \"There is nothing to clear!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NULL);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        model.clearNote(new AddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":36}},{"path":"src/main/java/seedu/address/logic/commands/task/note/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":" * Deletes a note identified using it\u0027s displayed index from the note list.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"delete note\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + \": Deletes the specified note from the list of todo.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + \"Deletes note at the specified INDEX.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"            + \"The index refers to the index number shown in the displayed note list.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: INDEX (must be a positive integer 1, 2, 3, ...)\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Deleted note: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Creates an DeleteCommand to delete the specified {@code targetIndex} note","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public DeleteNoteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        Note noteToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        model.deleteNote(noteToDelete);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_NOTE_SUCCESS, noteToDelete));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof DeleteNoteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":62}},{"path":"src/main/java/seedu/address/logic/commands/task/note/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class ListNoteCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"list note\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all notes\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NO_APPLICATIONS \u003d \"No note at the moment\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003e 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NO_APPLICATIONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":35}},{"path":"src/main/java/seedu/address/logic/commands/task/note/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" * Adds an application to the internship tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_NOTE_CONTENT + \"NOTE_CONTENT \"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_NOTE_CONTENT + \"Focus on software engineering jobs!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"This note already exists in the todo list\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    private final Note note;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"     * Creates an AddCommand to add the specified {@code InternshipApplication}","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    public NoteCommand(Note noteContent) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(noteContent);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        note \u003d noteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        if (model.hasNote(note)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        model.addNote(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, note));","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof NoteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 note.equals(((NoteCommand) other).note));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":56}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/ClearTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Clears the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class ClearTodoCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"clear todo\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All todos has been cleared!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NULL \u003d \"There is nothing to clear!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NULL);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        model.clearTodo(new AddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":36}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/DeleteTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":" * Deletes a todo identified using it\u0027s displayed index from the todo list.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"public class DeleteTodoCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"delete todo\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + \": Deletes the specified todo from the list of todo.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + \"Deletes todo at the specified INDEX.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"            + \"The index refers to the index number shown in the displayed todo list.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: INDEX (must be a positive integer 1, 2, 3, ...)\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_DELETE_TODO_SUCCESS \u003d \"Deleted todo: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Creates an DeleteCommand to delete the specified {@code targetIndex} todo","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public DeleteTodoCommand(Index targetIndex) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo todoToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        model.deleteTodo(todoToDelete);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TODO_SUCCESS, todoToDelete));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof DeleteTodoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTodoCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":62}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/EditDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODO;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ApplicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.NoteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * Edits the deadline of a todo identified using it\u0027s displayed index from the list of todos.","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"public class EditDeadlineCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"edit_d\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            + \": Edits the deadline of the specified todo from current available list.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: INDEX (INDEX must be a positive integer) \"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] (must be in format dd-mm-yyyy)\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_DEADLINE + \"01-10-2023\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_UPDATE_STATUS_SUCCESS \u003d \"Deadline updated: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    private final ApplicationDeadline toUpdate;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     * @param targetIndex of the to update deadline","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * @param deadline to update","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public EditDeadlineCommand(Index targetIndex, ApplicationDeadline deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        toUpdate \u003d deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo todoToUpdateDeadline \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo updatedTodo \u003d createdUpdatedTodo(todoToUpdateDeadline, toUpdate);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        model.setTodo(todoToUpdateDeadline, updatedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODO);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_STATUS_SUCCESS, updatedTodo));","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * Creates and returns a {@code InternshipApplication} with the deadline of {@code deadline}","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    private static InternshipTodo createdUpdatedTodo(InternshipTodo todo, ApplicationDeadline deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        assert todo !\u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"        CompanyName companyName \u003d todo.getInternshipTitle();","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"        JobTitle jobTitle \u003d todo.getJobTitle();","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        NoteContent note \u003d todo.getNote();","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        if (note !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"            return new InternshipTodo(companyName, jobTitle, deadline, note);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"            return new InternshipTodo(companyName, jobTitle, deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof EditDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 targetIndex.equals(((EditDeadlineCommand) other).targetIndex)","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 toUpdate.equals(((EditDeadlineCommand) other).toUpdate)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":94}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/EditNoteContentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODO;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ApplicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.NoteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * Edits the note content of a todo identified using it\u0027s displayed index from the list of todos.","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"public class EditNoteContentCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"edit_c\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            + \": Edits the deadline of the specified todo from current available list.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: INDEX (INDEX must be a positive integer) \"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"            + \"[\" + PREFIX_NOTE_CONTENT + \"NOTE]\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_NOTE_CONTENT + \"Change venue\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_UPDATE_STATUS_SUCCESS \u003d \"Note Content updated: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    private final NoteContent toUpdate;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     * @param targetIndex of the to update content","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * @param content to update","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public EditNoteContentCommand(Index targetIndex, NoteContent content) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(content);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        toUpdate \u003d content;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo todoToUpdateDeadline \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo updatedTodo \u003d createdUpdatedTodo(todoToUpdateDeadline, toUpdate);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        model.setTodo(todoToUpdateDeadline, updatedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODO);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_STATUS_SUCCESS, updatedTodo));","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * Creates and returns a {@code InternshipApplication} with the content of {@code content}","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    private static InternshipTodo createdUpdatedTodo(InternshipTodo todo, NoteContent content) {","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        assert todo !\u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"        CompanyName companyName \u003d todo.getInternshipTitle();","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"        JobTitle jobTitle \u003d todo.getJobTitle();","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        ApplicationDeadline deadline \u003d todo.getDeadline();","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        return new InternshipTodo(companyName, jobTitle, deadline, content);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof EditNoteContentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 targetIndex.equals(((EditNoteContentCommand) other).targetIndex)","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 toUpdate.equals(((EditNoteContentCommand) other).toUpdate)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":90}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/ListTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODO;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class ListTodoCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"list todo\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all todos\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_NO_APPLICATIONS \u003d \"No todo at the moment\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODO);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        List\u003cInternshipTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        if (lastShownList.size() \u003e 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            return new CommandResult(MESSAGE_NO_APPLICATIONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":35}},{"path":"src/main/java/seedu/address/logic/commands/task/todo/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" * Adds an application to the internship tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interested internship todo.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY_NAME \"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_JOB_TITLE + \"JOB_TITLE\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_DEADLINE + \"DEADLINE\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_COMPANY_NAME + \"LinkedIn \"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_JOB_TITLE + \"Software Engineer \"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"            + PREFIX_DEADLINE + \"01-10-2023\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New TODO added: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This TODO already exists in the todo list\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    private final InternshipTodo todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"     * Creates an AddCommand to add the specified {@code InternshipApplication}","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public TodoCommand(InternshipTodo applicationTodo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(applicationTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        todo \u003d applicationTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        if (model.hasTodo(todo)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        model.addTodo(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, todo));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof TodoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 todo.equals(((TodoCommand) other).todo));","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":62}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    // public static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    // public static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMPANY_NAME, PREFIX_JOB_TITLE);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_JOB_TITLE)","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        CompanyName companyName \u003d ParserUtil.parseCompanyName(","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"                                                    argMultimap.getValue(PREFIX_COMPANY_NAME).orElse(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        JobTitle jobTitle \u003d ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).orElse(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        InternshipApplication application \u003d new InternshipApplication(companyName, jobTitle);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        return new AddCommand(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zm-l":14,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"* Parses input arguments and creates a new AddContactCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     * and returns an AddContactCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"                    pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PHONE, PREFIX_EMAIL)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        Contact contact \u003d new Contact(phone, email);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"        return new AddContactCommand(index, contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":59,"zm-l":1}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benjamin-wee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"benjamin-wee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"benjamin-wee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.logic.commands.AddInterviewDateCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"benjamin-wee"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"benjamin-wee"},"content":" * Parses input arguments and creates a new AddInterviewDateCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"benjamin-wee"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"benjamin-wee"},"content":"public class AddInterviewDateCommandParser implements Parser\u003cAddInterviewDateCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewDateCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"benjamin-wee"},"content":"     * and returns an AddInterviewDateCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"benjamin-wee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"benjamin-wee"},"content":"    public AddInterviewDateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"benjamin-wee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"        Index index;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"benjamin-wee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"benjamin-wee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"benjamin-wee"},"content":"                    AddInterviewDateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"benjamin-wee"},"content":"        InterviewDate interviewDate \u003d ParserUtil.parseInterviewDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"        return new AddInterviewDateCommand(index, interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"benjamin-wee"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"benjamin-wee"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"benjamin-wee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"benjamin-wee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"benjamin-wee"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"benjamin-wee":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.logic.commands.AddInterviewDateCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.ClearByCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.EditStatusCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.FindTaskCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.ClearNoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.DeleteNoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.ListNoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.NoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.ClearTodoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.DeleteTodoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.EditDeadlineCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.EditNoteContentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.ListTodoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.TodoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.FindTaskCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.note.DeleteNoteCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.note.NoteCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.todo.DeleteTodoCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.todo.EditContentCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.todo.EditDeadlineCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.task.todo.TodoCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"        case EditStatusCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"            return new EditStatusCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"        case ClearByCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"            return new ClearByCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"            return new TodoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"        case ListTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"            return new ListTodoCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        case EditDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"            return new EditDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"        case EditNoteContentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"            return new EditContentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"        case DeleteTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"            return new DeleteTodoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"        case ClearTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"            return new ClearTodoCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"        case ListNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"            return new ListNoteCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"        case ClearNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"            return new ClearNoteCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"benjamin-wee"},"content":"        case AddInterviewDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"benjamin-wee"},"content":"            return new AddInterviewDateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benjamin-wee":4,"jianminglok":6,"laihuiqi":55,"zm-l":2,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/ClearByCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.ClearByCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new ClearByCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"public class ClearByCommandParser {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearByCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     * and returns an ClearByCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public ClearByCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        String trimArgs \u003d args.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        Prefix prefix \u003d new Prefix(trimArgs.substring(0, 2));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        if (!(prefix.equals(PREFIX_COMPANY_NAME) || prefix.equals(PREFIX_JOB_TITLE) || prefix.equals(PREFIX_STATUS))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"                    ClearByCommand.MESSAGE_INVALID_PARAMETER));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"                ArgumentTokenizer.tokenize(args, prefix);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        if (!arePrefixesPresent(argMultimap, prefix)","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearByCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        return parseParameter(prefix, argMultimap);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    private ClearByCommand parseParameter(Prefix prefix, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        if (prefix.equals(PREFIX_COMPANY_NAME)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"            CompanyName companyName \u003d ParserUtil.parseCompanyName(","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"                    argMultimap.getValue(PREFIX_COMPANY_NAME).orElse(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"            return new ClearByCommand(companyName);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        } else if (prefix.equals(PREFIX_JOB_TITLE)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            JobTitle jobTitle \u003d ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).orElse(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"            return new ClearByCommand(jobTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        } else if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"            InternshipStatus status \u003d ParserUtil.parseInternshipStatus(","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"                    argMultimap.getValue(PREFIX_STATUS).orElse(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"            return new ClearByCommand(status);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"                    ClearByCommand.MESSAGE_INVALID_PARAMETER));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"laihuiqi":74}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"    public static final Prefix PREFIX_COMPANY_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"deprecated/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"    public static final Prefix PREFIX_JOB_TITLE \u003d new Prefix(\"j/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final Prefix PREFIX_NOTE_CONTENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"benjamin-wee":1,"jianminglok":1,"laihuiqi":2,"zm-l":3,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    // To be removed once Person class is updated","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"            editPersonDescriptor.setPhone(new Phone(VALID_PHONE_PLACEHOLDER));","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"            editPersonDescriptor.setEmail(new Email(VALID_EMAIL_PLACEHOLDER));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jianminglok":8,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/EditStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.EditStatusCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":" * Parses input arguments and creates a new EditStatusCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"public class EditStatusCommandParser implements Parser\u003cEditStatusCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * Parses the given {@code String} of arguments in the context of the EditStatusCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     * and returns an EditStatusCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    public EditStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"        Index index;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStatusCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"                    pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        InternshipStatus status \u003d ParserUtil.parseInternshipStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        return new EditStatusCommand(index, status);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":55}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ApplicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.NoteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"     * Parses a {@code String companyName} into a {@code CompanyName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"     * @throws ParseException if the given {@code companyName} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"    public static CompanyName parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"        String trimmedName \u003d companyName.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"        if (!CompanyName.isValidName(trimmedName)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"        return new CompanyName(trimmedName);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"     * Parses a {@code String jobTitle} into a {@code JobTitle}.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"     * @throws ParseException if the given {@code jobTitle} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"    public static JobTitle parseJobTitle(String jobTitle) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"        String trimmedJobTitle \u003d jobTitle.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"        if (!JobTitle.isValidJobTitle(trimmedJobTitle)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"        return new JobTitle(trimmedJobTitle);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"benjamin-wee"},"content":"     * Parses a {@code String interviewDate} into an {@code InterviewDate}.","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"benjamin-wee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"benjamin-wee"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"benjamin-wee"},"content":"     * @throws ParseException if the given {@code interviewDate} is invalid.","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"benjamin-wee"},"content":"    public static InterviewDate parseInterviewDate(String interviewDate) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"benjamin-wee"},"content":"        requireNonNull(interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"benjamin-wee"},"content":"        String trimmedInterviewDate \u003d interviewDate.trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"benjamin-wee"},"content":"        if (!InterviewDate.isValidInterviewDate(trimmedInterviewDate)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"benjamin-wee"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"benjamin-wee"},"content":"        return new InterviewDate(interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"jianminglok"},"content":"     * Parses a {@code String status} into a {@code InternshipStatus}.","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"jianminglok"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"jianminglok"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"jianminglok"},"content":"    public static InternshipStatus parseInternshipStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"jianminglok"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"jianminglok"},"content":"        if (!InternshipStatus.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"jianminglok"},"content":"            throw new ParseException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"jianminglok"},"content":"        return InternshipStatus.valueOf(trimmedStatus);","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"     * Parses a {@code String deadline} into a {@code ApplicationDeadline}.","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"    public static ApplicationDeadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"        LocalDate formattedDate \u003d LocalDate.parse(trimmedDeadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"        if (!ApplicationDeadline.isValidDate(formattedDate)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(ApplicationDeadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"laihuiqi"},"content":"        return new ApplicationDeadline(formattedDate);","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"laihuiqi"},"content":"     * Parses a {@code String content} into a {@code NoteContent}.","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"laihuiqi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the given {@code content} is invalid.","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"laihuiqi"},"content":"    public static NoteContent parseContent(String content) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(content);","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"        String trimmedContent \u003d content.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"        if (!NoteContent.isValidContent(content)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(NoteContent.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"        return new NoteContent(trimmedContent);","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"benjamin-wee":16,"jianminglok":18,"laihuiqi":40,"zm-l":30,"-":122}},{"path":"src/main/java/seedu/address/logic/parser/task/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.FindTaskCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ContentContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        TitleContainsKeywordsPredicate titlePredicate \u003d new TitleContainsKeywordsPredicate(","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"                Arrays.asList(nameKeywords));","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        ContentContainsKeywordsPredicate contentPredicate \u003d new ContentContainsKeywordsPredicate(","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"                Arrays.asList(nameKeywords));","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        return new FindTaskCommand(titlePredicate, contentPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":40}},{"path":"src/main/java/seedu/address/logic/parser/task/note/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.DeleteNoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new DeletenOTECommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteNoteCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * and returns a DeleteNoteCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            return new DeleteNoteCommand(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":31}},{"path":"src/main/java/seedu/address/logic/parser/task/note/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.note;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.note.NoteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.NoteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new NoteCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"public class NoteCommandParser implements Parser\u003cNoteCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * and returns an NoteCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NOTE_CONTENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE_CONTENT)","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        NoteContent content \u003d ParserUtil.parseContent(argMultimap.getValue(PREFIX_NOTE_CONTENT).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        Note note \u003d new Note(content);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        return new NoteCommand(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":51}},{"path":"src/main/java/seedu/address/logic/parser/task/todo/DeleteTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.DeleteTodoCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new DeleteTodoCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"public class DeleteTodoCommandParser implements Parser\u003cDeleteTodoCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTodoCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     * and returns a DeleteTodoCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public DeleteTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"            return new DeleteTodoCommand(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":31}},{"path":"src/main/java/seedu/address/logic/parser/task/todo/EditContentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.EditNoteContentCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.NoteContent;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new EditNoteContentCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"public class EditContentCommandParser implements Parser\u003cEditNoteContentCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditNoteContentCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * and returns an EditNoteContentCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public EditNoteContentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTE_CONTENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        Index index;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteContentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE_CONTENT)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteContentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        NoteContent content \u003d ParserUtil.parseContent(","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"                argMultimap.getValue(PREFIX_NOTE_CONTENT).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        return new EditNoteContentCommand(index, content);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":62}},{"path":"src/main/java/seedu/address/logic/parser/task/todo/EditDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.EditDeadlineCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ApplicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new EditDeadlineCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"public class EditDeadlineCommandParser implements Parser\u003cEditDeadlineCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDeadlineCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * and returns an EditDeadlineCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public EditDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        Index index;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDeadlineCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"                    pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEADLINE)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        ApplicationDeadline deadline \u003d ParserUtil.parseDeadline(","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"                argMultimap.getValue(PREFIX_DEADLINE).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        return new EditDeadlineCommand(index, deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":61}},{"path":"src/main/java/seedu/address/logic/parser/task/todo/TodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.parser.task.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.commands.task.todo.TodoCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.ApplicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" * Parses input arguments and creates a new TodoCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"public class TodoCommandParser implements Parser\u003cTodoCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     * Parses the given {@code String} of arguments in the context of the TodoCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"     * and returns an TodoCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    public TodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMPANY_NAME, PREFIX_JOB_TITLE, PREFIX_DEADLINE);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_JOB_TITLE, PREFIX_DEADLINE)","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        CompanyName companyName \u003d ParserUtil.parseCompanyName(","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"                                                    argMultimap.getValue(PREFIX_COMPANY_NAME).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        JobTitle jobTitle \u003d ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        ApplicationDeadline deadline \u003d ParserUtil.parseDeadline(","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"                argMultimap.getValue(PREFIX_DEADLINE).orElse(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo todo \u003d new InternshipTodo(companyName, jobTitle, deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        return new TodoCommand(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":59}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.UniqueApplicationList;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.UniqueNoteList;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.UniqueTodoList;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"    private final UniqueApplicationList applications;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    private final UniqueTodoList todos;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    private final UniqueNoteList notes;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        applications \u003d new UniqueApplicationList();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        todos \u003d new UniqueTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        notes \u003d new UniqueNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"     * Replaces the contents of the person list with {@code applications}.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"     * {@code applications} must not contain duplicate applications.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"    public void setApplications(List\u003cInternshipApplication\u003e applications) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"        this.applications.setApplications(applications);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the contents of the todo list with {@code todos}.","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"     * {@code persons} must not contain duplicate todos.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(List\u003cInternshipTodo\u003e todos) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"        this.todos.setTodo(todos);","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the given todo {@code target} with {@code editedTodo}.","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"     * The identity of {@code editedTodo} must not be the same as another existing todo in the tracker.","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(InternshipTodo target, InternshipTodo editedTodo) {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(editedTodo);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"        todos.setTodo(target, editedTodo);","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the contents of the note list with {@code notes}.","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"     * {@code persons} must not contain duplicate notes.","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    public void setNote(List\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"        this.notes.setNotes(notes);","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the given note {@code target} with {@code editedNote}.","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"     * The identity of {@code editedNote} must not be the same as another existing note in the tracker.","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(editedNote);","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"        notes.setNotes(target, editedNote);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"        setApplications(newData.getInternshipList());","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"    /// application-level operations","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"     * Returns true if an internship application with the same identity","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"     * as {@code internshipApplication} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"    public boolean hasApplication(InternshipApplication application) {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"        requireNonNull(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"        return applications.contains(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a todo with the same identity","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"     * as {@code todo} exists in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    public boolean hasTodo(InternshipTodo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"        return todos.containsTodo(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a todo with the same identity","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"     * as {@code todo} exists in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"        return notes.containsNote(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"     * Adds an internship application to the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"     * The application must not already exist in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"    public void addApplication(InternshipApplication application) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"        applications.add(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"     * Adds a todo to the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"     * The todo must not already exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"    public void addTodo(InternshipTodo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"        todos.addTodo(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"     * Adds a note to the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"     * The note must not already exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"laihuiqi"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"laihuiqi"},"content":"        notes.addNote(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"     * Replaces the given person {@code target} in the list with {@code editedApplication}.","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"     * The application identity of {@code editedApplication}","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"     * must not be the same as another existing application in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"zm-l"},"content":"    public void setApplication(InternshipApplication target, InternshipApplication editedApplication) {","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"zm-l"},"content":"        requireNonNull(editedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"zm-l"},"content":"        applications.setApplication(target, editedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"laihuiqi"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"laihuiqi"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"laihuiqi"},"content":"    public void removeApplication(InternshipApplication key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"        applications.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"    public void removeTodo(InternshipTodo key) {","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"        todos.remove(key);","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"    public void removeNote(Note key) {","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"        notes.remove(key);","lastModifiedDate":"2023-03-19"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"     * Clear todo list.","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":244,"author":{"gitId":"laihuiqi"},"content":"    public void clearTodo(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-19"},{"lineNumber":245,"author":{"gitId":"laihuiqi"},"content":"        setTodo(newData.getTodoList());","lastModifiedDate":"2023-03-19"},{"lineNumber":246,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":247,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":248,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":249,"author":{"gitId":"laihuiqi"},"content":"     * Clear note list.","lastModifiedDate":"2023-03-19"},{"lineNumber":250,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":251,"author":{"gitId":"laihuiqi"},"content":"    public void clearNote(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-19"},{"lineNumber":252,"author":{"gitId":"laihuiqi"},"content":"        setNote(newData.getNoteList());","lastModifiedDate":"2023-03-19"},{"lineNumber":253,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":254,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"zm-l"},"content":"        return applications.asUnmodifiableObservableList().size() + \" applications\";","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"zm-l"},"content":"    public ObservableList\u003cInternshipApplication\u003e getInternshipList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"zm-l"},"content":"        return applications.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":273,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":274,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cInternshipTodo\u003e getTodoList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":275,"author":{"gitId":"laihuiqi"},"content":"        return todos.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":276,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":277,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":278,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":279,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cNote\u003e getNoteList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":280,"author":{"gitId":"laihuiqi"},"content":"        return notes.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":281,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":282,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":287,"author":{"gitId":"zm-l"},"content":"                \u0026\u0026 applications.equals(((AddressBook) other).applications));","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":292,"author":{"gitId":"zm-l"},"content":"        return applications.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laihuiqi":126,"zm-l":50,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    Predicate\u003cInternshipApplication\u003e PREDICATE_SHOW_ALL_APPLICATIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    Predicate\u003cInternshipTodo\u003e PREDICATE_SHOW_ALL_TODO \u003d unused -\u003e true;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    Predicate\u003cNote\u003e PREDICATE_SHOW_ALL_NOTES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     * Replaces address book data with the data in {@code internEase}.","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"    void setInternEase(ReadOnlyAddressBook internEase);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"     * Returns true if an internship application with the same identity as","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"     * {@code internshipApplication} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"    boolean hasApplication(InternshipApplication person);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a todo with the same identity as","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"     * {@code todo} exists in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    boolean hasTodo(InternshipTodo todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a note with the same identity as","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"     * {@code note} exists in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"    boolean hasNote(Note note);","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     * Deletes the given internship application.","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * The application must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    void deleteInternship(InternshipApplication application);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"     * Deletes the given todo.","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"     * The todo must exist in the todo list.","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    void deleteTodo(InternshipTodo target);","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     * Deletes the given note.","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"     * The note must exist in the note list.","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    void deleteNote(Note target);","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"     * Clears todo list.","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"    void clearTodo(ReadOnlyAddressBook internEase);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"     * Clears note list.","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    void clearNote(ReadOnlyAddressBook internEase);","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"     * Adds the given application.","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"     * {@code InternshipApplication} must not already exist in the tracker.","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"    void addApplication(InternshipApplication application);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"     * Adds the given todo.","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     * {@code todo} must not already exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    void addTodo(InternshipTodo todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"     * Adds the given note.","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"     * {@code note} must not already exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"    void addNote(Note note);","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"     * Replaces the given person {@code target} with {@code editedApplication}.","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"     * The application identity of {@code editedApplication} must not be the","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"     * same as another existing application in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"    void setApplication(InternshipApplication target, InternshipApplication editedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the given todo {@code target} with {@code editedTodo}.","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"     * The identity of {@code editedTodo} must not be the same as another existing todo in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"    void setTodo(InternshipTodo target, InternshipTodo editedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the given note {@code target} with {@code editedNote}.","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"laihuiqi"},"content":"     * The identity of {@code editedNote} must not be the same as another existing note in the tracker.","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"laihuiqi"},"content":"    void setNote(Note target, Note editedNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"    ObservableList\u003cInternshipApplication\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"laihuiqi"},"content":"    /** Returns an unmodifiable view of the filtered todo list */","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"laihuiqi"},"content":"    ObservableList\u003cInternshipTodo\u003e getFilteredTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"laihuiqi"},"content":"    /** Returns an unmodifiable view of the filtered note list */","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"laihuiqi"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternshipApplication\u003e predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"     * Updates the filter of the filtered todo list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"    void updateFilteredTodoList(Predicate\u003cInternshipTodo\u003e predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"     * Updates the filter of the filtered note list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"    void updateFilteredNoteList(Predicate\u003cNote\u003e predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"laihuiqi":93,"zm-l":31,"-":86}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    private final FilteredList\u003cInternshipApplication\u003e filteredInternships;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    private final FilteredList\u003cInternshipTodo\u003e filteredTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private final FilteredList\u003cNote\u003e filteredNote;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.addressBook.getInternshipList());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        filteredTodo \u003d new FilteredList\u003c\u003e(this.addressBook.getTodoList());","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        filteredNote \u003d new FilteredList\u003c\u003e(this.addressBook.getNoteList());","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"    public void setInternEase(ReadOnlyAddressBook internEase) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"        this.addressBook.resetData(internEase);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"    public boolean hasApplication(InternshipApplication application) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"        requireNonNull(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"        return addressBook.hasApplication(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    public boolean hasTodo(InternshipTodo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"        return addressBook.hasTodo(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"        return addressBook.hasNote(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    public void deleteInternship(InternshipApplication application) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"        addressBook.removeApplication(application);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    public void deleteTodo(InternshipTodo target) {","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"        addressBook.removeTodo(target);","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"    public void deleteNote(Note target) {","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"        addressBook.removeNote(target);","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"    public void clearTodo(ReadOnlyAddressBook internEase) {","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"        addressBook.clearTodo(internEase);","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"    public void clearNote(ReadOnlyAddressBook internEase) {","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"        addressBook.clearNote(internEase);","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"    public void addApplication(InternshipApplication application) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"        addressBook.addApplication(application);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"laihuiqi"},"content":"    public void addTodo(InternshipTodo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"laihuiqi"},"content":"        addressBook.addTodo(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"laihuiqi"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"laihuiqi"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"laihuiqi"},"content":"        addressBook.addNote(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"laihuiqi"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":177,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"    public void setApplication(InternshipApplication target, InternshipApplication editedApplication) {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"        requireAllNonNull(target, editedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"zm-l"},"content":"        addressBook.setApplication(target, editedApplication);","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":191,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(InternshipTodo target, InternshipTodo editedTodo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"laihuiqi"},"content":"        addressBook.setTodo(target, editedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"laihuiqi"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(target, editedNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"laihuiqi"},"content":"        addressBook.setNote(target, editedNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":212,"author":{"gitId":"zm-l"},"content":"    public ObservableList\u003cInternshipApplication\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"zm-l"},"content":"        return filteredInternships;","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"zm-l"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternshipApplication\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"zm-l"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"zm-l"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cInternshipTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"laihuiqi"},"content":"        return filteredTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"laihuiqi"},"content":"    public void updateFilteredTodoList(Predicate\u003cInternshipTodo\u003e predicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"laihuiqi"},"content":"        filteredTodo.setPredicate(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"laihuiqi"},"content":"        return filteredNote;","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":237,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":239,"author":{"gitId":"laihuiqi"},"content":"    public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"laihuiqi"},"content":"        filteredNote.setPredicate(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jianminglok":1,"laihuiqi":94,"zm-l":31,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.InternshipTodo;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.todo.Note;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    ObservableList\u003cInternshipApplication\u003e getInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    ObservableList\u003cInternshipTodo\u003e getTodoList();","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    ObservableList\u003cNote\u003e getNoteList();","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"laihuiqi":4,"zm-l":2,"-":17}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Represents a contact in the internship application.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"public class Contact {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    // Identity fields","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    private final Email email;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    public Contact(Phone phone, Email email) {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(phone, email);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        return phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        return email;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"     * Returns true if both contacts have the same identity.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"        return otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 otherContact.getEmail().equals(getEmail());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        return Objects.hash(phone, email);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"        String builder \u003d \"Phone: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"                + getPhone()","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"                + \"; Email: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"                + getEmail();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"        return builder;","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jianminglok":68}},{"path":"src/main/java/seedu/address/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":" * Represents a company\u0027s email in the internship application.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class Email {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    public final String value;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"     * @param email A valid email address.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    public Email(String email) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        value \u003d email;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jianminglok":71}},{"path":"src/main/java/seedu/address/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":" * Represents a company\u0027s phone number in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class Phone {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    public final String value;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    public Phone(String phone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"        value \u003d phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jianminglok":53}},{"path":"src/main/java/seedu/address/model/person/CompanyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":" * Represents an InternshipApplication\u0027s companyName in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class CompanyName {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"            \"Company Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    public CompanyName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        return fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof CompanyName // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 fullName.equals(((CompanyName) other).fullName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"laihuiqi":2,"zm-l":57}},{"path":"src/main/java/seedu/address/model/person/InternshipApplication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":" * Represents an InternshipApplication in the tracker.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"public class InternshipApplication {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"    // Identity fields","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"benjamin-wee"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    private final InternshipStatus status;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    // Data fields","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    private final Contact contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    public InternshipApplication(CompanyName name, JobTitle job) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"        requireAllNonNull(name, job);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"        this.status \u003d InternshipStatus.NA;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, Contact contact) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(name, job);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"        this.status \u003d InternshipStatus.NA;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"benjamin-wee"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"benjamin-wee"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, Contact contact, InterviewDate interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"benjamin-wee"},"content":"        requireAllNonNull(name, job);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"benjamin-wee"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"benjamin-wee"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"benjamin-wee"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"benjamin-wee"},"content":"        this.status \u003d InternshipStatus.NA;","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, InternshipStatus status) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(name, job, status);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"benjamin-wee"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"benjamin-wee"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, InternshipStatus status, InterviewDate interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"benjamin-wee"},"content":"        requireAllNonNull(name, job, status);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"benjamin-wee"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"benjamin-wee"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"benjamin-wee"},"content":"        this.contact \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"benjamin-wee"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, Contact contact, InternshipStatus status) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(name, job, contact, status);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"benjamin-wee"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"benjamin-wee"},"content":"    public InternshipApplication(CompanyName name, JobTitle job, Contact contact, InternshipStatus status,","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"benjamin-wee"},"content":"                                 InterviewDate interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"benjamin-wee"},"content":"        requireAllNonNull(name, job, contact, status, interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"benjamin-wee"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"benjamin-wee"},"content":"        this.jobTitle \u003d job;","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"benjamin-wee"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"benjamin-wee"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"    public CompanyName getCompanyName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"        return companyName;","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"    public JobTitle getJobTitle() {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"        return jobTitle;","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"jianminglok"},"content":"    public InternshipStatus getStatus() {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"        return status;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"jianminglok"},"content":"    public Contact getContact() {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"jianminglok"},"content":"        return contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"benjamin-wee"},"content":"    public InterviewDate getInterviewDate() {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"benjamin-wee"},"content":"        return interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"jianminglok"},"content":"     * Returns true if both internship applications have the same company name and job title.","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"jianminglok"},"content":"     * This defines a weaker notion of equality between two internship applications.","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"    public boolean isSameApplication(InternshipApplication otherApplication) {","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"        if (otherApplication \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"        return otherApplication !\u003d null","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"                \u0026\u0026 otherApplication.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"                \u0026\u0026 otherApplication.getJobTitle().equals(getJobTitle());","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"jianminglok"},"content":"     * Returns true if both internship applications have the same identity and data fields.","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"jianminglok"},"content":"     * This defines a stronger notion of equality between two internship applications.","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"        if (!(other instanceof InternshipApplication)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"        InternshipApplication otherApplication \u003d (InternshipApplication) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"        return otherApplication.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 otherApplication.getJobTitle().equals(getJobTitle())","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"jianminglok"},"content":"                \u0026\u0026 otherApplication.getStatus().equals(getStatus());","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"zm-l"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"zm-l"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"zm-l"},"content":"        return Objects.hash(companyName, jobTitle);","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"zm-l"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"zm-l"},"content":"        builder.append(getCompanyName())","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"zm-l"},"content":"                .append(\"; Job Title: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"jianminglok"},"content":"                .append(getJobTitle())","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"jianminglok"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"jianminglok"},"content":"                .append(getStatus());;","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"zm-l"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"jianminglok"},"content":"        if (contact !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"jianminglok"},"content":"            builder.append(\"; Company Phone: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"jianminglok"},"content":"                    .append(contact.getPhone())","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"jianminglok"},"content":"                    .append(\"; Company Email: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"jianminglok"},"content":"                    .append(contact.getEmail());","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"benjamin-wee"},"content":"        if (interviewDate !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"benjamin-wee"},"content":"            builder.append(\"; Interview Date: \")","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"benjamin-wee"},"content":"                    .append(getInterviewDate());","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":206,"author":{"gitId":"zm-l"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"benjamin-wee":51,"jianminglok":57,"laihuiqi":2,"zm-l":99}},{"path":"src/main/java/seedu/address/model/person/InternshipStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":" * Represents the possible statuses for an internship application.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"public enum InternshipStatus {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"    NA,","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"    PENDING,","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"    RECEIVED,","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"    REJECTED,","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    NO;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"            \"Status can only be of one of the following five types: NA, PENDING, RECEIVED, REJECTED or NO\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"     * Checks whether the String passed is a valid application status","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"     * @param test String to check","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"     * @return Boolean indicating whether the String is a valid status","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"        InternshipStatus[] internshipStatuses \u003d InternshipStatus.values();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        for (InternshipStatus internshipStatus : internshipStatuses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"            if (internshipStatus.name().equals(test)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"                return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"        return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":30}},{"path":"src/main/java/seedu/address/model/person/InterviewDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benjamin-wee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"benjamin-wee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"benjamin-wee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"benjamin-wee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"benjamin-wee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"benjamin-wee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"benjamin-wee"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"benjamin-wee"},"content":" * Represents an InternshipApplication\u0027s interviewDate in the tracker.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"benjamin-wee"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"benjamin-wee"},"content":"public class InterviewDate {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"benjamin-wee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interview dates should be of the format \u0027MM/dd/yyyy hh:mm a\u0027.\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"benjamin-wee"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy hh:mm a\");","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"benjamin-wee"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"benjamin-wee"},"content":"     * Constructs an {@code InterviewDate}.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"benjamin-wee"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"benjamin-wee"},"content":"     * @param interviewDate A valid date-string.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"benjamin-wee"},"content":"    public InterviewDate(String interviewDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"benjamin-wee"},"content":"        requireNonNull(interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"benjamin-wee"},"content":"        checkArgument(isValidInterviewDate(interviewDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"benjamin-wee"},"content":"        value \u003d LocalDateTime.parse(interviewDate, FORMATTER);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"benjamin-wee"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"benjamin-wee"},"content":"     * returns if a given LocalDateTime is valid or null (ie interviewDate has not been added).","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"benjamin-wee"},"content":"    public static boolean isValidInterviewDate(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"benjamin-wee"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"benjamin-wee"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"benjamin-wee"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"            LocalDateTime.parse(test, FORMATTER);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"benjamin-wee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"benjamin-wee"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"benjamin-wee"},"content":"        return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"benjamin-wee"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"benjamin-wee"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"benjamin-wee"},"content":"        return value.format(FORMATTER);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"benjamin-wee"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"benjamin-wee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"benjamin-wee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"benjamin-wee"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"benjamin-wee"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"benjamin-wee"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"benjamin-wee"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"benjamin-wee"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"benjamin-wee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"benjamin-wee"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"benjamin-wee":60}},{"path":"src/main/java/seedu/address/model/person/JobTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":" * Represents an InternshipApplication\u0027s jobTitle in the tracker.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobTitle(String)}","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"public class JobTitle {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"            \"Job titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    public JobTitle(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"        checkArgument(isValidJobTitle(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"    public static boolean isValidJobTitle(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        return fullName;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof JobTitle // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 fullName.equals(((JobTitle) other).fullName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"laihuiqi":2,"zm-l":56}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"jiasheng59"},"content":" * Tests that an {@code InternshipApplication}\u0027s {@code CompanyName}","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiasheng59"},"content":" * and {@code JobTitle} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jiasheng59"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cInternshipApplication\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jiasheng59"},"content":"    public boolean test(InternshipApplication internshipApplication) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jiasheng59"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiasheng59"},"content":"                        internshipApplication.getCompanyName().toString()","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiasheng59"},"content":"                                + \" \" + internshipApplication.getJobTitle().toString(),","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiasheng59"},"content":"                        keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jiasheng59":8,"-":27}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    // To be removed once Person class is updated","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    private static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"    private static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    // To be removed once Person class is updated","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"    public Person(Name name, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(name, address, tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"        this.phone \u003d new Phone(VALID_PHONE_PLACEHOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"        this.email \u003d new Email(VALID_EMAIL_PLACEHOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"    public Person(Name name, Address address, Set\u003cTag\u003e tags, Contact contact) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        requireAllNonNull(name, address, tags, contact);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"        this.phone \u003d new Phone(VALID_PHONE_PLACEHOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"        this.email \u003d new Email(VALID_EMAIL_PLACEHOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"    public Contact getContact() {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"        return contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"    public void setContact(Contact contact) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"jianminglok"},"content":"        if (contact !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"jianminglok"},"content":"            builder.append(\"; Company Phone: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"jianminglok"},"content":"                    .append(contact.getPhone())","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"jianminglok"},"content":"                    .append(\"; Company Email: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"jianminglok"},"content":"                    .append(contact.getEmail());","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jianminglok":49,"-":123}},{"path":"src/main/java/seedu/address/model/person/UniqueApplicationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":" * A list of InternshipApplications that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":" * An InternshipApplication is considered unique by comparing using","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":" * {@code InternshipApplication#isSameApplication(InternshipApplication)}. As such, adding and updating of","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":" * persons uses InternshipApplication#isSameApplication(InternshipApplication) for equality","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":" * so as to ensure that the person being added or updated is unique in terms of identity in the UniquePersonList.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":" * However, the removal of a person uses InternshipApplication#equals(Object) so","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":" * as to ensure that the InternshipApplication with exactly the same fields will be removed.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"public class UniqueApplicationList implements Iterable\u003cInternshipApplication\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    private final ObservableList\u003cInternshipApplication\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"    private final ObservableList\u003cInternshipApplication\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"     * Returns true if the list contains an equivalent application as the given argument.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    public boolean contains(InternshipApplication toCheck) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplication);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"     * Adds an application to the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"     * The application must not already exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"    public void add(InternshipApplication toAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"     * Replaces the application {@code target} in the list with {@code editedApplication}.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"     * The person identity of {@code editedApplication} must not be the same","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"     * as another existing application in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"    public void setApplication(InternshipApplication target, InternshipApplication editedPerson) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"        if (!target.isSameApplication(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"    public void remove(InternshipApplication toRemove) {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"    public void setApplications(UniqueApplicationList replacement) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"    public void setApplications(List\u003cInternshipApplication\u003e applications) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"        requireAllNonNull(applications);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"        if (!applicationsAreUnique(applications)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"        internalList.setAll(applications);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"    public ObservableList\u003cInternshipApplication\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"    public Iterator\u003cInternshipApplication\u003e iterator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"                || (other instanceof UniqueApplicationList // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"                \u0026\u0026 internalList.equals(((UniqueApplicationList) other).internalList));","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"    private boolean applicationsAreUnique(List\u003cInternshipApplication\u003e persons) {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"                if (persons.get(i).isSameApplication(persons.get(j))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"                    return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"                }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zm-l":138}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Signals that the operation will result in duplicate Note (Notes are considered duplicates if they have the same","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" * content).","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class DuplicateNoteException extends RuntimeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    public DuplicateNoteException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"        super(\"Operation would result in duplicate notes\");","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Signals that the operation will result in duplicate Todo (Todos are considered duplicates if they have the same","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" * title or company name).","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"public class DuplicateTodoException extends RuntimeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    public DuplicateTodoException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"        super(\"Operation would result in duplicate todos\");","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":11}},{"path":"src/main/java/seedu/address/model/tag/TodoType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":" * Represents the possible statuses for an auto assigned type of data.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"public enum TodoType {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"    TODO,","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    NOTE,","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    NONE","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":10}},{"path":"src/main/java/seedu/address/model/todo/ApplicationDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" * Represents an ApplicationDeadline in the planner.","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class ApplicationDeadline {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input date is invalid, it should be today(%s) onwards\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    public final LocalDate applicationDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Constructs a {@code ApplicationDeadline}.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    public ApplicationDeadline(LocalDate date) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        checkArgument(isValidDate(date), String.format(MESSAGE_CONSTRAINTS, LocalDate.now()));","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        applicationDeadline \u003d date;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        fullName \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, EEEE\").format(date);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public static boolean isValidDate(LocalDate test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        return !test.isBefore(LocalDate.now());","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        return fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof seedu.address.model.todo.ApplicationDeadline","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 applicationDeadline.equals(((","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"                        seedu.address.model.todo.ApplicationDeadline) other).applicationDeadline));","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        return applicationDeadline.hashCode();","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":57}},{"path":"src/main/java/seedu/address/model/todo/ContentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Tests that an {@code InternshipApplication}\u0027s {@code CompanyName}","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" * and {@code JobTitle} matches any of the keywords given.","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"public class ContentContainsKeywordsPredicate implements Predicate\u003cNote\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public ContentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public boolean test(Note note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(note.getNote().toString(), keyword));","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof ContentContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 keywords.equals(((ContentContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":32}},{"path":"src/main/java/seedu/address/model/todo/InternshipTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.tag.TodoType;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":" * Represents an Interested Internship Programme in the planner.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"public class InternshipTodo {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    // To be removed once Person class is updated","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    private static final String VALID_NOTE_PLACEHOLDER \u003d \"No note content yet\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    // Identity fields","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    private final CompanyName title;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    private final TodoType type;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    //Optional field","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    private ApplicationDeadline deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private NoteContent note;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    public InternshipTodo(CompanyName title, JobTitle jobTitle, ApplicationDeadline deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(title, jobTitle, deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        this.note \u003d new NoteContent(VALID_NOTE_PLACEHOLDER);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"        this.type \u003d TodoType.TODO;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    public InternshipTodo(CompanyName title, JobTitle jobTitle, ApplicationDeadline deadline, NoteContent note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(title, jobTitle, deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        this.type \u003d TodoType.TODO;","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    public CompanyName getInternshipTitle() {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        return title;","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"    public JobTitle getJobTitle() {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        return jobTitle;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"    public ApplicationDeadline getDeadline() {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        return deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"    public NoteContent getNote() {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        return note;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"        return date;","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"    public TodoType getType() {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"        return type;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    public void setDeadline(ApplicationDeadline deadline) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    public void setNote(NoteContent note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if both interested internship have the same title.","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"    public boolean isSameTodo(InternshipTodo otherInternship) {","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherInternship.getInternshipTitle().equals(getInternshipTitle());","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if both interested internships have the same fields.","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * This defines a stronger notion of equality between two internships.","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"        if (!(other instanceof InternshipTodo)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"        InternshipTodo otherCompany \u003d (InternshipTodo) other;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"        return otherCompany.getInternshipTitle().equals(getInternshipTitle())","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherCompany.getJobTitle().equals(getJobTitle())","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherCompany.getDeadline().equals(getDeadline())","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherCompany.getNote().equals(getNote())","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherCompany.getDate().equals(getDate());","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"        return Objects.hash(title, jobTitle, deadline, note, date);","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"        builder.append(getType())","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"                .append(\"; Create Date: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"                .append(getDate());","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"        if (title.fullName !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"            builder.append(\"; CompanyName: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"                    .append(getInternshipTitle())","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"                    .append(\"; Job Title: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"                    .append(getJobTitle());","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"laihuiqi"},"content":"        if (!deadline.fullName.equals(DateTimeFormatter.ofPattern(\"dd MMM yyyy, EEEE\").format(LocalDate.MAX))) {","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"laihuiqi"},"content":"            builder.append(\"; Deadline: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"laihuiqi"},"content":"                    .append(getDeadline());","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"laihuiqi"},"content":"        if (!note.content.equals(VALID_NOTE_PLACEHOLDER)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"laihuiqi"},"content":"            builder.append(\"; Note: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"laihuiqi"},"content":"                    .append(getNote());","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"laihuiqi"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":158}},{"path":"src/main/java/seedu/address/model/todo/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.tag.TodoType;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" * Provides a note object for planner.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"public class Note {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    // Identity fields","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    private final TodoType type;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    private NoteContent note;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    public Note(NoteContent note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        this.type \u003d TodoType.NOTE;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    public NoteContent getNote() {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        return note;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        return date;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    public TodoType getType() {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        return type;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    public void setNote(NoteContent note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if both interested internship have the same title.","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"    public boolean isSameNote(Note otherNote) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        if (otherNote \u003d\u003d this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        return otherNote !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherNote.getNote().equals(getNote());","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if both interested internships have the same fields.","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"     * This defines a stronger notion of equality between two internships.","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"        Note otherCompany \u003d (Note) other;","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        return otherCompany.getNote().equals(getNote())","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 otherCompany.getDate().equals(getDate());","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"        return Objects.hash(note, date);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"        return getType() + \"; Create Date: \" + getDate() + \"; Note: \" + getNote();","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":89}},{"path":"src/main/java/seedu/address/model/todo/NoteContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" * Represents a QuickNote\u0027s content in the planner.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContent(String)}","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class NoteContent {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note content should not be blank.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"    public static final String VALIDATION_REGEX \u003d \"^.+$\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public final String content;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"     * Constructs a {@code NoteContent}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public NoteContent(String note) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        checkArgument(isValidContent(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        content \u003d note;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public static boolean isValidContent(String test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        return content;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof seedu.address.model.todo.NoteContent // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 content.equals(((seedu.address.model.todo.NoteContent) other).content)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        return content.hashCode();","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":57}},{"path":"src/main/java/seedu/address/model/todo/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":" * Represents a Internship\u0027s title in the planner.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"public class Title {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"            \"Internship title should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public Title(String title) {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        fullName \u003d title;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        return fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 fullName.equals(((Title) other).fullName)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":60}},{"path":"src/main/java/seedu/address/model/todo/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":" * Tests that an {@code InternshipApplication}\u0027s {@code CompanyName}","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":" * and {@code JobTitle} matches any of the keywords given.","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cInternshipTodo\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"    public boolean test(InternshipTodo todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"                        todo.getInternshipTitle().toString()","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"                                + \" \" + todo.getJobTitle().toString(),","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"                        keyword));","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":35}},{"path":"src/main/java/seedu/address/model/todo/UniqueNoteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.DuplicateNoteException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" * A list of InternshipApplications that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":" * An InternshipApplication is considered unique by comparing using","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":" * {@code InternshipApplication#isSameApplication(InternshipApplication)}. As such, adding and updating of","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":" * persons uses InternshipApplication#isSameApplication(InternshipApplication) for equality","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":" * so as to ensure that the person being added or updated is unique in terms of identity in the UniquePersonList.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * However, the removal of a person uses InternshipApplication#equals(Object) so","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" * as to ensure that the InternshipApplication with exactly the same fields will be removed.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"public class UniqueNoteList implements Iterable\u003cNote\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private final ObservableList\u003cNote\u003e internalNoteList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private final ObservableList\u003cNote\u003e internalUnmodifiableNoteList \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            FXCollections.unmodifiableObservableList(internalNoteList);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if the list contains an equivalent note as the given argument.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"    public boolean containsNote(Note toCheck) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        return internalNoteList.stream().anyMatch(toCheck::isSameNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * Adds a note to the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     * The note must not already exist in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"    public void addNote(Note toAdd) {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        if (containsNote(toAdd)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicateNoteException();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        internalNoteList.add(toAdd);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the application {@code target} in the list with {@code editedApplication}.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * The person identity of {@code editedApplication} must not be the same","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     * as another existing application in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"     * @param target","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     * @param editedNote","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"    public void setNotes(Note target, Note editedNote) {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(target, editedNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        int index \u003d internalNoteList.indexOf(target);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"        if (!target.isSameNote(editedNote) \u0026\u0026 containsNote(editedNote)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"        internalNoteList.set(index, editedNote);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"    public void setNotes(UniqueNoteList replacement) {","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"        internalNoteList.setAll(replacement.internalNoteList);","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"     * @param notes","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"    public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(notes);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"        if (!notesAreUnique(notes)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicateNoteException();","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"        internalNoteList.setAll(notes);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"    public void remove(Note toRemove) {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"        if (!internalNoteList.remove(toRemove)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cNote\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        return internalUnmodifiableNoteList;","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    public Iterator\u003cNote\u003e iterator() {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"        return internalNoteList.iterator();","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof UniqueNoteList // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 internalNoteList.equals(((UniqueNoteList) other).internalNoteList));","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"        return internalNoteList.hashCode();","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if {@code notes} contains only unique notes.","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"    private boolean notesAreUnique(List\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"        for (int i \u003d 0; i \u003c notes.size() - 1; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"            for (int j \u003d i + 1; j \u003c notes.size(); j++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"                if (notes.get(i).isSameNote(notes.get(j))) {","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"                    return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":145}},{"path":"src/main/java/seedu/address/model/todo/UniqueTodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.DuplicateTodoException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" * A list of InternshipApplications that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":" * An InternshipApplication is considered unique by comparing using","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":" * {@code InternshipApplication#isSameApplication(InternshipApplication)}. As such, adding and updating of","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":" * persons uses InternshipApplication#isSameApplication(InternshipApplication) for equality","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":" * so as to ensure that the person being added or updated is unique in terms of identity in the UniquePersonList.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":" * However, the removal of a person uses InternshipApplication#equals(Object) so","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":" * as to ensure that the InternshipApplication with exactly the same fields will be removed.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":" *","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"public class UniqueTodoList implements Iterable\u003cInternshipTodo\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"    private final ObservableList\u003cInternshipTodo\u003e internalTodoList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"    private final ObservableList\u003cInternshipTodo\u003e internalUnmodifiableTodoList \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"            FXCollections.unmodifiableObservableList(internalTodoList);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if the list contains an equivalent todo as the given argument.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"    public boolean containsTodo(InternshipTodo toCheck) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"        return internalTodoList.stream().anyMatch(toCheck::isSameTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"     * Adds a todo to the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"     * The todo must not already exist in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"    public void addTodo(InternshipTodo toAdd) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"        if (containsTodo(toAdd)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        internalTodoList.add(toAdd);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the application {@code target} in the list with {@code editedApplication}.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"     * The person identity of {@code editedApplication} must not be the same","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"     * as another existing application in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"     * @param target","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"     * @param editedTodo","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(InternshipTodo target, InternshipTodo editedTodo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"        int index \u003d internalTodoList.indexOf(target);","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        if (!target.isSameTodo(editedTodo) \u0026\u0026 containsTodo(editedTodo)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"        internalTodoList.set(index, editedTodo);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(UniqueTodoList replacement) {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"laihuiqi"},"content":"        internalTodoList.setAll(replacement.internalTodoList);","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"laihuiqi"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"laihuiqi"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"laihuiqi"},"content":"     * @param todo","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"laihuiqi"},"content":"    public void setTodo(List\u003cInternshipTodo\u003e todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"laihuiqi"},"content":"        requireAllNonNull(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"laihuiqi"},"content":"        if (!todoAreUnique(todo)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"laihuiqi"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"laihuiqi"},"content":"        internalTodoList.setAll(todo);","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"laihuiqi"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"laihuiqi"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"laihuiqi"},"content":"    public void remove(InternshipTodo toRemove) {","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"laihuiqi"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"laihuiqi"},"content":"        if (!internalTodoList.remove(toRemove)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"laihuiqi"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"laihuiqi"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    public ObservableList\u003cInternshipTodo\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"        return internalUnmodifiableTodoList;","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"laihuiqi"},"content":"    public Iterator\u003cInternshipTodo\u003e iterator() {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"        return internalTodoList.iterator();","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"laihuiqi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"laihuiqi"},"content":"                || (other instanceof UniqueTodoList // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"                \u0026\u0026 internalTodoList.equals(((UniqueTodoList) other).internalTodoList));","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"laihuiqi"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"laihuiqi"},"content":"        return internalTodoList.hashCode();","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"laihuiqi"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"laihuiqi"},"content":"    private boolean todoAreUnique(List\u003cInternshipTodo\u003e todo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"laihuiqi"},"content":"        for (int i \u003d 0; i \u003c todo.size() - 1; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"laihuiqi"},"content":"            for (int j \u003d i + 1; j \u003c todo.size(); j++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"laihuiqi"},"content":"                if (todo.get(i).isSameTodo(todo.get(j))) {","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"laihuiqi"},"content":"                    return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"laihuiqi"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"laihuiqi"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"laihuiqi"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"laihuiqi":143}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInternshipApplication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":" * Jackson-friendly version of {@link seedu.address.model.person.InternshipApplication}.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"public class JsonAdaptedInternshipApplication {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship application \u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    private final String companyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    private final String jobTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    private final List\u003cString\u003e contact \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"    private final String status;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"benjamin-wee"},"content":"    private final String interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"     * Constructs a {@code JsonAdaptedInternshipApplication} with the given InternshipApplication details.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    public JsonAdaptedInternshipApplication(@JsonProperty(\"companyName\") String companyName,","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"                                            @JsonProperty(\"jobTitle\") String jobTitle,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"                                            @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"benjamin-wee"},"content":"                                            @JsonProperty(\"interviewDate\") String interviewDate,","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"                                            @JsonProperty(\"contact\") List\u003cString\u003e contact) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"        if (contact !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"            this.contact.addAll(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"benjamin-wee"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"     * Converts a given {@code InternshipApplication} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"    public JsonAdaptedInternshipApplication(InternshipApplication source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"        companyName \u003d source.getCompanyName().fullName;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"        jobTitle \u003d source.getJobTitle().fullName;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"        if (source.getContact() !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"            contact.add(source.getContact().getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"            contact.add(source.getContact().getEmail().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"benjamin-wee"},"content":"        if (source.getInterviewDate() !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"benjamin-wee"},"content":"            interviewDate \u003d source.getInterviewDate().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"benjamin-wee"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"benjamin-wee"},"content":"            interviewDate \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"     * Converts this Jackson-friendly adapted InternshipApplication object","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"     * into the model\u0027s {@code InternshipApplication} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted InternshipApplication.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"    public InternshipApplication toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"                                                            CompanyName.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"        if (!CompanyName.isValidName(companyName)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"            throw new IllegalValueException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"        final CompanyName modelCompanyName \u003d new CompanyName(companyName);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"        if (jobTitle \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"                                                            JobTitle.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"        if (!JobTitle.isValidJobTitle(jobTitle)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"            throw new IllegalValueException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"        final JobTitle modelJobTitle \u003d new JobTitle(jobTitle);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"                    InternshipStatus.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"        if (!InternshipStatus.isValidStatus(status)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"            throw new IllegalValueException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"        final InternshipStatus modelStatus \u003d InternshipStatus.valueOf(status);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"benjamin-wee"},"content":"        if (!InterviewDate.isValidInterviewDate(interviewDate)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"benjamin-wee"},"content":"            throw new IllegalValueException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"benjamin-wee"},"content":"        final InterviewDate modelInterviewDate \u003d interviewDate \u003d\u003d null ? null : new InterviewDate(interviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"benjamin-wee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"        if (contact.size() \u003d\u003d 2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"            if (!Phone.isValidPhone(contact.get(0))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"                throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"            final Phone modelPhone \u003d new Phone(contact.get(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"            if (!Email.isValidEmail(contact.get(1))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"            final Email modelEmail \u003d new Email(contact.get(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"            final Contact modelContact \u003d new Contact(modelPhone, modelEmail);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"benjamin-wee"},"content":"            if (modelInterviewDate !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"benjamin-wee"},"content":"                return new InternshipApplication(modelCompanyName, modelJobTitle, modelContact, modelStatus,","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"benjamin-wee"},"content":"                        modelInterviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"benjamin-wee"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"jianminglok"},"content":"                return new InternshipApplication(modelCompanyName, modelJobTitle, modelContact, modelStatus);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"benjamin-wee"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"benjamin-wee"},"content":"        } else if (modelInterviewDate !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"benjamin-wee"},"content":"            return new InternshipApplication(modelCompanyName, modelJobTitle, modelStatus, modelInterviewDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"jianminglok"},"content":"            return new InternshipApplication(modelCompanyName, modelJobTitle, modelStatus);","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"benjamin-wee":21,"jianminglok":52,"zm-l":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    private final List\u003cString\u003e contact \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"                             @JsonProperty(\"contact\") List\u003cString\u003e contact) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"        if (contact !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"            this.contact.addAll(contact);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"        if (source.getContact() !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"            contact.add(source.getContact().getPhone().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"            contact.add(source.getContact().getEmail().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"        if (contact.size() \u003d\u003d 2) {","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"            if (!Phone.isValidPhone(contact.get(0))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"                throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"            final Phone modelPhone \u003d new Phone(contact.get(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"            if (!Email.isValidEmail(contact.get(1))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"            final Email modelEmail \u003d new Email(contact.get(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"            final Contact modelContact \u003d new Contact(modelPhone, modelEmail);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"            return new Person(modelName, modelAddress, modelTags, modelContact);","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"            return new Person(modelName, modelAddress, modelTags);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jianminglok":30,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Internship Application list \"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"                                                        + \"contains duplicate InternshipApplication(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"    private final List\u003cJsonAdaptedInternshipApplication\u003e applications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given applications.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"applications\")","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"                                            List\u003cJsonAdaptedInternshipApplication\u003e applications) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"        this.applications.addAll(applications);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"        applications.addAll(source.getInternshipList().stream().map(","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"                                                JsonAdaptedInternshipApplication::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"        for (JsonAdaptedInternshipApplication jsonAdaptedInternshipApplication : applications) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"            InternshipApplication application \u003d jsonAdaptedInternshipApplication.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"            if (addressBook.hasApplication(application)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"            addressBook.addApplication(application);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zm-l":14,"-":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredInternshipList());","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"laihuiqi"},"content":"            ResultDialog.displayResultDialog(commandResult.getFeedbackToUser(), primaryStage);","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"laihuiqi":1,"zm-l":1,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"benjamin-wee"},"content":"import seedu.address.model.person.InterviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"    public final InternshipApplication application;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"    private Label companyName;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"    private Label jobTitle;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    private Label internshipStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"benjamin-wee"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"benjamin-wee"},"content":"    private Label interviewDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"    public PersonCard(InternshipApplication application, int displayedIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"        this.application \u003d application;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"        companyName.setText(application.getCompanyName().fullName);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"        jobTitle.setText(application.getJobTitle().fullName);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"        internshipStatus.setText(application.getStatus().name());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"        Contact companyContact \u003d application.getContact();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"        if (companyContact !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"            email.setText(companyContact.getEmail().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"            phone.setText(companyContact.getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"            email.setVisible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"            phone.setVisible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"            email.setManaged(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"            phone.setManaged(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"benjamin-wee"},"content":"        InterviewDate interviewDateStr \u003d application.getInterviewDate();","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"benjamin-wee"},"content":"        if (interviewDateStr !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"benjamin-wee"},"content":"            interviewDate.setText(interviewDateStr.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"benjamin-wee"},"content":"            interviewDate.setVisible(true);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"benjamin-wee"},"content":"            interviewDate.setManaged(true);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"benjamin-wee"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"                \u0026\u0026 application.equals(card.application);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benjamin-wee":9,"jianminglok":13,"zm-l":11,"-":63}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"    private ListView\u003cInternshipApplication\u003e applicationListView;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"    public PersonListPanel(ObservableList\u003cInternshipApplication\u003e applicationList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"        applicationListView.setItems(applicationList);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"        applicationListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"    class PersonListViewCell extends ListCell\u003cInternshipApplication\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"        protected void updateItem(InternshipApplication application, boolean empty) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"            super.updateItem(application, empty);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"            if (empty || application \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"                setGraphic(new PersonCard(application, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zm-l":10,"-":39}},{"path":"src/main/java/seedu/address/ui/ResultDialog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":" * The UI component that is responsible for outputting the result of user requests.","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"public class ResultDialog {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"    private static final ImageView warningImgPath \u003d new ImageView(\"/images/icon-warning.png\");","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"    private static String resultMessage;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"    private static Stage primaryStage;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"     * Creates a {@code ResultDialog} with the given {@code String}.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"    public static void displayResultDialog(String resultMsg, Stage stage) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        resultMessage \u003d resultMsg;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        primaryStage \u003d stage;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        showResult();","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"    private static void showResult() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        final Alert result \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        setDialogStyle(result);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        displayDialog(result);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"    private static void setDialogStyle(Alert result) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        result.initOwner(primaryStage);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        result.getDialogPane().getStylesheets().add(\"view/ResultDialog.css\");","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"        result.initStyle(StageStyle.TRANSPARENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        result.initModality(Modality.NONE);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"        result.setTitle(\"Notification\");","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        result.setHeaderText(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"laihuiqi"},"content":"        result.setX(primaryStage.getX() + primaryStage.getWidth() - 1.35 * result.getDialogPane().getWidth());","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"laihuiqi"},"content":"        result.setY(0.2 * primaryStage.getHeight());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"laihuiqi"},"content":"        result.setGraphic(warningImgPath);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"laihuiqi"},"content":"        result.setContentText(resultMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"laihuiqi"},"content":"        result.getDialogPane().getScene().setFill(Color.TRANSPARENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        result.getDialogPane().lookupButton(ButtonType.OK).setVisible(false);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"laihuiqi"},"content":"        result.getDialogPane().lookup(\".button-bar\").setVisible(false);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"laihuiqi"},"content":"    private static void displayDialog(Alert result) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"laihuiqi"},"content":"        Timeline timer \u003d new Timeline(new KeyFrame(Duration.seconds(3.5), new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"            @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"laihuiqi"},"content":"            public void handle(ActionEvent event) {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"laihuiqi"},"content":"                result.setResult(ButtonType.OK);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"                result.close();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        }));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"laihuiqi"},"content":"        timer.setCycleCount(1);","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"laihuiqi"},"content":"        timer.play();","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"laihuiqi"},"content":"        result.showAndWait();","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"laihuiqi":73}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"        \u003cLabel fx:id\u003d\"companyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"      \u003cLabel fx:id\u003d\"jobTitle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$jobTitle\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"      \u003cLabel fx:id\u003d\"internshipStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$internshipStatus\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"benjamin-wee"},"content":"      \u003cLabel fx:id\u003d\"interviewDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interviewDate\" visible\u003d\"false\" managed\u003d\"false\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" visible\u003d\"false\" managed\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benjamin-wee":1,"jianminglok":3,"zm-l":2,"-":31}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"  \u003cListView fx:id\u003d\"applicationListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zm-l":1,"-":7}},{"path":"src/main/resources/view/ResultDialog.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":".dialog-pane {","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"    -fx-background-radius: 8;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"    -fx-effect: dropshadow( gaussian , rgba(0,0,0,0.7) , 10,0,0,1);","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":".dialog-pane \u003e .content.label {","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"    -fx-font-family: Georgia;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"    -fx-text-fill: #023047;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":".dialog-pane:hover {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"    -fx-background-color: #cecece;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"laihuiqi":17}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.util.HashMap;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.util.Map;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import javafx.application.Application;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//public class AppParametersTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        expected.setConfigPath(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":58}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class ConfigTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    public void equalsMethod() {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        assertNotNull(defaultConfig);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":27}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.core;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class VersionTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertEquals(19, version.getMajor());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertEquals(10, version.getMinor());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertEquals(20, version.getPatch());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // boundary at 0","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        // normal values","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        // big numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        Version one;","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        Version another;","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        // Tests equality","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        // Tests different patch","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        // Tests different minor","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        // Tests different major","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        // Tests high major vs low minor","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        // Tests high patch vs low minor","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        // Tests same major minor different patch","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        // Tests early access vs not early access on same version number","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        Version one;","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        Version another;","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":135}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.core.index;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//public class IndexTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    public void createOneBasedIndex() {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//        // invalid index","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        // check equality using the same base","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//        // convert from one-based index to zero-based index","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void createZeroBasedIndex() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        // invalid index","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // check equality using the same base","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // convert from zero-based index to one-based index","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":60}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//public class AppUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    public void getImage_exitingImage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        AppUtil.checkArgument(true);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        String errorMessage \u003d \"error message\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":36}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.util.Collection;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//public class CollectionUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void requireAllNonNullVarargs() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        // no arguments","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//        // any non-empty argument list","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        // argument lists with just one null at the beginning","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // argument lists with nulls in the middle","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // argument lists with one null as the last argument","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        // null reference","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    public void requireAllNonNullCollection() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        // lists containing nulls in the front","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        // lists containing nulls in the middle","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        // lists containing nulls at the end","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        // null reference","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        // empty list","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        // list with all non-null elements","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    public void isAnyNonNull() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        requireAllNonNull(objects);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        requireAllNonNull(collection);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":108}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.logging.Level;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.Config;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//public class ConfigUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public Path tempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new Config(), actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    private Config getTypicalConfig() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        Config config \u003d new Config();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        return config;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        Config original \u003d getTypicalConfig();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        original.setLogLevel(Level.FINE);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//                                  : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":116}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class FileUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void isValidPath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        // valid path","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//        // invalid path","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        // null path -\u003e throws NullPointerException","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":23}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.TestUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"// * Tests JSON Read and Write","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//public class JsonUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        serializableTestClass.setTestValues();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":45}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//public class StringUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        // EP: empty strings","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        // EP: not a number","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        // EP: zero","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        // EP: zero as prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        // EP: signed numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        // EP: numbers with white space","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        // EP: valid numbers, should return true","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    /*","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//    /*","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//     * Valid equivalence partitions for word:","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//     *   - any word","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//     *   - word containing symbols/numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//     *   - word with leading/trailing spaces","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//     *","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//     *   - empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//     *   - one word","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//     *   - multiple words","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//     *   - sentence with extra spaces","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//     *","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//     * Possible scenarios returning true:","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//     *   - matches first word in sentence","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//     *   - last word in sentence","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//     *   - middle word in sentence","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//     *   - matches multiple words","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//     *","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//     * Possible scenarios returning false:","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//     *   - query word matches part of a sentence word","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//     *   - sentence word matches part of the query word","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//     *","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        // Empty sentence","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        // Matches a partial word only","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//        // Matches multiple words in sentence","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//    /*","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//    public void getDetails_exceptionGiven() {","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//public class LogicManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    public Path temporaryFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    private Logic logic;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertCommandException(deleteCommand, MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        // Execute add command","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//            String expectedMessage) {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//            super(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private Model model;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    public void execute_newPerson_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(new AddCommand(expectedApplication), model,","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(new AddCommand(expectedApplication), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":54}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.function.Predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//public class AddCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        CommandResult commandResult \u003d new AddCommand(expectedApplication).execute(modelStub);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        AddCommand addCommand \u003d new AddCommand(expectedApplication);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        AddCommand addAliceCommand \u003d new AddCommand(expectedApplication);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        AddCommand addBobCommand \u003d new AddCommand(expectedApplication);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        AddCommand addAliceCommandCopy \u003d new AddCommand(expectedApplication);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    private class ModelStub implements Model {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//        public void addApplication(InternshipApplication person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//        public void setInternEase(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        public boolean hasApplication(InternshipApplication application) {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//        public void deleteInternship(Person target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"//        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"zm-l"},"content":"//        public ObservableList\u003cInternshipApplication\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"zm-l"},"content":"//        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"zm-l"},"content":"//        public void updateFilteredInternshipList(Predicate\u003cInternshipApplication\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"zm-l"},"content":"//        public void addContactToInternship(Person target, Contact contact) {","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"zm-l"},"content":"//     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"zm-l"},"content":"//    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"zm-l"},"content":"//        private final Person person;","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"zm-l"},"content":"//        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"zm-l"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"zm-l"},"content":"//            this.person \u003d person;","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"zm-l"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"zm-l"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"zm-l"},"content":"//            return this.person.isSamePerson(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"zm-l"},"content":"//     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"zm-l"},"content":"//    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"zm-l"},"content":"//        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"zm-l"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"zm-l"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"zm-l"},"content":"//            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"zm-l"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"zm-l"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"zm-l"},"content":"//            personsAdded.add(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"zm-l"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"zm-l"},"content":"//            return new AddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":233}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_COMPANY_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"///**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for AddContactCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"// */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"//public class AddContactCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"//        Person contactAddedPerson \u003d new PersonBuilder().withName(VALID_NAME_BENSON)","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"//                .withTags(\"owesMoney\", \"friends\").withAddress(\"311, Clementi Ave 2, #02-25\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"//        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"//        contactAddedPerson.setContact(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"//        AddContactCommand addContactCommand \u003d new AddContactCommand(INDEX_SECOND_PERSON, contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"//        String expectedMessage \u003d String.format(AddContactCommand.MESSAGE_ADD_CONTACT_SUCCESS, contactAddedPerson","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"//                + \"\\n\" + contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"//        expectedModel.setPerson(model.getFilteredInternshipList().get(1), contactAddedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"//        assertCommandSuccess(addContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"//        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"//        Person personInFilteredList \u003d model.getFilteredInternshipList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"//        Person contactAddedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BENSON).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"//        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"//        contactAddedPerson.setContact(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"//        AddContactCommand addContactCommand \u003d new AddContactCommand(INDEX_FIRST_PERSON, contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"//        String expectedMessage \u003d String.format(AddContactCommand.MESSAGE_ADD_CONTACT_SUCCESS, contactAddedPerson","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"//                + \"\\n\" + contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"//        expectedModel.setPerson(model.getFilteredInternshipList().get(0), contactAddedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"//        assertCommandSuccess(addContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"//        final AddContactCommand standardCommand \u003d new AddContactCommand(INDEX_FIRST_PERSON, DESC_COMPANY_A","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"//                );","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"//        Contact copyContact \u003d new Contact(new Phone(VALID_PHONE_COMPANY_A), new Email(VALID_EMAIL_COMPANY_A));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"//        AddContactCommand commandWithSameValues \u003d new AddContactCommand(INDEX_FIRST_PERSON, copyContact);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"jianminglok"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"jianminglok"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jianminglok"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jianminglok"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"//        assertFalse(standardCommand.equals(new AddContactCommand(INDEX_SECOND_PERSON, DESC_COMPANY_A)));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"//        assertFalse(standardCommand.equals(new AddContactCommand(INDEX_FIRST_PERSON, DESC_COMPANY_B)));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"//}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":97}},{"path":"src/test/java/seedu/address/logic/commands/ClearByCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"laihuiqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"laihuiqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"laihuiqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.InternshipStatus;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"laihuiqi"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"laihuiqi"},"content":"public class ClearByCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"laihuiqi"},"content":"        ClearByCommand clearByFirstCommand \u003d new ClearByCommand(new CompanyName(\"Company 1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"        ClearByCommand clearBySecondCommand \u003d new ClearByCommand(new JobTitle(\"Developer\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"laihuiqi"},"content":"        ClearByCommand clearByThirdCommand \u003d new ClearByCommand(InternshipStatus.PENDING);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"laihuiqi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(clearByFirstCommand.equals(clearByFirstCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(clearByThirdCommand.equals(clearByThirdCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"        ClearByCommand clearByFirstCommandCopy \u003d new ClearByCommand(new CompanyName(\"Company 1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(clearByFirstCommand.equals(clearByFirstCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(clearByFirstCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(clearByFirstCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        assertFalse(clearByFirstCommand.equals(clearBySecondCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"laihuiqi":36}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"laihuiqi"},"content":"/*","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"laihuiqi"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"laihuiqi"},"content":"/*","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_NULL, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        expectedModel.setInternEase(new AddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"laihuiqi"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"        CommandResult result \u003d clearCommand.getResultString(model, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(result, model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"    public void execute_nonEmptyAddressBook_cancel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"laihuiqi"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"laihuiqi"},"content":"        CommandResult result \u003d clearCommand.getResultString(model, false);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(result, model, ClearCommand.MESSAGE_FAILED, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":48,"author":{"gitId":"laihuiqi"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"laihuiqi":19,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//public class CommandResultTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertFalse(commandResult.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // different showHelp value -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        // different exit value -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    public void hashcode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_NAME_BENSON \u003d \"Benson Meier\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_PHONE_COMPANY_A \u003d \"33333333\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_PHONE_COMPANY_B \u003d \"55555555\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_EMAIL_COMPANY_A \u003d \"companya@example.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    public static final String VALID_EMAIL_COMPANY_B \u003d \"companyb@example.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"    public static final String PHONE_DESC_PLACEHOLDER \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"    public static final String EMAIL_DESC_PLACEHOLDER \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"    public static final String PHONE_DESC_COMPANY_A \u003d \" \" + PREFIX_PHONE + VALID_PHONE_COMPANY_A;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    public static final String EMAIL_DESC_COMPANY_A \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_COMPANY_A;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"    public static final String PHONE_DESC_COMPANY_B \u003d \" \" + PREFIX_PHONE + VALID_PHONE_COMPANY_B;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"    public static final String EMAIL_DESC_COMPANY_B \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_COMPANY_B;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"    //  public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"    //  public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"    public static final Contact DESC_COMPANY_A;","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"    public static final Contact DESC_COMPANY_B;","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"        //        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"        //                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"        //                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"        //        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"        //                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"        //                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"        DESC_COMPANY_A \u003d new ContactBuilder().withPhone(VALID_PHONE_COMPANY_A).withEmail(VALID_EMAIL_COMPANY_A).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"        DESC_COMPANY_B \u003d new ContactBuilder().withPhone(VALID_PHONE_COMPANY_B).withEmail(VALID_EMAIL_COMPANY_B).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//            Model expectedModel) {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jianminglok"},"content":"//            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"//            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        } catch (CommandException ce) {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//            Model expectedModel) {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"laihuiqi"},"content":"        /*","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"     * Compares the given {@code result}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"laihuiqi"},"content":"     * - the {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"laihuiqi"},"content":"    public static void assertCommandSuccess(CommandResult result, Model actualModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"laihuiqi"},"content":"        CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    */","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"laihuiqi"},"content":"            /*","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"laihuiqi"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(CommandResult, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"laihuiqi"},"content":"    public static void assertCommandSuccess(CommandResult result, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"laihuiqi"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(result, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"jianminglok"},"content":"//        List\u003cInternshipApplication\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"jianminglok"},"content":"//        InternshipApplication internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"jianminglok"},"content":"//        final String[] splitName \u003d internship.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"}],"authorContributionMap":{"jianminglok":22,"laihuiqi":13,"zm-l":60,"-":65}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"/*","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"/*","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        Person personToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"laihuiqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICATION_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"laihuiqi"},"content":"        expectedModel.deleteInternship(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"laihuiqi"},"content":"        CommandResult deleteMessage \u003d deleteCommand.getResultString(model, true, personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(deleteMessage, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"laihuiqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"laihuiqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"laihuiqi"},"content":"        Person personToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"laihuiqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICATION_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"laihuiqi"},"content":"        expectedModel.deleteInternship(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"laihuiqi"},"content":"        CommandResult deleteMessage \u003d deleteCommand.getResultString(model, true, personToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(deleteMessage, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"laihuiqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"laihuiqi"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"laihuiqi"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"laihuiqi"},"content":"    */","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"laihuiqi":23,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//public class EditCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//                .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":172}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"laihuiqi"},"content":"/*","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"laihuiqi"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_STAY_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"laihuiqi"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"laihuiqi"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"laihuiqi"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"laihuiqi"},"content":"        CommandResult mockConfirmExit \u003d exitCommand.getResultString(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(mockConfirmExit, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"laihuiqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"laihuiqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"laihuiqi"},"content":"    public void execute_exit_cancel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"laihuiqi"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"laihuiqi"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_STAY_ACKNOWLEDGEMENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"laihuiqi"},"content":"        CommandResult mockCancelExit \u003d exitCommand.getResultString(false);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"laihuiqi"},"content":"        assertCommandSuccess(mockCancelExit, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"laihuiqi"},"content":"    */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"laihuiqi"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"laihuiqi":18,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_APPLICATION_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//public class FindCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        // different application -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    public void execute_zeroKeywords_noApplicationFound() {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_APPLICATION_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredInternshipList());","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    public void execute_multipleKeywords_multipleApplicationsFound() {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_APPLICATION_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredInternshipList());","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":83}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//public class HelpCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    public void execute_help_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":20}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class ListCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    private Model model;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private Model expectedModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":39}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_PLACEHOLDER;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_PLACEHOLDER;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.CompanyName;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.JobTitle;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        // whitespace only preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_PLACEHOLDER","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//                + EMAIL_DESC_PLACEHOLDER + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        // multiple addresses - last address accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        // zero tags","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        CompanyName c \u003d new CompanyName(\"LinkedIn\");","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        JobTitle j \u003d new JobTitle(\"Data Scientist\");","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        InternshipApplication expectedApplication \u003d new InternshipApplication(c, j);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//                new AddCommand(expectedApplication));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//        // missing name prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        // missing phone prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        // missing email prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        // missing address prefix","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        // all prefixes missing","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        // invalid address","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        // invalid tag","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//        // non-empty preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":140}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_COMPANY_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_COMPANY_B;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalContacts.COMPANY_A;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"//public class AddContactCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"//    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"//        // no index specified","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, PHONE_DESC_COMPANY_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"//        // no field specified","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"//        // no index and no field specified","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"//        // negative index","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"-5\" + PHONE_DESC_COMPANY_A + EMAIL_DESC_COMPANY_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"//        // zero index","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"0\" + PHONE_DESC_COMPANY_A + EMAIL_DESC_COMPANY_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jianminglok"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jianminglok"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jianminglok"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jianminglok"},"content":"//                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jianminglok"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jianminglok"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"//        Contact expectedContact \u003d new ContactBuilder(COMPANY_A).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jianminglok"},"content":"//        // whitespace only preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jianminglok"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + PHONE_DESC_COMPANY_A","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jianminglok"},"content":"//                + EMAIL_DESC_COMPANY_A, new AddContactCommand(targetIndex, expectedContact));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jianminglok"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jianminglok"},"content":"//        assertParseSuccess(parser, targetIndex.getOneBased() + PHONE_DESC_COMPANY_B + PHONE_DESC_COMPANY_A","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jianminglok"},"content":"//                + EMAIL_DESC_COMPANY_A, new AddContactCommand(targetIndex, expectedContact));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jianminglok"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jianminglok"},"content":"//        assertParseSuccess(parser, targetIndex.getOneBased() + PHONE_DESC_COMPANY_A + EMAIL_DESC_COMPANY_B","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jianminglok"},"content":"//                + EMAIL_DESC_COMPANY_A, new AddContactCommand(targetIndex, expectedContact));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"jianminglok"},"content":"//}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":80}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.testutil.ContactUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"//    public void parseCommand_addContact() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"//        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"//        System.out.println(ContactUtil.getAddContactCommand(contact));","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"//        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"//          ContactUtil.getAddContactCommand(contact));","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"//        assertEquals(new AddContactCommand(INDEX_FIRST_PERSON, contact), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"//          () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jianminglok":16,"zm-l":97}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//public class ArgumentTokenizerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"  \";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        // Verify the last value is returned","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        // Verify the number of values returned is as expected","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        // Verify all values returned are as expected and in order","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_oneArgument() {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        // Preamble present","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        // No preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_multipleArguments() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        // Only two arguments are present","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        // All three arguments are present","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        argsString \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        // Two arguments repeated, some have empty values","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//    public void equalsMethod() {","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//        assertEquals(aaa, aaa);","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":150}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"// * Contains helper methods for testing command parsers.","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//public class CommandParserTestUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//            Command expectedCommand) {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser,","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//                                                      String userInput, String expectedMessage) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//            parser.parse(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":40}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"// * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"// * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"// * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"// * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"// * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//public class DeleteCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        // no index specified","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        // no field specified","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        // no index and no field specified","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        // negative index","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        // zero index","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        // name","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//        // phone","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//        // email","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//        // address","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//        // tags","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"//                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"//                VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"zm-l"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"zm-l"},"content":"//        // no other valid values specified","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"//        // other valid values specified","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"zm-l"},"content":"//                + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"zm-l"},"content":"//                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"zm-l"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"zm-l"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"zm-l"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":198}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//public class FindCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//public class ParserUtilTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        // No whitespaces","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        // Leading and trailing whitespaces","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"//    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"//        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"zm-l"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"zm-l"},"content":"//    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"zm-l"},"content":"//    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"zm-l"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"zm-l"},"content":"//    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"zm-l"},"content":"//        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"zm-l"},"content":"//    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"zm-l"},"content":"//        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"zm-l"},"content":"//        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.util.Collection;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//public class AddressBookTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        private final ObservableList\u003cInternshipApplication\u003e applications \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//            return persons;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        public ObservableList\u003cInternshipApplication\u003e getInternshipList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//            return applications;","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":109}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredInternshipList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":132}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":21}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class AddressTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public void isValidAddress() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        // null address","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        // invalid addresses","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // valid addresses","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":36}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class EmailTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public void isValidEmail() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        // null email","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        // blank email","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // missing parts","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        // invalid parts","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        // valid email","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        // One keyword","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        // Multiple keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        // Only one matching keyword","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        // Zero keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        // Non-matching keyword","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":77}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class NameTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public void isValidName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        // null name","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        // invalid name","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        // valid name","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class PersonTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":91}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class PhoneTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public void isValidPhone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//        // null phone number","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        // invalid phone numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        // valid phone numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"zm-l"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"zm-l"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"zm-l"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"zm-l"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"zm-l"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"zm-l"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"zm-l"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"zm-l"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"zm-l"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"zm-l"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"zm-l"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"zm-l"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"zm-l"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"zm-l"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":170}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.model.tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//public class TagTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public void isValidTagName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//        // null tag name","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"//    private static final List\u003cString\u003e INVALID_CONTACT \u003d Arrays.asList(INVALID_PHONE, INVALID_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    private static final List\u003cString\u003e VALID_CONTACT \u003d Arrays.asList(VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"//    private static final List\u003cString\u003e INVALID_CONTACT_PHONE \u003d Arrays.asList(INVALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"//    private static final List\u003cString\u003e INVALID_CONTACT_EMAIL \u003d Arrays.asList(VALID_PHONE, INVALID_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"//                VALID_CONTACT);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//                VALID_TAGS, VALID_CONTACT);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jianminglok"},"content":"//                VALID_CONTACT);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//                VALID_CONTACT);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"jianminglok"},"content":"//                VALID_CONTACT);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"jianminglok"},"content":"//    public void toModelType_invalidContact_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"jianminglok"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"jianminglok"},"content":"//                        INVALID_CONTACT);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"jianminglok"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Contact.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"jianminglok"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"jianminglok"},"content":"//    public void toModelType_invalidContactPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"jianminglok"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"jianminglok"},"content":"//                        INVALID_CONTACT_PHONE);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"jianminglok"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"jianminglok"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"jianminglok"},"content":"//    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"jianminglok"},"content":"//    public void toModelType_invalidContactEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"jianminglok"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"jianminglok"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"jianminglok"},"content":"//                        INVALID_CONTACT_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"jianminglok"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"jianminglok"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jianminglok":37,"zm-l":79}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//                : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    /*","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    */","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        // Save in new file and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":112}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    /*","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":49}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//                : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//        return userPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"zm-l"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"zm-l"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"zm-l"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"zm-l"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        /*","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//         */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        /*","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//         */","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":68}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"// * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"// * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"// *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//public class AddressBookBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//    private AddressBook addressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//    public AddressBookBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//        addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        this.addressBook \u003d addressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        addressBook.addPerson(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public AddressBook build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        return addressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":34}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"// * A set of assertion methods useful for writing tests.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//public class Assert {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)},","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//     to maintain consistency","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//     *","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//            Executable executable) {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":35}},{"path":"src/test/java/seedu/address/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" * A utility class to help with building Contact objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"public class ContactBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"    public static final String DEFAULT_EMAIL \u003d \"companya@gmail.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    private Email email;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"    public ContactBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"        email \u003d contactToCopy.getEmail();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jianminglok"},"content":"     * Sets the {@code Phone} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jianminglok"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jianminglok"},"content":"        this.phone \u003d new seedu.address.model.contact.Phone(phone);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jianminglok"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jianminglok"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jianminglok"},"content":"     * Sets the {@code Email} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jianminglok"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jianminglok"},"content":"    public ContactBuilder withEmail(String email) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jianminglok"},"content":"        this.email \u003d new seedu.address.model.contact.Email(email);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jianminglok"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jianminglok"},"content":"    public Contact build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jianminglok"},"content":"        return new Contact(phone, email);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jianminglok"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jianminglok":54}},{"path":"src/test/java/seedu/address/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"///**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"// * A utility class for Contact.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"// */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"//public class ContactUtil {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"//    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"//     * Returns an add command string for adding the {@code contact}.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"//     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"//    public static String getAddContactCommand(Contact contact) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"//        return AddContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"//                + getContactDetails(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jianminglok"},"content":"//","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jianminglok"},"content":"//    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jianminglok"},"content":"//     * Returns the part of command string for the given {@code contact}\u0027s details.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jianminglok"},"content":"//     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jianminglok"},"content":"//    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jianminglok"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jianminglok"},"content":"//        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jianminglok"},"content":"//        sb.append(PREFIX_EMAIL + contact.getEmail().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jianminglok"},"content":"//        return sb.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jianminglok"},"content":"//    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jianminglok"},"content":"//}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jianminglok":32}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"// * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class EditPersonDescriptorBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    // To be removed once Person class is updated","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private EditPersonDescriptor descriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        descriptor.setName(person.getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        descriptor.setTags(person.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//     * that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    public EditPersonDescriptor build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//        return descriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":91}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"// * A utility class to help with building Person objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//public class PersonBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    // To be removed once Person class is updated","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    private Name name;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    private Phone phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    private Email email;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    private Address address;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    private Contact contact;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        phone \u003d new Phone(VALID_PHONE_PLACEHOLDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        email \u003d new Email(VALID_EMAIL_PLACEHOLDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        name \u003d personToCopy.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        phone \u003d new Phone(VALID_PHONE_PLACEHOLDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        email \u003d new Email(VALID_EMAIL_PLACEHOLDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//        this.address \u003d new Address(address);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//    public PersonBuilder withContact(Contact contact) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        this.contact \u003d contact;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//    public Person build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":110}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"// * A utility class for Person.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//public class PersonUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    // To be removed once Person class is updated","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_PHONE_PLACEHOLDER \u003d \"11111111\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//    public static final String VALID_EMAIL_PLACEHOLDER \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    public static String getAddCommand(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    public static String getPersonDetails(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        sb.append(PREFIX_PHONE + VALID_PHONE_PLACEHOLDER + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        sb.append(PREFIX_EMAIL + VALID_EMAIL_PLACEHOLDER + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//        person.getTags().stream().forEach(","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        );","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(VALID_PHONE_PLACEHOLDER).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(VALID_EMAIL_PLACEHOLDER).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//            }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":66}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import java.util.HashMap;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"// * A class used to test serialization and deserialization","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//public class SerializableTestClass {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//            + \"  }%n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//            + \"}\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public static String getNameTestValue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        return NAME_TEST_VALUE;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        return listOfLocalDateTimes;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//        return mapOfIntegerToString;","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//    public void setTestValues() {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        name \u003d getNameTestValue();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    public String getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        return name;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//        return listOfLocalDateTimes;","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//        return mapOfIntegerToString;","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":72}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Files;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.InternshipApplication;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"// * A utility class for test cases.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//public class TestUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//        return Index.fromOneBased(model.getFilteredInternshipList().size() / 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//        return Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//    public static InternshipApplication getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//        return model.getFilteredInternshipList().get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":55}},{"path":"src/test/java/seedu/address/testutil/TypicalContacts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianminglok"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jianminglok"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jianminglok"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jianminglok"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jianminglok"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jianminglok"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jianminglok"},"content":"public class TypicalContacts {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jianminglok"},"content":"    public static final Contact COMPANY_A \u003d new ContactBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jianminglok"},"content":"            .withPhone(CommandTestUtil.VALID_PHONE_COMPANY_A)","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jianminglok"},"content":"            .withEmail(CommandTestUtil.VALID_EMAIL_COMPANY_A)","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jianminglok"},"content":"            .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jianminglok"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jianminglok"},"content":"    public static final Contact COMPANY_B \u003d new ContactBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jianminglok"},"content":"            .withPhone(CommandTestUtil.VALID_PHONE_COMPANY_B)","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jianminglok"},"content":"            .withEmail(CommandTestUtil.VALID_EMAIL_COMPANY_B)","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jianminglok"},"content":"            .build();","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jianminglok"},"content":"    private TypicalContacts() {} // prevents instantiation","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jianminglok"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jianminglok":21}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"// * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//public class TypicalIndexes {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"// * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//public class TypicalPersons {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//            .withContact(new Contact(new Phone(\"98765432\"), new Email(\"johnd@example.com\"))).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    // Manually added","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"little india\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER).withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//            .withPhone(PersonBuilder.VALID_PHONE_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//            .withEmail(PersonBuilder.VALID_EMAIL_PLACEHOLDER)","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//            .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//            ab.addPerson(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//        return ab;","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":89}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import javafx.beans.DefaultProperty;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"///**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"// * A test object which can be constructed via an FXML file.","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"// * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"// */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//@DefaultProperty(\"text\")","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//public class TestFxmlObject {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//    private String text;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//    public TestFxmlObject() {}","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//    public TestFxmlObject(String text) {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//        setText(text);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    public String getText() {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//        return text;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    public void setText(String text) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//        this.text \u003d text;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":35}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zm-l"},"content":"//package seedu.address.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"zm-l"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"zm-l"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"zm-l"},"content":"//import java.net.URL;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"zm-l"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"zm-l"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"zm-l"},"content":"//import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"zm-l"},"content":"//import seedu.address.MainApp;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"zm-l"},"content":"//public class UiPartTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"zm-l"},"content":"//    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"zm-l"},"content":"//    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"zm-l"},"content":"//    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"zm-l"},"content":"//    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"zm-l"},"content":"//    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"zm-l"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"zm-l"},"content":"//    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"zm-l"},"content":"//    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"zm-l"},"content":"//        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"zm-l"},"content":"//        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"zm-l"},"content":"//    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"zm-l"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"zm-l"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"zm-l"},"content":"//    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"zm-l"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"zm-l"},"content":"//        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"zm-l"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"zm-l"},"content":"//    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"zm-l"},"content":"//    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"zm-l"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"zm-l"},"content":"//    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"zm-l"},"content":"//    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"zm-l"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"zm-l"},"content":"//    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"zm-l"},"content":"//        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"zm-l"},"content":"//        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"zm-l"},"content":"//        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"zm-l"},"content":"//        return testFileUrl;","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"zm-l"},"content":"//    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"zm-l"},"content":"//     * UiPart used for testing.","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"zm-l"},"content":"//     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"zm-l"},"content":"//     */","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"zm-l"},"content":"//    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"zm-l"},"content":"//        @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"zm-l"},"content":"//        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"zm-l"},"content":"//        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"zm-l"},"content":"//            super(fxmlFileUrl, root);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"zm-l"},"content":"//        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"zm-l"},"content":"//            super(fxmlFileName, root);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"zm-l"},"content":"//        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"zm-l"},"content":"//            super(fxmlFileUrl);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"zm-l"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"zm-l"},"content":"//        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"zm-l"},"content":"//            super(fxmlFileName);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"zm-l"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"zm-l"},"content":"//        }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"zm-l"},"content":"//    }","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"zm-l"},"content":"//","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"zm-l"},"content":"//}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"zm-l":114}}]
