[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"* This is **a hospital patient management system**.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"  * Inpro of patients","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"  * Access medical records of patients ","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"* The patient management system (called `MedInfo`) can be used for managing patient records.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"  * It is to digitise hospital patient management data through a CLI app with a GUI to display patient information, medical records or necessary financial records.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"  * It is to computerise the Front Office Management of Hospital to develop software which is user friendly, simple, fast, and costâ€“effective.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"  * The main function of the system is to register and store patient details and doctor details, retrieve these details as and when required, and also to manipulate these details meaningfully.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"-":4,"KSunil2001":9}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"nramapurath"},"content":"### Navaneeth Ramapurath","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"nramapurath"},"content":"\u003cimg src\u003d\"images/nramapurath.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"nramapurath"},"content":"[[github](https://github.com/nramapurath)]","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nramapurath"},"content":"[[portfolio](team/nramapurath.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nramapurath"},"content":"- Role: Team Lead","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"nramapurath"},"content":"- Code Focus Area: Logic, model","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"nramapurath"},"content":"- Primary Role: Scheduling and tracking","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"nramapurath"},"content":"- Secondary Role: Testing","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jeraldkiew"},"content":"### Jerald Kiew","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jeraldkiew"},"content":"\u003cimg src\u003d\"images/jeraldkiew.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jeraldkiew"},"content":"[[github](http://github.com/jeraldkiew)]","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"[[portfolio](team/jeraldkiew.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"- Role: Developer","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"- Code Focus Area: Model","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"- Primary Role: Documentation","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"- Secondary Role: Code Quality","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"### K Sunil Avinash","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"\u003cimg src\u003d\"images/ksunil2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"[[github](http://github.com/ksunil2001)] ","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"[[portfolio](team/ksunil2001.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jeraldkiew"},"content":"- Role: Developer","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"- Code Focus Area: Storage","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"- Primary Role: Code Quality","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"- Secondary Role: Documentation","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"### Nicholas Arlin Halim","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"\u003cimg src\u003d\"images/daytona65.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"[[github](http://github.com/daytona65)]","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"[[portfolio](team/daytona65.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"- Role: Developer","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"- Code Focus Area: UI","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"- Primary Role: Code Integration","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"- Secondary Role: Testing","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yitong241"},"content":"### Sun Yitong","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"yitong241"},"content":"\u003cimg src\u003d\"images/yitong241.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yitong241"},"content":"[[github](http://github.com/yitong241)]","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"yitong241"},"content":"[[portfolio](team/yitong241.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jeraldkiew"},"content":"- Role: Developer","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"- Code Focus Area: Logic","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"- Primary Role: Deliverables and deadlines","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"- Secondary Role: Scheduling and tracking","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"nramapurath":8,"yitong241":4,"daytona65":15,"jeraldkiew":5,"-":25,"KSunil2001":8}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"KSunil2001"},"content":"* has a need to manage a significant number of patient records","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"KSunil2001"},"content":"* prefers typing to execute commands and input patient records","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"KSunil2001"},"content":"**Value proposition**: ","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"KSunil2001"},"content":"* solve the problem of slow and multiple step process of documenting patient medical records during in-processing","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"KSunil2001"},"content":"* provide faster access to a particular patientâ€™s medical records for hospital admin staff","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹       | I want to â€¦â€‹                                       | So that I canâ€¦â€‹                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"KSunil2001"},"content":"|----------|---------------|----------------------------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | add a patient by NRIC                              | record the information later (start with NRIC as primary key)                               |","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | add personal particulars to a patient              | record their name, address and contacts                                                     |","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | add medical records to a patient                   | record their medical history, medical cases and medication allergen                         |","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | add a discharge date to hospitalised patients      | keep track of discharge dates                                                               |","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | view the list of commands                          | use the system proficiently                                                                 |","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | search for patients by personal particulars        | do a basic search to find a certain patient                                                 |","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | search for patients by discharge date              | plan for future patient discharges                                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | update personal particulars of a patient           | keep the personal particulars of a patient up to date                                       |","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | update the medical records of a patient            | keep the medical records of a patient up to date                                            |","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | update the discharge date of hospitalised patients | change the discharge date of a hospitalised patient due to unexpected medical complications |","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | remove a patient by NRIC                           | put the patient on hold or remove duplicate entries                                         |","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | remove the medical records of a patient            | correct the mistakes in medical cases, allergies and medical conditions                     |","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"KSunil2001"},"content":"| `* * *`  | staff member  | remove the discharge date of a patient             | put the patient\u0027s discharge date on hold while awaiting further assessment                  |","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | add a patient ward number                          | locate the patient                                                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | add patient priority level                         | categorize patients by severity of condition when in-processed                              |","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | search for patients by medical records             | find patients with a certain medical condition                                              |","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | view the list of patients sorted by discharge date | plan for future patient discharges                                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | see patients with approaching discharge dates      | be aware of approaching discharge patients                                                  |","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | view patients by department                        | find patients in a department and check the occupancy within certain departments            |","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | view patients by priority levels                   | address higher priority patients more quickly                                               |","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | update patient ward number                         | move patients to different wards                                                            |","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | update the allocated department of a patient       | change the department in charge of the patient due to a developed medical condition         |","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"KSunil2001"},"content":"| `* *`    | staff member  | confirm a deletion                                 | avoid any mistakes                                                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | add financial records to a patient                 | record their outstanding bills, billing history and insurance details                       |","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | add payment methods of a patient                   | record their payment methods                                                                |","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | search for patients by financial records           | find patients with outstanding bills                                                        |","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | view patients by a category                        | view patients by type of record (e.g. medical information, financial records, etc)          |","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | update the financial records of a patient          | keep the financial records of a patient up to date                                          |","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"KSunil2001"},"content":"| `*`      | staff member  | remove the financial records of a patient          | correct any mistakes in the billing                                                         |","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"KSunil2001"},"content":"(For all use cases below, the **System** is the `MedInfo` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"KSunil2001"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"KSunil2001"},"content":"1.  User requests to list patients","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"KSunil2001"},"content":"2.  MedInfo shows a list of patients","lastModifiedDate":"2023-03-03"},{"lineNumber":319,"author":{"gitId":"KSunil2001"},"content":"3.  User requests to delete a specific patient in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":320,"author":{"gitId":"KSunil2001"},"content":"4.  MedInfo deletes the patient","lastModifiedDate":"2023-03-03"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"KSunil2001"},"content":"* 3a. The given NRIC is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"KSunil2001"},"content":"    * 3a1. MedInfo shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"KSunil2001"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"KSunil2001"},"content":"4.  Should mask the NRIC of patients when listing (e.g. XXXXX264G).","lastModifiedDate":"2023-03-03"},{"lineNumber":344,"author":{"gitId":"KSunil2001"},"content":"5.  The product is not required to validate the medical records.","lastModifiedDate":"2023-03-03"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"KSunil2001"},"content":"* **Priority Level**: Level of seriousness of a patient\u0027s health condition (e.g. `Stable`, `Mild`, `Severe`)","lastModifiedDate":"2023-03-03"},{"lineNumber":352,"author":{"gitId":"KSunil2001"},"content":"* **Medical Record**: Blood type, allergies, medical cases and history of medical conditions","lastModifiedDate":"2023-03-03"},{"lineNumber":353,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":354,"author":{"gitId":"KSunil2001"},"content":"*{More to be added}*","lastModifiedDate":"2023-03-03"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":356,"KSunil2001":51}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jeraldkiew"},"content":"MedInfo is a **desktop app for managing patients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MedInfo can get your patient management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jeraldkiew"},"content":"- Table of Contents","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jeraldkiew"},"content":"1. Download the latest `medinfo.jar` from [here](https://github.com/AY2223S2-CS2103T-T12-2/tp).","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jeraldkiew"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MedInfo.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jeraldkiew"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar medinfo.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jeraldkiew"},"content":"   - `list` : Lists all patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jeraldkiew"},"content":"   - `add nric/S1234567A name/John Doe cond/Ligma` : Adds a patient named `John Doe` to MedInfo.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jeraldkiew"},"content":"   - `delete nric/S1234567A` : Deletes the newly added patient named `John Doe`\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jeraldkiew"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jeraldkiew"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jeraldkiew"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"jeraldkiew"},"content":"  e.g `n/NAME [cond/CONDITION]` can be used as `n/John Doe cond/Ligma` or as `n/John Doe`.","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027Might be used in future features\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027- Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jeraldkiew"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jeraldkiew"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"jeraldkiew"},"content":"  e.g. if you specify `nric/S1234567X nric/S1234567A`, only `nric/S1234567A` will be taken.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"jeraldkiew"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"jeraldkiew"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- INSERT SCREENSHOT PREVIEW HERE --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- ![help message](images/helpMessage.png) --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jeraldkiew"},"content":"### Adding a patient to the system: `add`","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jeraldkiew"},"content":"Adds the patient (NRIC, name and condition).","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"jeraldkiew"},"content":"Format: `add nric/NRIC name/NAME cond/CONDITIONâ€‹`","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- EXAMPLE OF TIP --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jeraldkiew"},"content":"\u003c/div\u003e --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"jeraldkiew"},"content":"- `add nric/S1234567A name/John Doe cond/Ligma`","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"jeraldkiew"},"content":"### Listing all patients in the system: `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"jeraldkiew"},"content":"Shows a list of all patients with their details in the system.","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"jeraldkiew"},"content":"Format: `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jeraldkiew"},"content":"### Editing a patientâ€™s condition in the system: `edit`","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jeraldkiew"},"content":"Edit an existing patientâ€™s condition.","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"jeraldkiew"},"content":"Format: `edit nric/NRIC cond/NEW_CONDITIONâ€‹`","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"jeraldkiew"},"content":"- `edit nric/S1234567A cond/Pneumonia` Edits the condition of the patient with NRIC `S1234567A` to be `Pneumonia`.","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"jeraldkiew"},"content":"### Finding patients by name in the system: `find`","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"jeraldkiew"},"content":"Shows a list of all patients with their details that match input name or NRIC.","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"jeraldkiew"},"content":"Format: `find name/NAME`, `find nric/NRIC`","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jeraldkiew"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"jeraldkiew"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"jeraldkiew"},"content":"- Either only the name or only the NRIC is searched.","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"jeraldkiew"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"jeraldkiew"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"jeraldkiew"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"jeraldkiew"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"jeraldkiew"},"content":"### Deleting a patient from the system: `delete`","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"jeraldkiew"},"content":"Delete patient by NRIC.","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"jeraldkiew"},"content":"Format: `delete nric/NRIC`","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"jeraldkiew"},"content":"- Deletes the person at the specified `NRIC`.","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jeraldkiew"},"content":"`delete nric/S1234567A`","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"jeraldkiew"},"content":"### Saving the data [coming soon]","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"jeraldkiew"},"content":"MedInfo data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"jeraldkiew"},"content":"### Editing the data file [coming soon]","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"jeraldkiew"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- MedInfo data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file. --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":156,"author":{"gitId":"jeraldkiew"},"content":"\u003c!-- \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"jeraldkiew"},"content":"\u003c/div\u003e --\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":160,"author":{"gitId":"jeraldkiew"},"content":"### Archiving data files `[coming soon]`","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"jeraldkiew"},"content":"**Q**: I keep forgetting the commands, is there a quick way to get help?\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"jeraldkiew"},"content":"**A**: Yes! Entering the `help` command will show a message explaining how to access the help page.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027Coming soon\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027**Q**: How do I transfer my data to another Computer?\u003cbr\u003e\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"jeraldkiew"},"content":"[//]: #","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"jeraldkiew"},"content":"[//]: # \u0027**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MedInfo home folder.\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"jeraldkiew"},"content":"| Action     | Format, Examples                                                                                  |","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"jeraldkiew"},"content":"| ---------- | ------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"jeraldkiew"},"content":"| **Add**    | `add nric/NRIC name/NAME cond/CONDITIONâ€‹` \u003cbr\u003e e.g., `add nric/S1234567A name/John Doe cond/Ligma |","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"jeraldkiew"},"content":"| **Delete** | `delete nric/NRIC`\u003cbr\u003e e.g., `delete nric/S1234567A`                                              |","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"jeraldkiew"},"content":"| **Edit**   | `edit nric/NRIC cond/NEW_CONDITIONâ€‹`\u003cbr\u003e e.g.,`edit nric/S1234567A cond/Pneumonia`                |","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"jeraldkiew"},"content":"| **Find**   | `find name/NAME` or `find nric/NRIC`\u003cbr\u003e e.g., `find name/John`                                   |","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"jeraldkiew"},"content":"| **List**   | `list`                                                                                            |","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"jeraldkiew"},"content":"| **Help**   | `help`                                                                                            |","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jeraldkiew":82,"-":106}},{"path":"docs/team/daytona65.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"title: Nicholas Halim\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"* **New Feature**: ","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"* [**Code contributed**](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003ddaytona65\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    * Managed the review and merging of my  team\u0027s PRs","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"daytona65":41}},{"path":"docs/team/jeraldkiew.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jeraldkiew"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jeraldkiew"},"content":"title: Jerald Kiew\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"jeraldkiew"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jeraldkiew"},"content":"### Project: MedInfo","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jeraldkiew"},"content":"MedInfo aims to solve the problem of slow, multiple step process of documenting patient medical records during in-processing and provide faster access to a particular patientâ€™s medical records for hospital admin staff.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jeraldkiew"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jeraldkiew"},"content":"- **New Feature**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"jeraldkiew"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djeraldkiew\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jeraldkiew"},"content":"- **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jeraldkiew"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jeraldkiew"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"jeraldkiew"},"content":"- **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"jeraldkiew"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"jeraldkiew"},"content":"- **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"jeraldkiew"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"jeraldkiew":35}},{"path":"docs/team/ksunil2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"title: K Sunil Avinash\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"### Project: MedInfo","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"MedInfo aims to solve the problem of slow, multiple step process of documenting patient medical records during in-processing and provide faster access to a particular patientâ€™s medical records for hospital admin staff.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"- **New Feature**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dksunil2001\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"- **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"- **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"- **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    - to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"KSunil2001":30}},{"path":"docs/team/nramapurath.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nramapurath"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"nramapurath"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"nramapurath"},"content":"title: Navaneeth Ramapurath\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"nramapurath"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"nramapurath"},"content":"### Project: MedInfo","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"nramapurath"},"content":"MedInfo aims to solve the problem of slow, multiple step process of documenting patient medical records during in-processing and provide faster access to a particular patientâ€™s medical records for hospital admin staff.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"nramapurath"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"nramapurath"},"content":"- **New Feature**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"nramapurath"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"nramapurath"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnramapurath\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"nramapurath"},"content":"- **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"nramapurath"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"nramapurath"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"nramapurath"},"content":"   - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"nramapurath"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"nramapurath"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"nramapurath"},"content":"- **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"nramapurath"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"nramapurath"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"nramapurath"},"content":"- **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"nramapurath"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"nramapurath":30}},{"path":"docs/team/yitong241.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yitong241"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"yitong241"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"yitong241"},"content":"title: Sun Yitong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"yitong241"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"yitong241"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"yitong241"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"yitong241"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"yitong241"},"content":"* **New Feature**: ","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"yitong241"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dyitong241\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"yitong241"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"yitong241"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"yitong241"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"yitong241"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"yitong241"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"yitong241"},"content":"  - to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"yitong241"},"content":"","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"yitong241":31}}]
