[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-4/tp/actions)","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-F11-4/tp/branch/master/graph/badge.svg?token\u003dWPKLBLHW27)](https://codecov.io/gh/AY2223S2-CS2103-F11-4/tp)","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"* This is BookFace, an NUS-centered address book application.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"    * Add contacts along with the image of the person","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"    * Quickly import university related contacts","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"* The project simulates an ongoing software project for a desktop application (called BookFace) used for managing","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"  contact details.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"* It is named BookFace because it is an address book organizer with photos of the contacts you save.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"* For the detailed documentation of this project, see","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"  the **[BookFace Product Website](https://ay2223s2-cs2103-f11-4.github.io/tp/)**.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"weekiat-douze":6,"hongshenggg":1,"SHni99":5,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"javafx {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"    archiveFileName \u003d \u0027bookface.jar\u0027","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"weekiat-douze":4,"hongshenggg":1,"SHni99":6,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"### Lee Hong Sheng","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"\u003cimg src\u003d\"images/hongshenggg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"[[github](https://github.com/hongshenggg)]","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"[[portfolio](team/hongshenggg.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"* Role: Developer","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"* Responsibilities: Interface + Functions","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"### Ian","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"\u003cimg src\u003d\"images/castryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"[[github](http://github.com/castryl)]","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"[[portfolio](team/castryl.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"* Responsibilities: Everything","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"### Lum Wee Kiat","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"\u003cimg src\u003d\"images/weekiat-douze.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"[[github](http://github.com/weekiat-douze)] [[portfolio](team/weekiat-douze.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"### Ni Shenghan","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"\u003cimg src\u003d\"images/shni99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"[[github](http://github.com/shni99)]","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"[[portfolio](team/shni99.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"pkpaing"},"content":"### Phone Khant Paing","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"\u003cimg src\u003d\"images/pkpaing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"pkpaing"},"content":"[[github](http://github.com/pkpaing)]","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"pkpaing"},"content":"[[portfolio](team/pkpaing.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"weekiat-douze":3,"hongshenggg":4,"SHni99":9,"-":37,"pkpaing":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"# Developer Guide","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"* [Design](#design)","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"    * [Add Feature](#add-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"    * [Delete Feature](#delete-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"    * [Add Image Feature](#add-image-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"    * [Delete Image Feature](#delete-image-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    * [Import Contacts Feature](#import-contacts-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    * [Find Feature](#find-feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"    ","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    * [Product Scope](#product-scope)","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    * [User Stories](#user-stories)","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    * [Use Cases](#use-cases)","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"## Acknowledgements","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"* This project was based on the AddressBook3 application which can be found ","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"  [here](https://github.com/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"  ","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"## Design","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"### Architecture","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"{ToDo: Add architecture}","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"---","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"## Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"### Add Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"#### Add Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"The Add feature is facilitated by the classes `AddCommand`,","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"`AddCommandParser` and `ParserUtil`.","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"The `AddCommandParser` first parses through the user command to obtain","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"the necessary inputs through using `ParserUtil#parseIndex`. Following which an","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"instance of a `AddCommand` containing the details encapsulated in Person class is returned.","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"`AddCommand#execute` is then called, which sets the image of the contact","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"at the desired index to a default image, and deletes the existing person through","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"`DeleteCommand`.","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"Given below is an example usage scenario for how the add mechanism behaves.","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"Step 1: User starts up the application and sees their list of contacts. User must then enter","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"[name] [status] [phone] [email] [address] as they are required by the system if not it will cause","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"an invalid exception.","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"Step 2: The user can add optional fields, that is the tags. Each of the tags is colour-coded based on its type.","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note**: If the user inputs a contact that exists in the contact list, or if the user misses out a compulsory","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"\u003e input, an error will be thrown.","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"Step 3: If the instruction was valid, `AddCommand#execute` is called to wrap the details into person and set the","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"person to the next available index.","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"Step 4: User can use edit index to select the chosen person card and `EditCommand#execute` is then called to","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"change the contents inside and update the program directory.","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"The following sequence diagram shows how the `add` operation works.","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note**: The lifeline of the `AddCommandParser` and `AddCommand`","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"\u003e should end at the destroy marker (X) but due to the limitations of PlantUML, the","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"\u003e lifeline reaches the end of the diagram.","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"The following activity diagram summarizes what happens when a user executes a","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"add command:","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"![AddActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"#### Design Considerations:","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 1 (current choice):** Improve on tags by adding more colours to the","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"  program directory.","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"    - Pros:","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"        - Ensures the labels are organised neatly in different colour","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"    - Cons:","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"        - Extra complexity in requiring to map the additional tag operations","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 2:** Make status field compulsory from program directory.","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"    - Pros:","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"        - Easier to implement and user can search based on year and course","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"    - Cons:","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"        - Application will not detect the input content from the users which could contain","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"hongshenggg"},"content":"          non-related strings.","lastModifiedDate":"2023-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"### Delete Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"#### Delete Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"{Todo: Add delete implementation}","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"#### Design Considerations","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"{Todo: Add design considerations for delete}","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"### Add Image Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"#### Add Image Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"The add-image mechanism is facilitated by `AddImageCommand`, `AddImageCommandParser` and `ImageUtil` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"weekiat-douze"},"content":"- `AddImageCommand` extends `Command`","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"weekiat-douze"},"content":"- `AddImageCommandParser` extends `Parser`","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"weekiat-douze"},"content":"The `AddImageCommandParser` parses the user input into index of contact and path to an image.","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"weekiat-douze"},"content":"It returns a `AddImageCommand` with the 2 information retrieved.","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"SHni99"},"content":"`AddImageCommand#execute` copies the image provided by the user via a path and replaces the current image with the new","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"SHni99"},"content":"one.","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"weekiat-douze"},"content":"It also saves the file name of the new image to the `model`.","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"Given below is an example usage scenario and how the add-image mechanism behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"weekiat-douze"},"content":"Step 1. When user wants to add an image to a contact, they use the `add-image` command.","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"Step 2. The `LogicManager` receives the command text from the user input and gives it to `AddressBookParser`","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":". `AddressBookParser` calls `AddImageCommandParser` to parse the user input.","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"SHni99"},"content":"Step 3. The `AddImageCommandParser` retrieves the contact index as well as the image path and creates","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"a `AddImageCommand`","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"SHni99"},"content":"Step 4. `AddImageCommand#execute` is called. The method calls `ImageUtil#importImage` to copy the image into the \"","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"SHni99"},"content":"profile_pictures/\" directory.","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"weekiat-douze"},"content":"Once that is successful, `AddImageCommand#execute` proceeds to call `ImageUtil#deleteImage` to remove the current image.","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"weekiat-douze"},"content":"Finally `AddImageCommand#execute` updates the model provided in the arguments.","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"SHni99"},"content":"\u003e **Note**: If the path given is invalid or if the file at the given path is not a png/jpeg image, the command will not","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"SHni99"},"content":"\u003e be completed.","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"weekiat-douze"},"content":"The following sequence diagram shows how the add-image operation works:\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"weekiat-douze"},"content":"![AddImageSequenceDiagram](images/AddImageSequenceDiagram.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"weekiat-douze"},"content":"\u003e **Note**: The lifeline of the `AddImageCommandParser` and `AddImageCommand`","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"weekiat-douze"},"content":"\u003e should end at the destroy marker (X) but due to the limitations of PlantUML, the","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"weekiat-douze"},"content":"\u003e lifeline reaches the end of the diagram.","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"weekiat-douze"},"content":"The following activity diagram summarizes what happens when a user executes add-image command: \u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"weekiat-douze"},"content":"![AddImageActivityDiagram](images/AddImageActivityDiagram.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"hongshenggg"},"content":"#### Design considerations:","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"weekiat-douze"},"content":"- Alternative 1 (current choice): Copy the image into application-created directory","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"weekiat-douze"},"content":"    - Pros:","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"weekiat-douze"},"content":"        - A single location to store/check for images","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"weekiat-douze"},"content":"        - Naming scheme determined by application","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"weekiat-douze"},"content":"    - Cons:","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"weekiat-douze"},"content":"        - Copying is a file I/O which have many caveats","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"weekiat-douze"},"content":"- Alternative 2: Save the path provided by User","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"weekiat-douze"},"content":"    - Pros:","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"weekiat-douze"},"content":"        - Does not require any file I/O","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"weekiat-douze"},"content":"        - Easy to save as only the Path as a string","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"weekiat-douze"},"content":"    - Cons:","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"weekiat-douze"},"content":"        - Path is easily invalidated (e.g. user moves/deletes/renames the image)","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"hongshenggg"},"content":"### Delete Image Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"hongshenggg"},"content":"#### Delete Image Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":174,"author":{"gitId":"hongshenggg"},"content":"The delete-image feature is facilitated by the classes `DeleteImageCommand`,","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"hongshenggg"},"content":"`DeleteImageCommandParser`, `ImageUtil`, and `ParserUtil`.","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"hongshenggg"},"content":"The `DeleteImageCommandParser` first parses through the user command to obtain","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"hongshenggg"},"content":"the desired index through using `ParserUtil#parseIndex`. Following which an","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"hongshenggg"},"content":"instance of a `DeleteImageCommand` containing the desired index is returned.","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"hongshenggg"},"content":"`DeleteImageCommand#execute` is then called, which sets the image of the contact","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"hongshenggg"},"content":"at the desired index to a default image, and deletes the existing image through","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"hongshenggg"},"content":"`ImageUtil#deleteImage`.","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"hongshenggg"},"content":"Given below is an example usage scenario for how the delete-image mechanism behaves.","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"hongshenggg"},"content":"Step 1: User starts up the application and sees their list of contacts. Some of","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"hongshenggg"},"content":"which have already had an image added.","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"hongshenggg"},"content":"Step 2: The user decides that the image given to the contact at index 4 is not","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"hongshenggg"},"content":"suitable, and wants to delete it. The user inputs `delete-image 4`.","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"hongshenggg"},"content":"`DeleteImageCommandParser#parse` is then called to parse this input for the","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"hongshenggg"},"content":"desired index.","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note**: If the user inputs an index of a contact which currently does not have","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"SHni99"},"content":"\u003e an image, or if the user inputs an invalid index, an error will be returned to","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"SHni99"},"content":"\u003e the user","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"hongshenggg"},"content":"Step 3: If the instruction was valid, `Model#deleteImage` is called to set the","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"hongshenggg"},"content":"image of the contact to the default image.","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"hongshenggg"},"content":"Step 4: `ImageUtil#deleteImage` is then called to delete the existing image","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"hongshenggg"},"content":"from the program directory.","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"hongshenggg"},"content":"The following sequence diagram shows how the delete-image operation works.","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"hongshenggg"},"content":"![DeleteImageSequenceDiagram](images/DeleteImageSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note**: The lifeline of the `DeleteImageCommandParser` and `DeleteImageCommand`","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"hongshenggg"},"content":"\u003e should end at the destroy marker (X) but due to the limitations of PlantUML, the","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"hongshenggg"},"content":"\u003e lifeline reaches the end of the diagram.","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"hongshenggg"},"content":"The following activity diagram summarizes what happens when a user executes a","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"hongshenggg"},"content":"delete-image command:","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"hongshenggg"},"content":"![DeleteImageActivityDiagram](images/DeleteImageActivityDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"hongshenggg"},"content":"#### Design Considerations:","lastModifiedDate":"2023-04-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 1 (current choice):** Delete the existing image file from program","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"hongshenggg"},"content":"  directory.","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"hongshenggg"},"content":"    - Pros:","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"hongshenggg"},"content":"        - Ensures application does not consume excess storage","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"hongshenggg"},"content":"    - Cons:","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"hongshenggg"},"content":"        - Extra complexity in requiring file i/o operations","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 2:** Disregard deleting the image file from program directory.","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"hongshenggg"},"content":"    - Pros:","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"hongshenggg"},"content":"        - Easier to implement","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"hongshenggg"},"content":"    - Cons:","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"hongshenggg"},"content":"        - Application will take up increasingly more unnecessary storage during","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"hongshenggg"},"content":"          its lifetime of usage","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"hongshenggg"},"content":"### Import Contacts Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"hongshenggg"},"content":"#### Import Contacts Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"pkpaing"},"content":"The import feature is facilitated by the classes `ImportCommand`, `ImportCommandParser`,","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"pkpaing"},"content":"`SocContacts` and `ChsContacts`. The `ImportCommandParser` first parses through the user","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"pkpaing"},"content":"command to obtain the desired faculty to be imported. An instance of","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"pkpaing"},"content":"a `ImportCommand` containing the desired faculty from either `SocContacts` or","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"pkpaing"},"content":"`ChsContacts` is then returned. `ImportCommand#execute` is then called,","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"pkpaing"},"content":"which calls `Model#addPerson` to add the unique contacts into BookFace.","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"pkpaing"},"content":"Given below is an example usage scenario for how the import mechanism behaves.","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"pkpaing"},"content":"Step 1: User starts up the application and sees their list of contacts.","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"pkpaing"},"content":"Step 2: User decides to import contacts from faculty SOC and input","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"pkpaing"},"content":"`import soc`. `ImportCommandParser#parse` is then called to parse","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"pkpaing"},"content":"this input for the desired faculty.","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"pkpaing"},"content":"\u003e **Note**: If the user inputs a faculty that does not exist,","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"pkpaing"},"content":"\u003e an error will be returned to the user","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"pkpaing"},"content":"Step 3: If the faculty was valid, `ImportCommand#execute` is called","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"pkpaing"},"content":"with the valid faculty that was parsed","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"pkpaing"},"content":"Step 4: `Model#addPerson` is called for however","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"pkpaing"},"content":"many non-duplicate contacts are to be added.","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"pkpaing"},"content":"The following sequence diagram shows how the import command works.","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"pkpaing"},"content":"![ImportSequenceDiagram](images/ImportSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"pkpaing"},"content":"The following activity diagram summarizes what happens when a user executes an","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"pkpaing"},"content":"import command:","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"pkpaing"},"content":"![ImportActivityDiagram](images/ImportActivityDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"hongshenggg"},"content":"#### Design Considerations:","lastModifiedDate":"2023-04-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":273,"author":{"gitId":"pkpaing"},"content":"- **Alternative 1 (current choice):** ImportCommand#execute takes in a string to","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"pkpaing"},"content":"  determine which faculty of in-built contacts to import","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"pkpaing"},"content":"    - Pros:","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"pkpaing"},"content":"        - User input is easily parsed (as it is just a string), faster to read and","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"pkpaing"},"content":"          execute the command","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"pkpaing"},"content":"    - Cons:","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"pkpaing"},"content":"        - Possibly bad OOP design, ImportCommand#execute should take in a Faculty object","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"pkpaing"},"content":"- **Alternative 2:** ImportCommand#execute takes in a Faculty object instead of a string","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"pkpaing"},"content":"  to determine which faculty of in-built contacts to import","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"pkpaing"},"content":"    - Pros:","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"pkpaing"},"content":"        - Better OOP design then simply taking in a string","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"pkpaing"},"content":"    - Cons:","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"pkpaing"},"content":"        - Input will take longer to parse as the string input has to be parsed into","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"pkpaing"},"content":"          a faculty object to be used as input to ImportCommand#execute","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":289,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":290,"author":{"gitId":"hongshenggg"},"content":"        ","lastModifiedDate":"2023-04-04"},{"lineNumber":291,"author":{"gitId":"hongshenggg"},"content":"### Find Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":293,"author":{"gitId":"hongshenggg"},"content":"#### Find Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":295,"author":{"gitId":"hongshenggg"},"content":"The Find feature allows users to filter out relevant contacts from their contact list.","lastModifiedDate":"2023-04-02"},{"lineNumber":296,"author":{"gitId":"hongshenggg"},"content":"This feature is facilitated by the `FindCommand` class and the `FindCommandParser` class,","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"hongshenggg"},"content":"as well as the various predicate classes listed below.","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"hongshenggg"},"content":"* `AddressContainsKeywordPredicate`","lastModifiedDate":"2023-04-02"},{"lineNumber":300,"author":{"gitId":"hongshenggg"},"content":"* `EmailContainsKeywordPredicate`","lastModifiedDate":"2023-04-02"},{"lineNumber":301,"author":{"gitId":"hongshenggg"},"content":"* `NameContainsKeywordPredicate`","lastModifiedDate":"2023-04-02"},{"lineNumber":302,"author":{"gitId":"hongshenggg"},"content":"* `PhoneContainsKeywordPredicate`","lastModifiedDate":"2023-04-02"},{"lineNumber":303,"author":{"gitId":"hongshenggg"},"content":"* `StatusContainsKeywordPrediate`","lastModifiedDate":"2023-04-02"},{"lineNumber":304,"author":{"gitId":"hongshenggg"},"content":"* `TagContainsKeywordPredicate`","lastModifiedDate":"2023-04-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":306,"author":{"gitId":"hongshenggg"},"content":"When the user inputs a `find` command, the `FindCommandParser` parses through the","lastModifiedDate":"2023-04-02"},{"lineNumber":307,"author":{"gitId":"hongshenggg"},"content":"input to obtain the prefixes and keywords that the user has entered. For each","lastModifiedDate":"2023-04-02"},{"lineNumber":308,"author":{"gitId":"hongshenggg"},"content":"prefix-keyword pair, an instance of its associated predicate class is created","lastModifiedDate":"2023-04-02"},{"lineNumber":309,"author":{"gitId":"hongshenggg"},"content":"and all the instances are combined with `Predicate#and`. This final predicate","lastModifiedDate":"2023-04-02"},{"lineNumber":310,"author":{"gitId":"hongshenggg"},"content":"object is then passed to `Model#findOrListContents` to display the filted list to","lastModifiedDate":"2023-04-02"},{"lineNumber":311,"author":{"gitId":"hongshenggg"},"content":"the user.","lastModifiedDate":"2023-04-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":313,"author":{"gitId":"hongshenggg"},"content":"An example usage scenario is provided below to illustrate the mechanism of the","lastModifiedDate":"2023-04-02"},{"lineNumber":314,"author":{"gitId":"hongshenggg"},"content":"`find` command.","lastModifiedDate":"2023-04-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":316,"author":{"gitId":"hongshenggg"},"content":"Step 1: User starts up the application and sees a list of all their contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":318,"author":{"gitId":"hongshenggg"},"content":"Step 2: User inputs `find t/cs2103` to find the list of his contacts that takes","lastModifiedDate":"2023-04-02"},{"lineNumber":319,"author":{"gitId":"hongshenggg"},"content":"CS2103.","lastModifiedDate":"2023-04-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":321,"author":{"gitId":"hongshenggg"},"content":"Step 3: `FindCommandParser` parses through the user input and creates an instance","lastModifiedDate":"2023-04-02"},{"lineNumber":322,"author":{"gitId":"hongshenggg"},"content":"of `TagContainsKeywordPredicate` containing the keyword \"cs2103\". An instance of","lastModifiedDate":"2023-04-02"},{"lineNumber":323,"author":{"gitId":"hongshenggg"},"content":"`FindCommand` with this predicate is then created and returned.","lastModifiedDate":"2023-04-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":325,"author":{"gitId":"hongshenggg"},"content":"Step 4: `FindCommand#execute` is called, which calls `Model#findOrListContents`","lastModifiedDate":"2023-04-02"},{"lineNumber":326,"author":{"gitId":"hongshenggg"},"content":"to display the final filtered list to the user.","lastModifiedDate":"2023-04-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":328,"author":{"gitId":"hongshenggg"},"content":"The sequence diagram below illustrates this process.","lastModifiedDate":"2023-04-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":330,"author":{"gitId":"hongshenggg"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":332,"author":{"gitId":"hongshenggg"},"content":"#### Design Considerations:","lastModifiedDate":"2023-04-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":334,"author":{"gitId":"hongshenggg"},"content":"**Aspect: Combining the predicates from multiple prefixes**","lastModifiedDate":"2023-04-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":336,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 1 (current choice):** Using `Predicate#and`","lastModifiedDate":"2023-04-02"},{"lineNumber":337,"author":{"gitId":"hongshenggg"},"content":"- **Alternative 2:** Using `Predicate#or`","lastModifiedDate":"2023-04-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"hongshenggg"},"content":"**Rationale:** Decision was made to use a logical `AND` instead of `OR` when","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"hongshenggg"},"content":"combining multiple predicates as we believe this was the more intuitive approach.","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"hongshenggg"},"content":"When a user is looking for a specific group of people on his contacts, they would","lastModifiedDate":"2023-04-02"},{"lineNumber":342,"author":{"gitId":"hongshenggg"},"content":"expect the application to return a list of contacts that matches **all** of his","lastModifiedDate":"2023-04-02"},{"lineNumber":343,"author":{"gitId":"hongshenggg"},"content":"given input requirements, instead of a list of contacts that contains one or more","lastModifiedDate":"2023-04-02"},{"lineNumber":344,"author":{"gitId":"hongshenggg"},"content":"of the keywords that was entered. Hence, the logical `AND` was decided to be more","lastModifiedDate":"2023-04-02"},{"lineNumber":345,"author":{"gitId":"hongshenggg"},"content":"appropriate, and `Predicate#and` was used.","lastModifiedDate":"2023-04-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":349,"author":{"gitId":"hongshenggg"},"content":"---","lastModifiedDate":"2023-04-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"hongshenggg"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-04-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"hongshenggg"},"content":"### Product Scope","lastModifiedDate":"2023-04-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"hongshenggg"},"content":"**Target user profile**:","lastModifiedDate":"2023-04-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"hongshenggg"},"content":"Students from the National University of Singapore (NUS) who need to keep track of their contacts from different","lastModifiedDate":"2023-04-02"},{"lineNumber":358,"author":{"gitId":"hongshenggg"},"content":"classes/ccas/clubs etc.","lastModifiedDate":"2023-04-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":360,"author":{"gitId":"hongshenggg"},"content":"**Value proposition**:","lastModifiedDate":"2023-04-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"hongshenggg"},"content":"NUS Students often take many classes and meet different people. This application helps them to organise their","lastModifiedDate":"2023-04-02"},{"lineNumber":363,"author":{"gitId":"hongshenggg"},"content":"contacts list for an easier way to set up proper communication channels. This makes it easier for students to form","lastModifiedDate":"2023-04-02"},{"lineNumber":364,"author":{"gitId":"hongshenggg"},"content":"connections with their peers during their time in University.","lastModifiedDate":"2023-04-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":368,"author":{"gitId":"hongshenggg"},"content":"### User stories","lastModifiedDate":"2023-04-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"hongshenggg"},"content":"1. As a student, I can find all relevant university contacts/POCs for various purposes","lastModifiedDate":"2023-04-02"},{"lineNumber":371,"author":{"gitId":"hongshenggg"},"content":"2. As a student, I can delete the image for a person on my contact list","lastModifiedDate":"2023-04-02"},{"lineNumber":372,"author":{"gitId":"hongshenggg"},"content":"3. As a forgetful student, I can see who a person on my contact list looks like","lastModifiedDate":"2023-04-02"},{"lineNumber":373,"author":{"gitId":"hongshenggg"},"content":"4. As a user, I can add a contact so that I can keep track of my contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":374,"author":{"gitId":"hongshenggg"},"content":"5. As a user, I can view all contacts so that I can have an accessible list of contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":375,"author":{"gitId":"hongshenggg"},"content":"6. As a user, I can delete a contact so that I can remove unneeded and/or incorrect contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":376,"author":{"gitId":"hongshenggg"},"content":"7. As a student, I can to find other students in my classes that have been added as a contact so that I can ask them for","lastModifiedDate":"2023-04-02"},{"lineNumber":377,"author":{"gitId":"hongshenggg"},"content":"   help","lastModifiedDate":"2023-04-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"hongshenggg"},"content":"### Use cases","lastModifiedDate":"2023-04-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":383,"author":{"gitId":"hongshenggg"},"content":"System: BookFace","lastModifiedDate":"2023-04-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":385,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":386,"author":{"gitId":"hongshenggg"},"content":"Use case: UC1 - Add Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":388,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":390,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":391,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to add a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":392,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact\u0027s details.","lastModifiedDate":"2023-04-02"},{"lineNumber":393,"author":{"gitId":"hongshenggg"},"content":"3. New user\u0027s contact\u0027s details are added to BookFace.","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"hongshenggg"},"content":"Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":396,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":398,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects incomplete/invalid details entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":399,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of valid details.","lastModifiedDate":"2023-04-02"},{"lineNumber":400,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid details are entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":401,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":403,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":404,"author":{"gitId":"hongshenggg"},"content":"Use case: UC2 - Delete Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":406,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":408,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":409,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to delete a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":410,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact\u0027s index.","lastModifiedDate":"2023-04-02"},{"lineNumber":411,"author":{"gitId":"hongshenggg"},"content":"3. Contact is deleted from BookFace.","lastModifiedDate":"2023-04-02"},{"lineNumber":412,"author":{"gitId":"hongshenggg"},"content":"Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":414,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":416,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects incomplete/invalid index entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":417,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of a valid index.","lastModifiedDate":"2023-04-02"},{"lineNumber":418,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid information is entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":419,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":421,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":422,"author":{"gitId":"hongshenggg"},"content":"Use case: UC3 - Edit Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":424,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":426,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":427,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to edit a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":428,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact\u0027s new details.","lastModifiedDate":"2023-04-02"},{"lineNumber":429,"author":{"gitId":"hongshenggg"},"content":"3. Contact is edited in BookFace.","lastModifiedDate":"2023-04-02"},{"lineNumber":430,"author":{"gitId":"hongshenggg"},"content":"Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":432,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":434,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects incomplete/invalid details entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":435,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of valid details.","lastModifiedDate":"2023-04-02"},{"lineNumber":436,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid details are entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":437,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":439,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":440,"author":{"gitId":"hongshenggg"},"content":"Use case: UC4 - Find Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":442,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":444,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":445,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to find a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":446,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact\u0027s name.","lastModifiedDate":"2023-04-02"},{"lineNumber":447,"author":{"gitId":"hongshenggg"},"content":"3. BookFace displays the matching contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":448,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":450,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":452,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects no name entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":453,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of a valid name.","lastModifiedDate":"2023-04-02"},{"lineNumber":454,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until a name is entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":455,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":457,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":458,"author":{"gitId":"hongshenggg"},"content":"Use case: UC5 - List Contacts","lastModifiedDate":"2023-04-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":460,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":462,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":463,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to view all contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":464,"author":{"gitId":"hongshenggg"},"content":"2. BookFace displays all the user\u0027s contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":465,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":466,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":468,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":469,"author":{"gitId":"hongshenggg"},"content":"Use case: UC6 - Get Help on Commands","lastModifiedDate":"2023-04-02"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":471,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":473,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":474,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to view instructions on how to use BookFace.","lastModifiedDate":"2023-04-02"},{"lineNumber":475,"author":{"gitId":"hongshenggg"},"content":"2. BookFace displays a url to its User Guide.","lastModifiedDate":"2023-04-02"},{"lineNumber":476,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":477,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":479,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":480,"author":{"gitId":"hongshenggg"},"content":"Use case: UC7 - Add Image for a Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":481,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":482,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":483,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to add an image for a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":484,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact index and image file path.","lastModifiedDate":"2023-04-02"},{"lineNumber":485,"author":{"gitId":"hongshenggg"},"content":"3. Image is added for contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":486,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":488,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":490,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects invalid/incomplete filepath or index.","lastModifiedDate":"2023-04-02"},{"lineNumber":491,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of a valid filepath and index.","lastModifiedDate":"2023-04-02"},{"lineNumber":492,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid information is entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":493,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":495,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":496,"author":{"gitId":"hongshenggg"},"content":"Use case: UC8 - Delete Image for a Contact","lastModifiedDate":"2023-04-02"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":498,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":500,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":501,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to delete an image for a contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":502,"author":{"gitId":"hongshenggg"},"content":"2. User enters contact index.","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"hongshenggg"},"content":"3. Image is deleted for contact.","lastModifiedDate":"2023-04-02"},{"lineNumber":504,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":506,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":508,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects incomplete/invalid index entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":509,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of a valid index.","lastModifiedDate":"2023-04-02"},{"lineNumber":510,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid information is entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":512,"author":{"gitId":"hongshenggg"},"content":"2b. BookFace detects that the contact does not have an image added.","lastModifiedDate":"2023-04-02"},{"lineNumber":513,"author":{"gitId":"hongshenggg"},"content":"Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":514,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":516,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":517,"author":{"gitId":"hongshenggg"},"content":"Use case: UC9 - Import Contacts from a Faculty","lastModifiedDate":"2023-04-02"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":519,"author":{"gitId":"hongshenggg"},"content":"Actor: User","lastModifiedDate":"2023-04-02"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":521,"author":{"gitId":"hongshenggg"},"content":"MSS:","lastModifiedDate":"2023-04-02"},{"lineNumber":522,"author":{"gitId":"hongshenggg"},"content":"1. User chooses to import contacts for a faculty.","lastModifiedDate":"2023-04-02"},{"lineNumber":523,"author":{"gitId":"hongshenggg"},"content":"2. User enters faculty name.","lastModifiedDate":"2023-04-02"},{"lineNumber":524,"author":{"gitId":"hongshenggg"},"content":"3. New contacts\u0027 details are added to BookFace.","lastModifiedDate":"2023-04-02"},{"lineNumber":525,"author":{"gitId":"hongshenggg"},"content":"   Use case ends.","lastModifiedDate":"2023-04-02"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":527,"author":{"gitId":"hongshenggg"},"content":"Extensions:","lastModifiedDate":"2023-04-02"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":529,"author":{"gitId":"hongshenggg"},"content":"2a. BookFace detects incomplete/invalid details entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":530,"author":{"gitId":"hongshenggg"},"content":"BookFace displays an example of valid details.","lastModifiedDate":"2023-04-02"},{"lineNumber":531,"author":{"gitId":"hongshenggg"},"content":"System repeats Step 1-2 until valid details are entered.","lastModifiedDate":"2023-04-02"},{"lineNumber":532,"author":{"gitId":"hongshenggg"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":534,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":536,"author":{"gitId":"hongshenggg"},"content":"### Glossary","lastModifiedDate":"2023-04-02"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":538,"author":{"gitId":"hongshenggg"},"content":"* NUS: The National University of Singapore","lastModifiedDate":"2023-04-02"},{"lineNumber":539,"author":{"gitId":"hongshenggg"},"content":"* Student: A user who belongs to a faculty in NUS and attends one or more classes with other students","lastModifiedDate":"2023-04-02"},{"lineNumber":540,"author":{"gitId":"hongshenggg"},"content":"* Tutor: A user who tutors students in one or more classes","lastModifiedDate":"2023-04-02"},{"lineNumber":541,"author":{"gitId":"hongshenggg"},"content":"* Faculty: A group of university departments concerned with a major division of knowledge","lastModifiedDate":"2023-04-04"},{"lineNumber":542,"author":{"gitId":"hongshenggg"},"content":"* Contact: A person of interest whose details have been recorded by the user","lastModifiedDate":"2023-04-04"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":544,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"weekiat-douze":29,"hongshenggg":307,"SHni99":12,"-":156,"pkpaing":40}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"# User Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"BookFace is a desktop GUI application for the students in the National University","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"of Singapore (NUS) to manage the contact information of the people they meet in the various lessons or clubs that they participate in. ","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"Since NUS Students often take many classes and meet different people. This application helps them to organise their","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"contacts list for an easier way to set up proper communication channels.","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"* [Features](#features)","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"  * [Add user contacts](#add-user-contacts-add)","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"  * [Delete user contacts](#delete-user-contacts-delete)","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"  * [Edit user contacts](#edit-user-contacts-edit)","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"  * [Locating persons by keywords](#locating-persons-by-keywords-find)","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"  * [Listing all contacts](#listing-all-contacts-list)","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"  * [Help command](#help-command-help)","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"  * [Add an image for contacts](#add-an-image-for-contacts-add-image)","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"  * [Delete an image for contacts](#delete-an-image-for-contacts-delete-image)","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"  * [Quick import admin contacts](#quick-import-for-admin-contacts-import)","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"2. Download the latest `bookface.jar` from [here](https://github.com/AY2223S2-CS2103-F11-4/tp/releases).","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"3. Place `bookface.jar` file in the folder you would like to use as the *home directory*.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"4. Run the application. This can be done by either executing the `jar` file, ","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"or opening a command terminal, `cd` into the *home directory*, and running the ","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"`java -jar bookface.jar` command. The following GUI will appear upon first ","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"use of the application.","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"![GUI upon first use](images/GUIOnInitialUsage.png)","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"   ","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"5. The application is initially loaded with sample data for new users to try out the [features](#features) listed below.","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"Experienced users can delete the sample data and proceed with regular usage.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"   ","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"## Features","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"This section highlights the core features that this application provides, as","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"well as the necessary guidelines to follow when using the features. The features","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"generally follow commands of the form `COMMAND_WORD ARGUMENTs`, with each","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"feature having its own specific `COMMAND_WORD` and set of `ARGUMENTS`.","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note:** Unless otherwise stated in the guidelines for the specific ","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"\u003e feature, arguments placed within brackets (\"[\" and \"]\") denotes that the","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"\u003e argument is optional, and not required for the command to run properly.","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"### Add user contacts: `add`","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"Format: `add n/NAME s/STATUS p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG, ct/COMMITMENT_TAG, mt/MODULE_TAG]` Optional to add: `t/TAG, ct/COMMITMENT_TAG, mt/MODULE_TAG`","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"* User is *required* to enter **name, status, phone number, email, address**","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"* Note that when entering course under \"status\", course should be only one word, and should be in alphanumeric","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"* Tags can be optional","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"* If the account exists, user can add in related field of interests to share with others","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"Example:","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"* `add n/Shenghan s/Year2 Computer Science p/99999999 e/david@gmail.com a/punngol place 696a #12-348` will displays the","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"  necessary basic information that are the user\u0027s name, year/course, phone number, email, address. Optional fields are tags,","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"  for which there are commitment/cca tags, module tags and lastly the general tags for users to enter non-specific typed tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"Example (with the addition of tags):","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"* `add n/Shenghan s/Year2 Computer Science p/99999999 e/david@gmail.com a/punngol place 696a #12-348 t/developer ct/soccer","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"SHni99"},"content":"  mt/cs2103` ","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"* Note that the tags can be placed in any part of the command, and it will not break!","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"Tags are categorised according to tag colors:","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"* Commitment tags: `coral pink`","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"* Module tags: `dark green`","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"* General tags: `default blue`","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"### Delete user contacts: `delete`","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"Delete a contact.","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"* Show contact details specified by `INDEX`","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"* The index *must* be a positive integer 1, 2, 3, …","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"Example:","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"hongshenggg"},"content":"* `delete 2` deletes the second person in the list of contacts.","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"pkpaing"},"content":"### Edit user contacts: `edit`","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"pkpaing"},"content":"Edit a contact.","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"pkpaing"},"content":"Format: `edit INDEX [n/NAME] [s/STATUS] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG, ct/COMMITMENT_TAG, mt/MODULE_TAG]`","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"* At least one of the optional arguments must be specified.","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"pkpaing"},"content":"* Show contact details specified by `INDEX`","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"pkpaing"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"pkpaing"},"content":"* The index *must* be a positive integer 1, 2, 3, …","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"Example: ","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"* `edit 2 n/James Lee e/jameslee@example.com s/Year2 Computer Science p/99999999 e/david@gmail.com a/punngol place 696a #12-348 t/developer ct/soccer","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"mt/cs2103` Edits the specified information for the second person in the contact list.","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"### Locating persons by keywords: `find`","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"Finds persons whose contact details contain any of the given keywords based on the","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"prefix specified.","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"Format: `find PREFIX/KEYWORD [MORE PREFIX/KEYWORD]`","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"hongshenggg"},"content":"* The search is case-insensitive e.g. `hans` will match `Hans`","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"hongshenggg"},"content":"* The search will filter by the `PREFIX` provided, e.g. `n/` searches through the","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"hongshenggg"},"content":"  names of the contacts, `p/` searches through the phone number of the contacts, `t/`","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"hongshenggg"},"content":"  searches through the tags of the contact, etc...","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"hongshenggg"},"content":"* Each prefix must be followed by one and only one keyword. See below for example usage.","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"hongshenggg"},"content":"* Only the contacts that fulfill **all** the requirements in the given","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"hongshenggg"},"content":"  arguments will be displayed, i.e., `find n/john t/cs` will return","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"  the list of contacts where his name is `john` **and** has a tag that contains `cs`.","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"hongshenggg"},"content":"* The following shows a list of allowed prefixes:","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"hongshenggg"},"content":"  1. `n/` which represents the name","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"hongshenggg"},"content":"  2. `s/` which represents the status","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"hongshenggg"},"content":"  3. `p/` which represents the phone number","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"hongshenggg"},"content":"  4. `e/` which represents the email","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"hongshenggg"},"content":"  5. `a/` which represents the address","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"hongshenggg"},"content":"  6. `t/` which represents the tags","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"hongshenggg"},"content":"Example:","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"hongshenggg"},"content":"* `find n/amy t/cs2103 e/gmail` will return the list of contacts whose names are `amy`,","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"has a tag labeled `cs2103`, and whose emails contain `gmail`.","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"pkpaing"},"content":"### Listing all contacts: `list`","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"pkpaing"},"content":"List all contacts in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"pkpaing"},"content":"### Help command: `help`","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"pkpaing"},"content":"Shows a link to the user guide to help new users get familiar with the commands for the application.","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"pkpaing"},"content":"Format: `help`","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"hongshenggg"},"content":"### Add an image for contacts: `add-image`","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"hongshenggg"},"content":"Add a contact image for each contact.","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"weekiat-douze"},"content":"Format: `add-image INDEX ai/[PATH-TO-IMAGE]`","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"hongshenggg"},"content":"* Adds an image to the contact at the specified `INDEX`","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"hongshenggg"},"content":"* The index **must be a positive integer** 1, 2, 3,...","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"weekiat-douze"},"content":"* Ensure that `ai/` prefix is used before the image path.","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"hongshenggg"},"content":"* If the image cannot be found or user did not specify a contact image, a default image will be used","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"hongshenggg"},"content":"\u003e **Note:** The `[PATH-TO-IMAGE]` provided must be an absolute path, and should not be provided in quotation marks.","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"weekiat-douze"},"content":"\u003e For instance: `add-image 2 ai/\"C:/Users/user/Downloads/weekiat.png\"` will be invalid, whereas ","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"weekiat-douze"},"content":"\u003e `add-image 2 ai/C:/Users/user/Downloads/weekiat.png` will be valid.","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"weekiat-douze"},"content":"* `list` followed by `add-image 2 ai/C:/Users/user/Downloads/weekiat.png` adds the image `weekiat.png` to the 2nd person in the address book","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"hongshenggg"},"content":"### Delete an Image for contacts: `delete-image`","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"hongshenggg"},"content":"Delete the image of a contact.","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"weekiat-douze"},"content":"Format: `delete-image INDEX`","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"hongshenggg"},"content":"* Deletes the image of contact specified by `INDEX`","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"weekiat-douze"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"weekiat-douze"},"content":"* The index *must* be a positive integer 1, 2, 3, …","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"weekiat-douze"},"content":"* A default image will be used after it is deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"weekiat-douze"},"content":"Example:","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"hongshenggg"},"content":"* `delete-image 2` deletes the image of the 2nd person in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"hongshenggg"},"content":"### Quick Import for admin contacts: `import`","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"weekiat-douze"},"content":"Import administrative contacts for relevant faculties.","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"weekiat-douze"},"content":"Format: `import [faculty]`","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"weekiat-douze"},"content":"* Faculty acronyms (e.g. soc)","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"weekiat-douze"},"content":"* Only selected faculties will be available","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"weekiat-douze"},"content":"Example:","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":200,"author":{"gitId":"weekiat-douze"},"content":"* `import soc` adds all important administrative contact for School of Computing","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"weekiat-douze"},"content":"* `import chs` adds all important administrative contact for College of Humanities and Sciences","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"hongshenggg"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"pkpaing"},"content":"| Action           | Format, Examples                                                                                                                                                                                                                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":210,"author":{"gitId":"hongshenggg"},"content":"|------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-02"},{"lineNumber":211,"author":{"gitId":"pkpaing"},"content":"| **Add**          | `add [n/NAME] [s/STATUS] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG, ct/COMMITMENT_TAG, mt/MODULE_TAG]…​` \u003cbr\u003e e.g., `add n/James Ho s/Y2 Science p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 ct/soccer mt/cs1010s` |","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"pkpaing"},"content":"| **Delete**       | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":213,"author":{"gitId":"pkpaing"},"content":"| **Edit**         | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                                                         |","lastModifiedDate":"2023-03-02"},{"lineNumber":214,"author":{"gitId":"hongshenggg"},"content":"| **Find**         | `find PREFIX/Keyword [MORE PREFIX/KEYWORD]...`\u003cbr\u003e e.g., `find n/amy t/cs2103 e/gmail`                                                                                                                                              |","lastModifiedDate":"2023-04-02"},{"lineNumber":215,"author":{"gitId":"pkpaing"},"content":"| **List**         | `list`                                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":216,"author":{"gitId":"pkpaing"},"content":"| **Help**         | `help`                                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":217,"author":{"gitId":"weekiat-douze"},"content":"| **Add-Image**    | `add-image INDEX ai/[PATH-TO-IMAGE]` \u003cbr\u003e e.g., `add-image 2 ai/C:/Users/user/Downloads/weekiat.png`                                                                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"SHni99"},"content":"| **Delete-Image** | `delete-image INDEX` \u003cbr\u003e e.g.,  `delete-image 2`                                                                                                                                                                                   |                                                                                                                       |","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"pkpaing"},"content":"| **Import**       | `import [faculty]` \u003cbr\u003e e.g.,  `import soc, import chs`                                                                                                                                                                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":220,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"hongshenggg"},"content":"[Back to top](#top)","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"weekiat-douze":21,"hongshenggg":109,"SHni99":5,"-":67,"pkpaing":19}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":":User executes add command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"if () then ([prefix is valid and necessary inputs are filled])","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"    :New person is being added to the contact list;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"    if () then ([contact does not have person])","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"        : Add new Person to model;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"        : Store person details in address book;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"        : Display success message;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"    else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"    : Display error message;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"    endif","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"    : Display error message;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"SHni99":20}},{"path":"docs/diagrams/AddImageActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"start","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":":User executes add-image command;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"if () then ([image and image path is valid])","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"    :Image is copied into \"/profile_pictures\";","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"    if () then ([contact have profile image])","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"        :Current image is deleted;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    else ([else])","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"    endif","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    :Store new image in model;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"    : Display success message;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"else ([else])","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"    : Display error message;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"endif","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"stop","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"weekiat-douze":19}},{"path":"docs/diagrams/AddImageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"participant \":AddImageCommandParser\" as AddImageCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"participant \"command:AddImageCommand\" as AddImageCommand LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"participant \"ImageUtil\" as ImageUtil \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"[-\u003e LogicManager : execute(add-image)","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"activate LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(add-image)","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"create AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"AddressBookParser -\u003e AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"activate AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"deactivate AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"AddressBookParser -\u003e AddImageCommandParser : parse(args)","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"activate AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"create AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommandParser -\u003e AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"activate AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand --\u003e AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"deactivate AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"deactivate AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"AddressBookParser -[hidden]-\u003e AddressBookParser : command","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"destroy AddImageCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"LogicManager -\u003e AddImageCommand : execute(model)","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"activate AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"activate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"Model --\u003e AddImageCommand : lastShownList","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"deactivate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand -\u003e ImageUtil : importImage(stringPath)","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"activate ImageUtil","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"ImageUtil --\u003e AddImageCommand : newFileName","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"deactivate ImageUtil","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand -\u003e ImageUtil : deleteImage(imageName)","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"activate ImageUtil","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"ImageUtil --\u003e AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"deactivate ImageUtil","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"activate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"Model --\u003e AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"deactivate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand --\u003e LogicManager :commandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"deactivate AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"AddImageCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"destroy AddImageCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"weekiat-douze":84}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"participant \"command:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"box Addressbook ADDRESSBOOK_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"participant \":Addressbook\" as Addressbook ADDRESSBOOK_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"[-\u003e LogicManager : execute(add)","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(add)","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"create AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"AddressBookParser -\u003e AddCommandParser : parse(args)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"create AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"activate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"AddCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"AddressBookParser -[hidden]-\u003e AddressBookParser : command","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"LogicManager -\u003e AddCommand : execute(model)","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"activate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"AddCommand -\u003e Model : hasPerson(toAdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"Model -\u003e Addressbook : hasPerson(toAdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"activate Addressbook","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"Addressbook --\u003e Model : result","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"deactivate Addressbook","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"Model --\u003e AddCommand : result","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"SHni99"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"SHni99"},"content":"AddCommand -\u003e Model : addPerson(toAdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"SHni99"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"SHni99"},"content":"Model -\u003e Addressbook : addPerson(toAdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"activate Addressbook","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"Addressbook --\u003e Model : result","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"deactivate Addressbook","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"Model --\u003e AddCommand : result","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"AddCommand --\u003e LogicManager :commandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"AddCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"destroy AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"SHni99"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"SHni99":85}},{"path":"docs/diagrams/DeleteImageActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":":User executes delete-image command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"if () then ([index provided is valid])","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"    if () then ([person at index does not have default image])","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"    \t:Person\u0027s image is set to default image;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    \t:Image is deleted from program directory;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    \t:Display error message;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    endif","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    : Display error message;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"hongshenggg":18}},{"path":"docs/diagrams/DeleteImageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"participant \":DeleteImageCommandParser\" as DeleteImageCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"participant \"d:DeleteImageCommand\" as DeleteImageCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nImageUtil\" as ImageUtil LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"[-\u003e LogicManager : execute(\"delete-image 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete-image 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"create DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser -\u003e DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"activate DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"deactivate DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser -\u003e DeleteImageCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"activate DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"create DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommandParser -\u003e DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"activate DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand --\u003e DeleteImageCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"deactivate DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"deactivate DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"destroy DeleteImageCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"LogicManager -\u003e DeleteImageCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"activate DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand -\u003e Model : deleteImage(personaAtIndex)","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"Model --\u003e DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand -\u003e ImageUtil : deleteImage(imageName)","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"activate ImageUtil","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"ImageUtil --\u003e DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"deactivate ImageUtil","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"CommandResult --\u003e DeleteImageCommand : result","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"deactivate DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"DeleteImageCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"destroy DeleteImageCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"hongshenggg":79}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"!include style.puml","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"participant \"t:TagContainsKeywordPredicate\" as TagPredicate LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"end box","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"end box","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"[-\u003e LogicManager : execute(\"find t/cs2103\")","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"activate LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find t/cs2103\")","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"create FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"activate FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"t/cs2103\")","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"activate FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"create TagPredicate","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"FindCommandParser -\u003e TagPredicate","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"activate TagPredicate","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"TagPredicate --\u003e FindCommandParser : t","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"deactivate TagPredicate","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"create FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(t)","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"activate FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"deactivate FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"activate FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"FindCommand -\u003e Model : findOrListContents()","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"activate Model","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"deactivate Model","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"create CommandResult","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"activate CommandResult","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"CommandResult --\u003e FindCommand : result","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"deactivate FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"FindCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"destroy FindCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"hongshenggg":80}},{"path":"docs/diagrams/ImportActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":":User executes import command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"if () then ([faculty is valid])","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"    :Faculty contacts are retrieved;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"    :Non-duplicate contacts are added;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"    : Display success message;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"    : Display error message;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"pkpaing":15}},{"path":"docs/diagrams/ImportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"participant \":ImportCommandParser\" as ImportCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"participant \"d:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"[-\u003e LogicManager : execute(\"import soc\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"import soc\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"create ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"AddressBookParser -\u003e ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"activate ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"AddressBookParser -\u003e ImportCommandParser : parse(\"soc\")","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"activate ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"create ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"ImportCommandParser -\u003e ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"activate ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"ImportCommand --\u003e ImportCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"ImportCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"ImportCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"destroy ImportCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"pkpaing"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"pkpaing"},"content":"LogicManager -\u003e ImportCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"pkpaing"},"content":"activate ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"pkpaing"},"content":"ImportCommand -\u003e Model : addPerson(toAdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"pkpaing"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"pkpaing"},"content":"Model --\u003e ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"pkpaing"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"pkpaing"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"pkpaing"},"content":"ImportCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"pkpaing"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"pkpaing"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"pkpaing"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"pkpaing"},"content":"ImportCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"pkpaing"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"pkpaing"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"pkpaing"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"pkpaing"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"pkpaing":67}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"!define ADDRESSBOOK_COLOR #A38300","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"!define ADDRESSBOOK_COLOR_T1 #FFE374","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"!define ADDRESSBOOK_COLOR_T2 #EDC520","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"!define ADDRESSBOOK_COLOR_T3 #806600","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"!define ADDRESSBOOK_COLOR_T2 #544400","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"SHni99":6,"-":75}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"title: BookFace","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-4/tp/actions)","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"* This is BookFace, an NUS-centered address book application.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"  Example usages:","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"    * Add contacts along with the image of the person","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    * Quickly import university related contacts","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"* The project simulates an ongoing software project for a desktop application (called BookFace) used for managing","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"  contact details of NUS staff/students.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"* It is named BookFace because it is an address book organizer with photos of the contacts you save.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"* If you are interested in using BookFace, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"* If you are interested about developing BookFace, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"weekiat-douze":12,"-":11,"pkpaing":1}},{"path":"docs/team/castryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"title: Ian\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"### Project: BookFace","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"    * What it does:","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    * Justification:","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    * Highlights:","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    * Credits:","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"    *","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"    * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"    * Reported bugs and suggestions for other teams in the class ()","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"pkpaing":40}},{"path":"docs/team/hongshenggg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"# Project: BookFace","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"BookFace is an NUS-centered contacts management system that allows students","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"of NUS to organise their list of friends and acquaintances that they have","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"met in their various classes, CCAs, project groups etc. The application aims","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"to provide NUS students a means to keep track of the contact details of th","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"numerous people they have met during their time in NUS in hopes of facilitating","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"better communication among peers, as well as provide a centralised channel for","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"students to obtain relevant administrative contact information of the various","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"departments and faculties that are in the school.","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"## Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"### Code Contributed","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"[Here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhongshenggg\u0026tabRepo\u003dAY2223S2-CS2103-F11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"is a link to view the code that has been contributed to the team project.","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"The section below will provide a brief overview on what key features have","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"been implemented.","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"### Enhancements implemented","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"Main contributions revolved around two key features:","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"1. Delete-image","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"2. Find","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"{Todo: Add summary}","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"### Contributions to the UG","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"The following are the list of sections that have been contributed to the UG:","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"- Table of contents located at the top of the UG","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"- Quick Start","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"- Features: ","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"  - Delete user contacts: `delete`","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"  - Locating persons by keywords: `find`","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"  - Delete an image for contacts: `delete-image`","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"### Contributions to the DG","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"The following are the list of sections that have been contributed to the DG:","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"- Creation of the main skeletal structure of the DG to facilitate team members contributions.","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"- Table of contents located at the top of the DG","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"- Acknowledgements","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"- Implementation:","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"  - Delete Image Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"  - Find Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"The diagrams contributed to the DG are reproduced below.","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"    \u003cimg src\u003d\"../images/DeleteImageSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"    \u003cp style\u003d\"margin-top: 0; margin-bottom: 2rem;\"\u003e\u003ci\u003eFigure 1: Delete image sequence diagram\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"    \u003cimg src\u003d\"../images/DeleteImageActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"    \u003cp style\u003d\"margin-top: 0; margin-bottom: 2rem\"\u003e\u003ci\u003eFigure 2: Delete image activity diagram\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"    \u003cimg src\u003d\"../images/FindSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"    \u003cp style\u003d\"margin-top: 0; margin-bottom: 2rem\"\u003e\u003ci\u003eFigure 3: Find sequence diagram\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"The following are the list of team-based tasks accomplished:","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"- Maintaining the issue tracker","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"- Adding non-feature related sections to the UG and DG","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"Main contributions in this aspect revolve around reviewing and approving of","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"hongshenggg"},"content":"teammate\u0027s Pull Requests, as well as sharing technical opinions through","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"informal channels, such as team meetings and group chat with team members.","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"hongshenggg"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"Participated in the Practical Exam Dry Run and performed bug testing on","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"the [CareFlow](https://github.com/AY2223S2-CS2103T-W09-3/tp) application.","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"hongshenggg":85}},{"path":"docs/team/pkpaing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"title: Phone Khant Paing\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"### Project: BookFace","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"    * What it does:","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    * Justification:","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    * Highlights:","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    * Credits:","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"  *","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"    * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"    * Reported bugs and suggestions for other teams in the class ()","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"pkpaing":42}},{"path":"docs/team/shni99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"BookFace is a university-centered address book application.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"It is intended to help members of the university organize their related university contacts.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"## Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"### Code Contributed","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dshni99\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"### Enhancement Implemented","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"_to be added soon_","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"### Contributions to UG","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"_to be added soon_","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"### Contributions to DG","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"_to be added soon_","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"SHni99":12}},{"path":"docs/team/weekiat-douze.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"BookFace is a university-centered address book application.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"It is intended to help members of the university organize their related university contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"## Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"### Code Contributed","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dweekiat-douze\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"### Enhancement Implemented","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"_to be added soon_","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"### Contributions to UG","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"_to be added soon_","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"### Contributions to DG","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"_to be added soon_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"weekiat-douze":12}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e — Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"from `Person` class.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"much as we can.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address`","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings`","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"  and `Search for text occurrences`","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"locations in which the `Address` class is used.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"   the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"SHni99"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"SHni99"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"SHni99"},"content":"refactoring.","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"SHni99"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"SHni99"},"content":"your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"SHni99"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"SHni99"},"content":"references to `Address` in test data and documentation.","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"SHni99"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"SHni99"},"content":"does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"SHni99"},"content":"  \"persons\": [","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"SHni99"},"content":"    {","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"SHni99"},"content":"      \"status\": \"Y2 computer science\",","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"SHni99"},"content":"  ]","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SHni99":42,"-":94}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"SHni99":4,"-":21}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"        ui \u003d new UiManager(logic, model);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SHni99":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SHni99":1,"-":78}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hongshenggg":1,"-":12}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"                .anyMatch(wordInPreppedSentence -\u003e wordInPreppedSentence.toLowerCase().contains(preppedWord));","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hongshenggg":2,"-":65}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"    void setPersonId(int index);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"    int getPersonId();","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SHni99":6,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"SHni99"},"content":"    public void setPersonId(int index) {","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"SHni99"},"content":"        model.setPersonId(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"SHni99"},"content":"    public int getPersonId() {","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"SHni99"},"content":"        return model.getPersonId();","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SHni99":13,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"        + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"        + PREFIX_STATUS + \"Y2 computer science \"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"    public String getName() {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"        return String.valueOf(toAdd.getName()) + String.valueOf(toAdd.getStatus()) + String.valueOf(toAdd.getPhone())","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"            + String.valueOf(toAdd.getEmail()) + String.valueOf(toAdd.getAddress()) + String.valueOf(toAdd.getTags());","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":8,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/AddImageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_IMAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.model.util.ImageUtil.deleteImage;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.model.util.ImageUtil.importImage;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":" * Adds an image to the address on the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"public class AddImageCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    public static final String COMMAND_WORD \u003d \"add-image\";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an image to the person identified \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"            + \"Existing image will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"            + PREFIX_ADD_IMAGE + \"[IMAGE_PATH]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_ADD_IMAGE + \"/pictures/johndoe.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Image Added\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"    private final String stringPath;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"     * Creates an AddImageCommand to add the specified {@code Image}","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"    public AddImageCommand(Index index, String stringPath) {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"        requireNonNull(stringPath);","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"        this.stringPath \u003d stringPath;","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        Image newImage;","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"            String fileName \u003d importImage(stringPath);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"            newImage \u003d new Image(fileName);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"            throw ce;","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Path to image provided is invalid.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"            if (io.getMessage().contains(\"Operation not permitted\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"                throw new CommandException(\"Upload failed due to lack of permission for directory/file.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Upload image failed.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"            Image oldImage \u003d personToEdit.getImage();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"            if (!oldImage.imageName.equals(Image.DEFAULT_IMAGE)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"                deleteImage(personToEdit.getImage().imageName);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Failed to update image.\", io);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Failed to update image due to permissions\", pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"                personToEdit.getName(), personToEdit.getStatus(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), newImage);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"        // short circuit if same object","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"            return true;","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"        if (!(other instanceof AddImageCommand)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"        // state check","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"        AddImageCommand a \u003d (AddImageCommand) other;","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"        return index.equals(a.index)","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"                \u0026\u0026 this.stringPath.equals(a.stringPath);","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"weekiat-douze":107,"SHni99":1}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteImageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.util.ImageUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":" * Deletes the image of the person identified using it\u0027s","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":" * displayed index from the address book, and sets it to","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":" * a default image.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"public class DeleteImageCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    public static final String COMMAND_WORD \u003d \"delete-image\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"            + \": Deletes the image for the person identified by the index number \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"            + \"used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_NO_IMAGE_TO_DELETE \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"            \"Selected person does not have an image to delete\";","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_DELETE_IMAGE_SUCCESS \u003d \"Image successfully deleted\";","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_DELETE_IMAGE_FAILURE \u003d \"Failed to delete image\";","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"    public DeleteImageCommand(Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"        Person personAtIndex \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"        if (personAtIndex.hasDefaultImage()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"            throw new CommandException(MESSAGE_NO_IMAGE_TO_DELETE);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"        model.deleteImage(personAtIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"            ImageUtil.deleteImage(personAtIndex.getImage().imageName);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"            throw new CommandException(MESSAGE_DELETE_IMAGE_FAILURE, io);","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(MESSAGE_DELETE_IMAGE_FAILURE, pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        return new CommandResult(MESSAGE_DELETE_IMAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof DeleteImageCommand // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteImageCommand) other).targetIndex));","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"weekiat-douze":3,"hongshenggg":71}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.CommitmentTag;","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"        + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"SHni99"},"content":"        Set\u003cTag\u003e updatedTags;","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"SHni99"},"content":"        if (!editPersonDescriptor.getTags().equals(Optional.empty())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"SHni99"},"content":"            List\u003cString\u003e existingTagsType \u003d editPersonDescriptor.replaceExistingTags(personToEdit.getTags())","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"SHni99"},"content":"                .stream().distinct().collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"SHni99"},"content":"            List\u003cString\u003e newTagsType \u003d editPersonDescriptor.replaceExistingTags(editPersonDescriptor.getTags().get())","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"SHni99"},"content":"                .stream().distinct().collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"SHni99"},"content":"            Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"SHni99"},"content":"            if (newTagsType.stream().allMatch(element -\u003e existingTagsType.contains(element))) {","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"SHni99"},"content":"                newTags.addAll(editPersonDescriptor.getTags().orElse(personToEdit.getTags()));","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"SHni99"},"content":"                newTags.addAll(personToEdit.getTags().stream().filter(x -\u003e !newTagsType.contains(","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"SHni99"},"content":"                    editPersonDescriptor.containTagType(x))).collect(Collectors.toList()));","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"SHni99"},"content":"                updatedTags \u003d newTags;","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"SHni99"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"SHni99"},"content":"                Collection\u003cString\u003e stringTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"SHni99"},"content":"                newTags.addAll(editPersonDescriptor.getTags().get());","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"                newTags.addAll(personToEdit.getTags());","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"                Collection\u003cTag\u003e tags \u003d Stream.of(newTags).flatMap(Collection::stream)","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"SHni99"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"SHni99"},"content":"                for (Tag tag : tags) {","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"                    stringTags.add(tag.tagName);","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"SHni99"},"content":"                }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"SHni99"},"content":"                updatedTags \u003d ParserUtil.parseTags(stringTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"SHni99"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"SHni99"},"content":"            updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"weekiat-douze"},"content":"        Image updatedImage \u003d personToEdit.getImage();","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"SHni99"},"content":"        return new Person(updatedName, updatedStatus, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"SHni99"},"content":"            updatedTags, updatedImage);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"SHni99"},"content":"        private Status status;","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"SHni99"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"SHni99"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"SHni99"},"content":"            return CollectionUtil.isAnyNonNull(name, status, phone, email, address, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"SHni99"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"SHni99"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"SHni99"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"SHni99"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"SHni99"},"content":"        public List\u003cString\u003e replaceExistingTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"SHni99"},"content":"            return ((tags !\u003d null) ? containTagTypes(tags) : null);","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"SHni99"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"SHni99"},"content":"         * Checks if the tags contain what types","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"SHni99"},"content":"         *","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"SHni99"},"content":"         * @param tags annotation for correct labels in a list","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"SHni99"},"content":"         * @return the types in from of list of tags","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"SHni99"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"SHni99"},"content":"        public List\u003cString\u003e containTagTypes(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"SHni99"},"content":"            List\u003cString\u003e tagType \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"SHni99"},"content":"            for (Tag tag : tags) {","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"SHni99"},"content":"                if (tag instanceof ModuleTag) {","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"SHni99"},"content":"                    tagType.add(\"Module\");","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"SHni99"},"content":"                } else if (tag instanceof CommitmentTag) {","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"SHni99"},"content":"                    tagType.add(\"Commitment\");","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"SHni99"},"content":"                } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"SHni99"},"content":"                    tagType.add(\"Tag\");","lastModifiedDate":"2023-03-26"},{"lineNumber":268,"author":{"gitId":"SHni99"},"content":"                }","lastModifiedDate":"2023-03-26"},{"lineNumber":269,"author":{"gitId":"SHni99"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"SHni99"},"content":"            return tagType;","lastModifiedDate":"2023-03-26"},{"lineNumber":271,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":272,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":273,"author":{"gitId":"SHni99"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":274,"author":{"gitId":"SHni99"},"content":"         * Checks if the tag contains what type","lastModifiedDate":"2023-03-26"},{"lineNumber":275,"author":{"gitId":"SHni99"},"content":"         *","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"SHni99"},"content":"         * @param tag annotation for correct label","lastModifiedDate":"2023-03-26"},{"lineNumber":277,"author":{"gitId":"SHni99"},"content":"         * @return type in from of String of one tag","lastModifiedDate":"2023-03-26"},{"lineNumber":278,"author":{"gitId":"SHni99"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":279,"author":{"gitId":"SHni99"},"content":"        public String containTagType(Tag tag) {","lastModifiedDate":"2023-03-26"},{"lineNumber":280,"author":{"gitId":"SHni99"},"content":"            String tagType \u003d \"\";","lastModifiedDate":"2023-03-26"},{"lineNumber":281,"author":{"gitId":"SHni99"},"content":"            if (tag instanceof ModuleTag) {","lastModifiedDate":"2023-03-26"},{"lineNumber":282,"author":{"gitId":"SHni99"},"content":"                tagType \u003d \"Module\";","lastModifiedDate":"2023-03-26"},{"lineNumber":283,"author":{"gitId":"SHni99"},"content":"            } else if (tag instanceof CommitmentTag) {","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"SHni99"},"content":"                tagType \u003d \"Commitment\";","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"SHni99"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"SHni99"},"content":"                tagType \u003d \"Tag\";","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"SHni99"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"SHni99"},"content":"            return tagType;","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":316,"author":{"gitId":"SHni99"},"content":"                \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2023-03-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"weekiat-douze":1,"SHni99":105,"-":217}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":" * Finds and lists all persons in address book whose details contains any of the","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":" * argument keywords based on the prefixes in the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"            + \": Finds all persons whose details contain any of \"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"            + \"the specified keywords (case-insensitive) based on \"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"            + \"the prefix provided and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"            + \"Each prefix must be followed by one and only one keyword.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"            + \"Please use the \\\"help\\\" command for more information on \"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"            + \"the usage of this command.\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"            + \"Parameters: [PREFIX]/KEYWORD [MORE [PREFIX]/KEYWORD]...\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice s/y4 p/91234567\"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"            + \" e/alice@example.com a/blk 123 t/cs2103\";","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    private Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"        model.findOrListContents(predicate, \"find\");","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hongshenggg":17,"SHni99":1,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.storage.ChsContacts.CHS_CONTACTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.storage.SocContacts.SOC_CONTACTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports a list of contacts to the address book. \"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"            + \"Parameters: FACULTY\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"            + \"Example: \" + COMMAND_WORD + \" SOC\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Theses contact(s) were successfully imported:\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    public static final String MESSAGE_DUPLICATE_IMPORT \u003d \" already exists in the address book\";","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"    public static final String MESSAGE_NO_FACULTY \u003d \"Faculty not found!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"    private final String faculty;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"     * Creates an ImportCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"    public ImportCommand(String faculty) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"pkpaing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"pkpaing"},"content":"        String duplicates \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"pkpaing"},"content":"        String successes \u003d \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"pkpaing"},"content":"        int duplicateCounter \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"pkpaing"},"content":"        ArrayList\u003cPerson\u003e importList \u003d new ArrayList\u003cPerson\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"pkpaing"},"content":"        if (faculty.equalsIgnoreCase(\"soc\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"pkpaing"},"content":"            importList \u003d SOC_CONTACTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"pkpaing"},"content":"        } else if (faculty.equalsIgnoreCase(\"chs\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"pkpaing"},"content":"            importList \u003d CHS_CONTACTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"pkpaing"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"pkpaing"},"content":"            throw new CommandException(MESSAGE_NO_FACULTY);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"pkpaing"},"content":"        for (Person toAdd : importList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"pkpaing"},"content":"            if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"pkpaing"},"content":"                duplicates +\u003d toAdd.getName() + MESSAGE_DUPLICATE_IMPORT + \"\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"pkpaing"},"content":"                duplicateCounter++;","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"pkpaing"},"content":"                continue;","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"pkpaing"},"content":"                duplicates +\u003d toAdd.getName() + \" was successfully imported\\n\";","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"pkpaing"},"content":"                successes +\u003d \"\\n\" + toAdd.getName();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"pkpaing"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"pkpaing"},"content":"        if (duplicateCounter \u003d\u003d importList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"pkpaing"},"content":"            throw new CommandException(duplicates);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"pkpaing"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + successes));","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"pkpaing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"pkpaing"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"pkpaing"},"content":"                || (other instanceof ImportCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"pkpaing":79}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"        model.findOrListContents(PREDICATE_SHOW_ALL_PERSONS, \"list\");","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":1,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMITMENT_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MODULE_TAG, PREFIX_COMMITMENT_TAG);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STATUS, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"        Collection\u003cString\u003e allTags \u003d Stream.of(argMultimap.getAllValues(PREFIX_TAG),","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"                argMultimap.getAllValues(PREFIX_MODULE_TAG), argMultimap.getAllValues(PREFIX_COMMITMENT_TAG))","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"            .flatMap(Collection::stream)","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(allTags);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"        Image image \u003d new Image();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"SHni99"},"content":"        Person person \u003d new Person(name, status, phone, email, address, tagList, image);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"weekiat-douze":2,"SHni99":17,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddImageCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_IMAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.AddImageCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":" * Parses input arguments and creates a new {@code AddImageCommand} object","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"public class AddImageCommandParser implements Parser\u003cAddImageCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"     * Parses given {@code String} of arguments in the context of the {@code AddImageCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"     * @param args user input","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"     * @return {@code AddImageCommand} object for execution","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     * @throws ParseException if the user input does not conform to expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    public AddImageCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_IMAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddImageCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"        String path \u003d argMultimap.getValue(PREFIX_ADD_IMAGE).orElse(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"        if (path \u003d\u003d null || path.isEmpty()) {","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddImageCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"        return new AddImageCommand(index, path);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"weekiat-douze":43}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.AddImageCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.commands.DeleteImageCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        case DeleteImageCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"            return new DeleteImageCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"pkpaing"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"pkpaing"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"        case AddImageCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"            return new AddImageCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weekiat-douze":4,"hongshenggg":4,"-":72,"pkpaing":4}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"     **/","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"        if (prefix.toString().equals(\"mt/\")) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"            argValues.add(\"ModuleXXXXX\" + argValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"        } else if (prefix.toString().equals(\"ct/\")) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"            argValues.add(\"CommitmentXXXXX\" + argValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"SHni99":9,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"    public static final Prefix PREFIX_MODULE_TAG \u003d new Prefix(\"mt/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"    public static final Prefix PREFIX_COMMITMENT_TAG \u003d new Prefix(\"ct/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"    public static final Prefix PREFIX_ADD_IMAGE \u003d new Prefix(\"ai/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weekiat-douze":1,"SHni99":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteImageCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.commands.DeleteImageCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":" * Parses input arguments and creates a new DeleteImageCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"public class DeleteImageCommandParser implements Parser\u003cDeleteImageCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"     * Parses the given {@code String} of arguments in the context of","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"     * the DeleteImageCommand and returns a DeleteImageCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"     * for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"     * @param args The string of arguments","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"     * @return The DeleteImageCommand object for execution","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"    public DeleteImageCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"            return new DeleteImageCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hongshenggg":30}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMITMENT_TAG;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STATUS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_COMMITMENT_TAG, PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"            editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"        Collection\u003cString\u003e allTags \u003d Stream.of(argMultimap.getAllValues(PREFIX_TAG),","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"                argMultimap.getAllValues(PREFIX_MODULE_TAG), argMultimap.getAllValues(PREFIX_COMMITMENT_TAG))","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"            .flatMap(Collection::stream)","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"        parseTagsForEdit(allTags).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SHni99":16,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.StatusContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    private Prefix[] possiblePrefixes \u003d {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_STATUS,","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"        PREFIX_TAG","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"    };","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"                ArgumentTokenizer.tokenize(args, possiblePrefixes);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e predicate \u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"        for (Prefix p : possiblePrefixes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"            List\u003cString\u003e prefixArguments \u003d argMultimap.getAllValues(p);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"            if (prefixArguments.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"                continue;","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"            for (String arg : prefixArguments) {","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"                if (!isValidArgument(arg)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"                Predicate\u003cPerson\u003e currentPredicate \u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"                if (p \u003d\u003d PREFIX_NAME) {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new NameContainsKeywordPredicate(arg);","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"                } else if (p \u003d\u003d PREFIX_STATUS) {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new StatusContainsKeywordPredicate(arg);","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"                } else if (p \u003d\u003d PREFIX_PHONE) {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new PhoneContainsKeywordPredicate(arg);","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"                } else if (p \u003d\u003d PREFIX_EMAIL) {","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new EmailContainsKeywordPredicate(arg);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"                } else if (p \u003d\u003d PREFIX_ADDRESS) {","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new AddressContainsKeywordPredicate(arg);","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"                } else if (p \u003d\u003d PREFIX_TAG) {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"                    currentPredicate \u003d new TagContainsKeywordPredicate(arg);","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"                assert currentPredicate !\u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"                if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"                    predicate \u003d currentPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"                } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"                    predicate \u003d predicate.and(currentPredicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"hongshenggg"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"hongshenggg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"hongshenggg"},"content":"        return new FindCommand(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"hongshenggg"},"content":"    private static boolean isValidArgument(String argument) {","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"hongshenggg"},"content":"        String preppedWord \u003d argument.trim().toLowerCase();","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"hongshenggg"},"content":"        if (preppedWord.isEmpty() || preppedWord.split(\"\\\\s+\").length !\u003d 1) {","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"hongshenggg"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"SHni99"},"content":"        return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hongshenggg":66,"SHni99":6,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"        return new ImportCommand(args.trim());","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"pkpaing":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.CommitmentTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index: Make sure index is an integer of at least 1.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"     * Parses a {@code String fullStatus} into a {@code Status}.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"     * @throws ParseException if the given {@code fullStatus} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"    public static Status parseStatus(String fullStatus) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"        requireNonNull(fullStatus);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"        String trimmedStatus \u003d fullStatus.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"        String[] modParts \u003d trimmedTag.split(\"XXXXX\");","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"        return (modParts[0].equals(\"Module\")) ? new ModuleTag(trimmedTag) : (modParts[0].equals(\"Commitment\")","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"SHni99"},"content":"            ? new CommitmentTag(trimmedTag)","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"SHni99"},"content":"            : new Tag(trimmedTag));","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"SHni99"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hongshenggg":1,"SHni99":26,"-":121}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"     * Removes the image of {@code target} from this {@code AddressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"     * @param target The person whose image is to be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"hongshenggg"},"content":"    public void removeImage(Person target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"hongshenggg"},"content":"        Person newPerson \u003d new Person(","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"hongshenggg"},"content":"                target.getName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"SHni99"},"content":"                target.getStatus(),","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"                target.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"                target.getEmail(),","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"                target.getAddress(),","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"                target.getTags()","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"hongshenggg"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"hongshenggg"},"content":"        persons.setPerson(target, newPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hongshenggg":17,"SHni99":1,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"     * Deletes the image for the given person.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"hongshenggg"},"content":"    void deleteImage(Person target);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"     * Finds or lists the given contents.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"     * {@code predicate} must already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"    void findOrListContents(Predicate\u003cPerson\u003e predicate, String command);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"    void setPersonId(int index);","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"    int getPersonId();","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"SHni99"},"content":"    void setMainWindow(MainWindow mainWindow);","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"hongshenggg":6,"SHni99":14,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"    private int index;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"        changeMainWindowPane(target, \"clear\");","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"    public void deleteImage(Person target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"        addressBook.removeImage(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"SHni99"},"content":"        changeMainWindowPane(target, \"clear\");","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"SHni99"},"content":"        changeMainWindowPane(person, \"add\");","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"SHni99"},"content":"        changeMainWindowPane(editedPerson, \"edit\");","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"SHni99"},"content":"    public void findOrListContents(Predicate\u003cPerson\u003e predicate, String command) {","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"        updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"        changeMainWindowPane(null, command);","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"    private void changeMainWindowPane(Person person, String command) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"SHni99"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"SHni99"},"content":"            if (filteredPersons !\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"SHni99"},"content":"                mainWindow.changeIndividualPane(person, command);","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"            } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"SHni99"},"content":"                mainWindow.changeIndividualPane(null, command);","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"SHni99"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"SHni99"},"content":"    public void setPersonId(int index) {","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"SHni99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"SHni99"},"content":"    public int getPersonId() {","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"SHni99"},"content":"        return this.index - 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"SHni99"},"content":"    public void setMainWindow(MainWindow updateWindow) {","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"SHni99"},"content":"        mainWindow \u003d updateWindow;","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hongshenggg":3,"SHni99":40,"-":152}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"        + \"1. The local-part should only contain alphanumeric characters (limit at 1 to 20 chars) and these special\"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"        + \"characters, excluding \"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]{1,20}\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":3,"-":69}},{"path":"src/main/java/seedu/address/model/person/Image.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":" * Represents a Person\u0027s image in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"public class Image {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"    public static final String IMAGE_PATH \u003d \"profile_pictures/\";","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"    public static final String DEFAULT_IMAGE \u003d \"default_image.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"    public static final String DEFAULT_IMAGE_PATH \u003d \"images/default_image.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"    public final String imageName;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"     * Constructs an {@code Image}.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"     * @param imageName A valid image name.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    public Image(String imageName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"        this.imageName \u003d imageName;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"     * Overloaded constructor for a default image.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    public Image() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"        this.imageName \u003d DEFAULT_IMAGE;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    public boolean isDefaultImage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        return this.imageName.equals(DEFAULT_IMAGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"    public String getFullString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        if (isDefaultImage()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"            return DEFAULT_IMAGE_PATH;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        return IMAGE_PATH + imageName;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"        return imageName;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        return imageName.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"weekiat-douze":34,"hongshenggg":15}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank \"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"            + \"and should be between 1-24 characters long\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]{1,24}\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":3,"-":56}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"    private final Status status;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    private Image image;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"    public Person(Name name, Status status, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Image image) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"        requireAllNonNull(name, status, phone, email, address, tags, image);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"     * Overloaded constructor for Person without an image provided.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"     * A default image will be used for this person.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"     * @param name","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"     * @param status","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"     * @param phone","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"     * @param email","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"     * @param address","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"     * @param tags","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"    public Person(Name name, Status status, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        this.image \u003d new Image();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"        return status;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"    public Image getImage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"        return image;","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"hongshenggg"},"content":"    public String getImagePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"hongshenggg"},"content":"        return this.image.getFullString();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"    public static String getDefaultImagePath() {","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"        return Image.DEFAULT_IMAGE_PATH;","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"hongshenggg"},"content":"    public boolean hasDefaultImage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"hongshenggg"},"content":"        return this.image.isDefaultImage();","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"            \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"SHni99"},"content":"        return Objects.hash(name, status, phone, email, address, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"SHni99"},"content":"            .append(\"; Status: \")","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"SHni99"},"content":"            .append(getStatus())","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"SHni99"},"content":"            .append(getAddress());","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weekiat-douze":9,"hongshenggg":20,"SHni99":16,"-":127}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3-15 digits long\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SHni99":2,"-":51}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":" * Represents a Person\u0027s status in the address book. Information contains his current year and course of study.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"public class Status {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"        \"Status should only contain alphanumeric characters, numbers and spaces, and it should not be blank. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"            + \"Max characters: 20\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"     * The first character denotes the year of the student and must not be a whitespace,","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"     * while the second character denotes the course of the student and must not be a whitespace,","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]{1,30}\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"    public final String fullStatusDetail;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"     * @param statusDetail A valid status input of the student.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"    public Status(String statusDetail) {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"        requireNonNull(statusDetail);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"        checkArgument(isValidStatus(statusDetail), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"        fullStatusDetail \u003d statusDetail;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"        return fullStatusDetail;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"            || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"            \u0026\u0026 fullStatusDetail.equals(((Status) other).fullStatusDetail)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"        return fullStatusDetail.hashCode();","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"SHni99":61}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"public class AddressContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    public AddressContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        return StringUtil.containsWordIgnoreCase(person.getAddress().toString(), keyword);","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof AddressContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 keyword.equals(((AddressContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"hongshenggg":30}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"public class EmailContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    public EmailContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        return StringUtil.containsWordIgnoreCase(person.getEmail().toString(), keyword);","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof EmailContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 keyword.equals(((EmailContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"hongshenggg":30}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"public class NameContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"     * Constructor that takes in a list of keywords","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"     * @param keywords The list of keywords for the predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"    public NameContainsKeywordPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"     * Constructor that takes in a singular {@code String} keyword","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"     * @param keyword The keyword for the predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    public NameContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"        this.keywords \u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"        if (keywords !\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"        return StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof NameContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 keyword.equals(((NameContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hongshenggg":24,"-":26}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"public class PhoneContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    public PhoneContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        return StringUtil.containsWordIgnoreCase(person.getPhone().toString(), keyword);","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"            || (other instanceof PhoneContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"            \u0026\u0026 keyword.equals(((PhoneContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"hongshenggg":13,"SHni99":16}},{"path":"src/main/java/seedu/address/model/person/predicates/StatusContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":" * Tests that a {@code Person}\u0027s {@code Status} matches any of the keywords given.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"public class StatusContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    public StatusContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        return StringUtil.containsWordIgnoreCase(person.getStatus().toString(), keyword);","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof StatusContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 keyword.equals(((StatusContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"hongshenggg":30}},{"path":"src/main/java/seedu/address/model/person/predicates/TagContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"public class TagContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    public TagContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"        return tags.stream().anyMatch(tag -\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"                StringUtil.containsWordIgnoreCase(tag.getTagName(), keyword));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"                || (other instanceof TagContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"hongshenggg"},"content":"                \u0026\u0026 keyword.equals(((TagContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"weekiat-douze":1,"hongshenggg":33}},{"path":"src/main/java/seedu/address/model/tag/AccommodationTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"public class AccommodationTag {","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SHni99":8}},{"path":"src/main/java/seedu/address/model/tag/CommitmentTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"public class CommitmentTag extends Tag {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"    public CommitmentTag(String tagName) {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"        super(tagName);","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"     * @return the corresponding color code for css","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"    public String tagColor() {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"        return \"#f88379\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"        return \" [Commitment: \" + tagName.split(\"XXXXX\")[1] + \"] \";","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SHni99":24}},{"path":"src/main/java/seedu/address/model/tag/ModuleTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"public class ModuleTag extends Tag {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"    public ModuleTag(String tagName) {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"        super(tagName);","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"     * @return the corresponding color code for css","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"    public String tagColor() {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"        return \"#193E04\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"        return \" [Module: \" + tagName.split(\"XXXXX\")[1] + \"] \";","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SHni99":24}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric, do not include\"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"        + \" characters like @,#,*,- or white space between words\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"        assert tagName !\u003d null : \"Tag object with null tagName!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"        String[] splitTag \u003d this.tagName.split(\"XXXXX\");","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"        if (splitTag.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"            return splitTag[0];","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"            return splitTag[1];","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"     * @return the corresponding color code for css","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"    public String tagColor() {","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"        return \"#000080\";","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"            \u0026\u0026 tagName.equalsIgnoreCase(((Tag) other).tagName)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weekiat-douze":10,"hongshenggg":1,"SHni99":9,"-":52}},{"path":"src/main/java/seedu/address/model/util/ImageUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.model.person.Image.IMAGE_PATH;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import java.io.File;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"import javax.imageio.ImageIO;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":" * Contains utility methods for {@code Image} file operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"public class ImageUtil {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"     * Copies the image provided for use in BookFace.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"     * @param stringPath Absolute path to image.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"     * @return String file name of the new file.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"     * @throws IOException when file I/O is unsuccessful.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"    public static String importImage(String stringPath) throws IOException, CommandException, InvalidPathException {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"            checkDirectory();","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Unable to import due to permissions.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"        if (stringPath \u003d\u003d null || stringPath.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Path to image has not been included.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"        Path path \u003d Paths.get(stringPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Referenced file does not exist.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        assert Files.exists(path) : \"File path invalid\";","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"        String type \u003d Files.probeContentType(path);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"File at path is not an image\");","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        boolean validImageType \u003d type.equals(\"image/png\") || type.equals(\"image/jpeg\");","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"        if (!validImageType) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Please only upload png or jpeg images.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        if (ImageIO.read(new File(stringPath)) \u003d\u003d null) {","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"            throw new CommandException(\"Referenced file is not an image\");","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"        String newName \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"        String extension \u003d \".png\";","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"        if (type.contains(\"jpeg\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"            extension \u003d \".jpg\";","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"        Path destination \u003d Paths.get(IMAGE_PATH + newName + extension);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"        Files.copy(path, destination, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"        return newName + extension;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"     * Delete image given file name.","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"     * @param fileName Name of file to be deleted.","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"     * @return false if image does not exist, true if deletion is successful.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"     * @throws IOException when file I/O is unsuccessful.","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"weekiat-douze"},"content":"    public static boolean deleteImage(String fileName) throws IOException, ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"weekiat-douze"},"content":"            checkDirectory();","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"weekiat-douze"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"weekiat-douze"},"content":"            throw new ParseException(\"Unable to delete due to permissions.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"weekiat-douze"},"content":"        Path path \u003d Paths.get(IMAGE_PATH + fileName);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"weekiat-douze"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"weekiat-douze"},"content":"        Files.delete(path);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"weekiat-douze"},"content":"        return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"weekiat-douze"},"content":"     * Check if image exist and is valid.","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"weekiat-douze"},"content":"     * @param filePath name of the image file/","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"weekiat-douze"},"content":"     * @return True if image can exist and is valid, False otherwise.","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"weekiat-douze"},"content":"     * @throws IOException when file I/O is unsuccessful.","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"weekiat-douze"},"content":"    public static boolean isValidImage(String filePath) throws IOException {","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"weekiat-douze"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"weekiat-douze"},"content":"            checkDirectory();","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"weekiat-douze"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"weekiat-douze"},"content":"        if (filePath \u003d\u003d null || filePath.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"weekiat-douze"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"weekiat-douze"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"        String type \u003d Files.probeContentType(path);","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"        boolean validImageType \u003d type.equals(\"image/png\") || type.equals(\"image/jpeg\");","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"weekiat-douze"},"content":"        if (!validImageType) {","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"weekiat-douze"},"content":"        if (ImageIO.read(new File(filePath)) \u003d\u003d null) {","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"weekiat-douze"},"content":"            return false;","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"weekiat-douze"},"content":"        return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"weekiat-douze"},"content":"     * Ensures directory for Image exists.","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"weekiat-douze"},"content":"    private static void checkDirectory() throws SecurityException {","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"weekiat-douze"},"content":"        String directoryPath \u003d IMAGE_PATH;","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"weekiat-douze"},"content":"        File profilePictureDirectory \u003d new File(directoryPath);","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"weekiat-douze"},"content":"        if (!profilePictureDirectory.exists()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"weekiat-douze"},"content":"            profilePictureDirectory.mkdir();","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"weekiat-douze"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"weekiat-douze":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    public static final Image DEFAULT_IMAGE \u003d new Image();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Status(\"Y1 econs\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"                getTagSet(\"friends\"), DEFAULT_IMAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"Bernice Yu\"), new Status(\"Y3 business\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"                new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"                getTagSet(\"colleagues\", \"friends\"), DEFAULT_IMAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Status(\"Y2 chemical engineering\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"                new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"                getTagSet(\"neighbours\"), DEFAULT_IMAGE),","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"David Li\"), new Status(\"Y4 data science\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"                new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"                getTagSet(\"family\"), DEFAULT_IMAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Status(\"Y1 mathematics\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"                new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"                getTagSet(\"classmates\"), DEFAULT_IMAGE),","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Status(\"Y2 Psychology\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"                getTagSet(\"colleagues\"), DEFAULT_IMAGE)","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"weekiat-douze":8,"SHni99":15,"-":43}},{"path":"src/main/java/seedu/address/storage/ChsContacts.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":" * Contains contacts from CHS to be imported","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"public class ChsContacts {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    private static final Person chngShuSin \u003d new Person(new Name(\"Chng Shu Sin\"), new Status(\"Prof\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"            new Phone(\"99999999\"), new Email(\"abcd@nus.u.edu\"), new Address(\"1234 Street\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"            new HashSet\u003cTag\u003e(List.of(new Tag(\"CHS\"), new Tag(\"Professor\"))), new Image(\"chngshusin.jpeg\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    private static final Person chewFookTim \u003d new Person(new Name(\"Chew Fook Tim\"), new Status(\"Prof\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"            new Phone(\"99999999\"), new Email(\"abcd@nus.u.edu\"), new Address(\"1234 Street\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"            new HashSet\u003cTag\u003e(List.of(new Tag(\"CHS\"), new Tag(\"Professor\"))), new Image(\"chewfooktim.jpeg\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"    public static final ArrayList\u003cPerson\u003e CHS_CONTACTS \u003d new ArrayList\u003cPerson\u003e(","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"            Arrays.asList(chngShuSin, chewFookTim));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"SHni99":5,"pkpaing":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"    private final String status;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"    private final String image;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"image\") String image) {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        if (image !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"            this.image \u003d image;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"            this.image \u003d Image.DEFAULT_IMAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"SHni99"},"content":"        status \u003d source.getStatus().fullStatusDetail;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"        image \u003d source.getImage().imageName;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"SHni99"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"SHni99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"SHni99"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"SHni99"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"weekiat-douze"},"content":"        final Image modelImage \u003d new Image(image);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"        return new Person(modelName, modelStatus, modelPhone, modelEmail, modelAddress, modelTags, modelImage);","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weekiat-douze":8,"SHni99":17,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.CommitmentTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"        String[] modParts \u003d tagName.split(\"XXXXX\");","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"        return (modParts[0].equals(\"Module\")) ? new ModuleTag(tagName) : (modParts[0].equals(\"Commitment\")","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"            ? new CommitmentTag(tagName)","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"            : new Tag(tagName));","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SHni99":8,"-":47}},{"path":"src/main/java/seedu/address/storage/SocContacts.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":" * Contains contacts from SOC to be imported","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"public class SocContacts {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    private static final Person benLeong \u003d new Person(new Name(\"Ben Leong\"), new Status(\"Prof\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"            new Phone(\"99999999\"), new Email(\"abcd@nus.u.edu\"), new Address(\"1234 Street\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"            new HashSet\u003cTag\u003e(List.of(new Tag(\"SOC\"), new Tag(\"Professor\"))), new Image(\"benleong.jpeg\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    private static final Person stevenHalim \u003d new Person(new Name(\"Steven Halim\"), new Status(\"Prof\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"            new Phone(\"99999999\"), new Email(\"abcd@nus.u.edu\"), new Address(\"1234 Street\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"            new HashSet\u003cTag\u003e(List.of(new Tag(\"SOC\"), new Tag(\"Professor\"))), new Image(\"stevenhalim.jpeg\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"    public static final ArrayList\u003cPerson\u003e SOC_CONTACTS \u003d new ArrayList\u003cPerson\u003e(","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"            Arrays.asList(benLeong, stevenHalim));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"SHni99":5,"pkpaing":26}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"            \"https://ay2223s2-cs2103-f11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weekiat-douze":1,"hongshenggg":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"    private PersonalPane personalPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"    private StackPane personalPanePlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"SHni99"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic, this);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"SHni99"},"content":"        personalPane \u003d new PersonalPane(logic.getFilteredPersonList().get(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"        personalPanePlaceholder.getChildren().add(personalPane.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"SHni99"},"content":"     * Updates content of the right pane upon entering a command","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"    void changeIndividualPane() {","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"SHni99"},"content":"        this.clearPane();","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"SHni99"},"content":"        personalPane \u003d new PersonalPane(logic.getFilteredPersonList().get(logic.getPersonId()));","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"SHni99"},"content":"        personalPanePlaceholder.getChildren().add(personalPane.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"SHni99"},"content":"     * Updates content of the right pane upon entering a command","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"SHni99"},"content":"    public void changeIndividualPane(Person person, String clearCommand) {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"SHni99"},"content":"        if (person \u003d\u003d null || clearCommand.equals(\"clear\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"SHni99"},"content":"            this.clearPane();","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"SHni99"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"SHni99"},"content":"            this.clearPane();","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"SHni99"},"content":"            personalPane \u003d new PersonalPane(person);","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"SHni99"},"content":"            personalPanePlaceholder.getChildren().add(personalPane.getRoot());","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"SHni99"},"content":"    void clearPane() {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"SHni99"},"content":"        personalPanePlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SHni99":36,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.util.ImageUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"    private final Person person;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"    private final int index;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"    private ImageView imageView;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"    public PersonCard(Person person, int displayedIndex, Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"        this.index \u003d displayedIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        Image image;","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"        if (person.hasDefaultImage()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"            image \u003d new Image(person.getImagePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"                if (ImageUtil.isValidImage(person.getImagePath())) {","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"                    image \u003d new Image(\"file:\" + person.getImagePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"                } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"                    image \u003d new Image(Person.getDefaultImagePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"            } catch (IOException io) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"                image \u003d new Image(Person.getDefaultImagePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"        imageView.setImage(image);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"        id.setText(this.index + \". \");","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"            .forEach(this::createLabel);","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"SHni99"},"content":"     * @param tagLabel shows the tag name","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"SHni99"},"content":"     * @return the input string with the front indicator removed","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"SHni99"},"content":"    private String setLabel(String tagLabel) {","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"SHni99"},"content":"        String[] parts \u003d tagLabel.split(\"XXXXX\");","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"SHni99"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"SHni99"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"SHni99"},"content":"        case \"Module\":","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"SHni99"},"content":"        case \"Commitment\":","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"SHni99"},"content":"            str \u003d parts[1];","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"SHni99"},"content":"            break;","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"SHni99"},"content":"        default:","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"SHni99"},"content":"            str \u003d tagLabel;","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"SHni99"},"content":"        return str;","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"     * Creates labels based on the types to be displayed.","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"SHni99"},"content":"     * @param tag takes in a tag type to extract information from within","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"    private void createLabel(Tag tag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"SHni99"},"content":"        Label label \u003d new Label(setLabel(tag.tagName));","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"SHni99"},"content":"        String colour \u003d tag.tagColor();","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"SHni99"},"content":"        label.setStyle(\"-fx-background-color: \" + colour + \";\");","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"SHni99"},"content":"        tags.getChildren().add(label);","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"SHni99"},"content":"    private void showPersonalPane() {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"SHni99"},"content":"        logic.setPersonId(this.index);","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"SHni99"},"content":"        mainWindow.changeIndividualPane();","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weekiat-douze":10,"hongshenggg":6,"SHni99":56,"-":66}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, logic, mainWindow).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SHni99":8,"-":46}},{"path":"src/main/java/seedu/address/ui/PersonalPane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.util.ImageUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":" * An UI component that displays more detailed information of a {@code Person} when selected.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"public class PersonalPane extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"    private static final String FXML \u003d \"PersonalPane.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    private HBox personalPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"    private ImageView imageView;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"    private Label name;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"    private Label status;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"    private Label id;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"    private Label phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"    private Label address;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"    private Label email;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"    public PersonalPane(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        Image image;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"        if (person.hasDefaultImage()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"            image \u003d new Image(person.getImagePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"                if (ImageUtil.isValidImage(person.getImagePath())) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"                    image \u003d new Image(\"file:\" + person.getImagePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"                } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"                    image \u003d new Image(Person.getDefaultImagePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"            } catch (IOException io) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"                image \u003d new Image(Person.getDefaultImagePath());","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"SHni99"},"content":"        imageView.setImage(image);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"SHni99"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"        status.setText(person.getStatus().fullStatusDetail);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"        if (address.getText().length() \u003e 35) {","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"            address.setWrapText(true);","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"        if (address.isWrapText()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"SHni99"},"content":"            address.setTranslateY(10);","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"SHni99"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"            .forEach(this::createLabel);","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"SHni99"},"content":"     * Creates labels based on the types to be displayed.","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"SHni99"},"content":"     * @param tag takes in a tag type to extract information from within","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"SHni99"},"content":"    private void createLabel(Tag tag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"SHni99"},"content":"        Label label \u003d new Label(tag.tagName.contains(\"XXXXX\")","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"SHni99"},"content":"            ? tag.tagName.split(\"XXXXX\")[1]","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"SHni99"},"content":"            : tag.tagName);","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"SHni99"},"content":"        String colour \u003d tag.tagColor();","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"SHni99"},"content":"        label.setStyle(\"-fx-background-color: \" + colour + \";\");","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"SHni99"},"content":"        tags.getChildren().add(label);","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"weekiat-douze":11,"hongshenggg":6,"SHni99":81}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"    private Model model;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"    public UiManager(Logic logic, Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"            model.setMainWindow(mainWindow);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"            mainWindow.getPrimaryStage().setMinWidth(mainWindow.getPrimaryStage().getMinWidth());","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"            mainWindow.getPrimaryStage().setMinHeight(mainWindow.getPrimaryStage().getMinHeight());","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"            mainWindow.getPrimaryStage().setResizable(false);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/Style.css\");","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SHni99":10,"-":86}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"         title\u003d\"BookFace\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"                \u003cURL value\u003d\"@Style.css\"/\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"                    \u003cMenu text\u003d\"|\" disable\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"400\" prefWidth\u003d\"400\"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"                          minHeight\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"                    \u003cVBox fx:id\u003d\"personalPane\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"350\" prefWidth\u003d\"350\"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"                          minHeight\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"SHni99"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"                        \u003cStackPane fx:id\u003d\"personalPanePlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"SHni99"},"content":"                           maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"SHni99":24,"-":48}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"        \u003cHBox GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"                \u003cImageView fx:id\u003d\"imageView\" fitWidth\u003d\"100\" preserveRatio\u003d\"true\"\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"            \u003cVBox alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"                    \u003cInsets left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"                \u003cHBox id\u003d\"tagPane\" fx:id\u003d\"tagPane\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"                \u003cButton alignment\u003d\"BOTTOM_RIGHT\" fx:id\u003d\"showButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showPersonalPane\"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"                        text\u003d\"More details\" styleClass\u003d\"detailsButton\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"        \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" visible\u003d\"false\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"        \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" visible\u003d\"false\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"        \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" visible\u003d\"false\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hongshenggg":3,"SHni99":25,"-":28}},{"path":"src/main/resources/view/PersonalPane.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"\u003cHBox id\u003d\"personalPane\" fx:id\u003d\"personalPane\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"200\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"SHni99"},"content":"        \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"SHni99"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"SHni99"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"SHni99"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"            \u003cImageView fx:id\u003d\"imageView\" fitWidth\u003d\"200\" fitHeight\u003d\"160\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"            \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"SHni99"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"SHni99"},"content":"                \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" styleClass\u003d\"cell_status_label\"/\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"SHni99"},"content":"                \u003cHBox id\u003d\"tagPane\" fx:id\u003d\"tagPane\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"tag_alignment\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"SHni99"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel text\u003d\"Mobile number: \"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel text\u003d\"Address: \" minWidth\u003d\"60\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel text\u003d\"Email: \"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"                    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"SHni99"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"SHni99":49}},{"path":"src/main/resources/view/Style.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"    background-color: #979797; /* Used in the default.html file */","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"    -fx-base: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"    -fx-control-inner-background: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"SHni99"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"SHni99"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"     -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"SHni99"},"content":"     -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"SHni99"},"content":"     -fx-border-color: derive(#979797, 10%);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"SHni99"},"content":"    -fx-border-color: derive(#979797, 25%);","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"SHni99"},"content":"    -fx-border-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":186,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 50%);","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":204,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"SHni99"},"content":".detailsButton {","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"SHni99"},"content":"    -fx-padding: 5 12 5 12;","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 30%);","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"SHni99"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"SHni99"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"SHni99"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"SHni99"},"content":"    -fx-pref-size: 30;","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"SHni99"},"content":"    -fx-insets: 0 0 0 3;","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":240,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"SHni99"},"content":".detailsButton:hover {","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"SHni99"},"content":".detailsButton:pressed, .detailsButton:default:hover:pressed {","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#979797, 25%);","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#C5C5C5, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"SHni99"},"content":"    -fx-background-insets: 0 0 0 5","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: derive(#696969, 10%);","lastModifiedDate":"2023-03-09"},{"lineNumber":306,"author":{"gitId":"SHni99"},"content":"    -fx-background-insets: -1 -1 -1 4;","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"SHni99"},"content":".tag_alignment {","lastModifiedDate":"2023-03-17"},{"lineNumber":327,"author":{"gitId":"SHni99"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"SHni99"},"content":".cell_status_label {","lastModifiedDate":"2023-03-17"},{"lineNumber":331,"author":{"gitId":"SHni99"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2023-03-17"},{"lineNumber":332,"author":{"gitId":"SHni99"},"content":"    -fx-padding: 8;","lastModifiedDate":"2023-03-17"},{"lineNumber":333,"author":{"gitId":"SHni99"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-17"},{"lineNumber":334,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-17"},{"lineNumber":335,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":336,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #C5C5C5;","lastModifiedDate":"2023-03-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"SHni99"},"content":"    -fx-background-insets: 5","lastModifiedDate":"2023-03-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: transparent #979797 transparent #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"SHni99"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2023-03-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"SHni99"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":357,"author":{"gitId":"SHni99"},"content":"    -fx-prompt-text-fill: #525252","lastModifiedDate":"2023-03-09"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: transparent, #979797, transparent, #979797;","lastModifiedDate":"2023-03-09"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2023-03-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-25"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":381,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":382,"author":{"gitId":"SHni99"},"content":"#tagPane {","lastModifiedDate":"2023-03-09"},{"lineNumber":383,"author":{"gitId":"SHni99"},"content":"    -fx-background-color: #C5C5C5;","lastModifiedDate":"2023-03-09"},{"lineNumber":384,"author":{"gitId":"SHni99"},"content":"    -fx-min-height: 50;","lastModifiedDate":"2023-03-17"},{"lineNumber":385,"author":{"gitId":"SHni99"},"content":"    -fx-background-padding: 5;","lastModifiedDate":"2023-03-17"},{"lineNumber":386,"author":{"gitId":"SHni99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"SHni99":85,"-":301}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"hongshenggg"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hongshenggg":1,"-":142}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + STATUS_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"SHni99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SHni99":7,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"hongshenggg"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"hongshenggg"},"content":"        public void deleteImage(Person target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"hongshenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"hongshenggg"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"SHni99"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"SHni99"},"content":"        public int getPersonId() {","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"SHni99"},"content":"            return 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"SHni99"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"SHni99"},"content":"        public void setPersonId(int index) {","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"SHni99"},"content":"            System.out.println(\"still working\");","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"SHni99"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"SHni99"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"SHni99"},"content":"        public void findOrListContents(Predicate\u003cPerson\u003e predicate, String command) {","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"SHni99"},"content":"            System.out.println(\"still working\");","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"SHni99"},"content":"        };","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"SHni99"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"SHni99"},"content":"        public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"SHni99"},"content":"            System.out.println(\"still working\");","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"SHni99"},"content":"        };","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hongshenggg":5,"SHni99":21,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddImageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"public class AddImageCommandTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddImageCommand(null, \"test string\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"    public void constructor_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddImageCommand(Index.fromOneBased(1), null));","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        AddImageCommand addImageCommand \u003d new AddImageCommand(outOfBoundIndex, \"/stringPath\");","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        assertCommandFailure(addImageCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"    public void equals() {","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"        final String stringPath \u003d \"/stringPath\";","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        final AddImageCommand standardCommand \u003d new AddImageCommand(INDEX_FIRST_PERSON, stringPath);","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"        AddImageCommand commandWithSameValues \u003d new AddImageCommand(INDEX_FIRST_PERSON, stringPath);","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"weekiat-douze"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"weekiat-douze"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(standardCommand.equals(new AddImageCommand(INDEX_SECOND_PERSON, stringPath)));","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"weekiat-douze"},"content":"        // different string path -\u003e returns false","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(standardCommand.equals(new AddImageCommand(INDEX_FIRST_PERSON, \"/otherString\")));","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"weekiat-douze"},"content":"        // different class object -\u003e returns false","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"weekiat-douze":74}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"    public static final String VALID_STATUS_AMY \u003d \"Y4 chemical engineering\";","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"    public static final String VALID_STATUS_BOB \u003d \"Y4 computer science\";","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS; // empty string not allowed for status","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withStatus(VALID_STATUS_AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"SHni99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"SHni99"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"hongshenggg"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hongshenggg":2,"SHni99":12,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"    /*","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"     @Test public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"     Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"     EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"      EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"      String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"      Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"      expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"SHni99"},"content":"      assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"     }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"    /*","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"        //assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"SHni99"},"content":"            * new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"*/","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"SHni99":15,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"                new NameContainsKeywordPredicate(\"John\");","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"                new NameContainsKeywordPredicate(\"Adam\");","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"hongshenggg"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordPredicate}.","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"hongshenggg"},"content":"    private NameContainsKeywordPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"hongshenggg"},"content":"        return new NameContainsKeywordPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hongshenggg":10,"-":73}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.logic.commands.ImportCommand.MESSAGE_NO_FACULTY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"public class ImportCommandTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"    public void executeWrongInput_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"        ImportCommand importCommand \u003d new ImportCommand(\"abcde\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_FACULTY);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"        assertCommandFailure(importCommand, model, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"pkpaing":21}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"SHni99"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"SHni99"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"SHni99"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STATUS_DESC_AMY + STATUS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":90,"author":{"gitId":"SHni99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + STATUS_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"        // missing status prefix","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_STATUS_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"SHni99"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_STATUS_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"SHni99"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"SHni99"},"content":"        // invalid status","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_STATUS_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"SHni99"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"SHni99"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STATUS_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"SHni99"},"content":"                        + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + STATUS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"SHni99"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"SHni99":55,"-":103}},{"path":"src/test/java/seedu/address/logic/parser/AddImageCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.AddImageCommand;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"public class AddImageCommandParserTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddImageCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"    private AddImageCommandParser parser \u003d new AddImageCommandParser();","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"        // All fields present","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"        assertParseSuccess(parser, \"1 ai//stringPath\", new AddImageCommand(Index.fromZeroBased(0), \"/stringPath\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"        // White space","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"        assertParseSuccess(parser, \"1 ai/      /stringPath\",","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"                new AddImageCommand(Index.fromZeroBased(0), \"/stringPath\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"        // no index specified","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"ai//stringPath\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"        // no field specified","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"        // syntax specified but not text","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"1 ai/\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"        // no index and no field specified","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"weekiat-douze"},"content":"        // negative index","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"-5 ai//stringPath\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"weekiat-douze"},"content":"        // zero index","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"0 ai//stringPath\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"weekiat-douze"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"weekiat-douze"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"weekiat-douze"},"content":"        assertParseFailure(parser, \"1 i/ /string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"weekiat-douze"},"content":"    //    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"weekiat-douze"},"content":"    //    public void parse_invalidPath_failure() {","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"    //        // Not absolute path","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"weekiat-douze"},"content":"    //        assertParseFailure(parser, \"1 ai/not/absolute/path\");","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"weekiat-douze"},"content":"    //    }","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"weekiat-douze":61}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"        //System.out.println(command.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"        //AddCommand addi \u003d new AddCommand(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"        //System.out.println((addi.getName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"hongshenggg"},"content":"        String arguments \u003d \"n/John\";","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"                FindCommand.COMMAND_WORD + \" \" + arguments);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordPredicate(\"John\")), command);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hongshenggg":4,"SHni99":3,"-":86}},{"path":"src/test/java/seedu/address/logic/parser/DeleteImageCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"hongshenggg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"hongshenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.commands.DeleteImageCommand;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"hongshenggg"},"content":"public class DeleteImageCommandParserTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"    private DeleteImageCommandParser parser \u003d new DeleteImageCommandParser();","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"    public void parse_letterIndex_exceptionThrown() {","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        assertParseFailure(parser, \"delete-image abc\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"    public void parse_numericalIndex_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"hongshenggg"},"content":"                new DeleteImageCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"    public void parse_negativeIndex_exceptionThrown() {","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"hongshenggg"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"hongshenggg"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"hongshenggg":30}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"hongshenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.StatusContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordPredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"SHni99"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"            FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validName_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d new NameContainsKeywordPredicate(\"John\");","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(namePredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find n/John\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validPhone_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e phonePredicate \u003d new PhoneContainsKeywordPredicate(\"123\");","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(phonePredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find p/123\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validEmail_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e emailPredicate \u003d new EmailContainsKeywordPredicate(\"gmail\");","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(emailPredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find e/gmail\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validStatus_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e statusPredicate \u003d new StatusContainsKeywordPredicate(\"y4\");","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(statusPredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find s/y4\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"hongshenggg"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validAddress_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e addressPredicate \u003d new AddressContainsKeywordPredicate(\"blk\");","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(addressPredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find a/blk\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"hongshenggg"},"content":"    public void parse_validTag_success() {","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"hongshenggg"},"content":"        Predicate\u003cPerson\u003e tagPredicate \u003d new TagContainsKeywordPredicate(\"cs\");","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"hongshenggg"},"content":"        Command expectedCommand \u003d new FindCommand(tagPredicate);","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        assertParseSuccess(parser, \"find t/cs\", expectedCommand);","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"hongshenggg"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"hongshenggg"},"content":"    public void parse_emptyName_exceptionThrown() {","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"hongshenggg"},"content":"        assertParseFailure(parser, \"find n/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"hongshenggg"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"hongshenggg"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"hongshenggg":52,"SHni99":2,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"    private static final String VALID_PHONE \u003d \"1234567\";","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"SHni99":1,"-":195}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"hongshenggg"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"hongshenggg":2,"-":130}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"        assertTrue(Name.isValidName(\"David Roger Jack Jr 2nd\")); // long names","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"SHni99":1,"-":39}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hongshenggg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"hongshenggg"},"content":"public class NameContainsKeywordPredicateTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"hongshenggg"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"hongshenggg"},"content":"        String secondPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate firstPredicate \u003d new NameContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate secondPredicate \u003d new NameContainsKeywordPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate firstPredicateCopy \u003d new NameContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"hongshenggg"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate predicate \u003d new NameContainsKeywordPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"hongshenggg"},"content":"        predicate \u003d new NameContainsKeywordPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"hongshenggg"},"content":"        predicate \u003d new NameContainsKeywordPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"hongshenggg"},"content":"        predicate \u003d new NameContainsKeywordPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"hongshenggg"},"content":"        NameContainsKeywordPredicate predicate \u003d new NameContainsKeywordPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"hongshenggg"},"content":"        predicate \u003d new NameContainsKeywordPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"hongshenggg"},"content":"        predicate \u003d new NameContainsKeywordPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hongshenggg":15,"-":59}},{"path":"src/test/java/seedu/address/model/util/ImageUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weekiat-douze"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"weekiat-douze"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"weekiat-douze"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"weekiat-douze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"weekiat-douze"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"weekiat-douze"},"content":"public class ImageUtilTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"weekiat-douze"},"content":"    public void import_invalidPath_throwsCommandException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"weekiat-douze"},"content":"        String invalidPath \u003d \"invalidPath\";","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"weekiat-douze"},"content":"        assertThrows(CommandException.class, () -\u003e ImageUtil.importImage(invalidPath));","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"weekiat-douze"},"content":"    public void delete_invalidFileName_returnsFalse() {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"weekiat-douze"},"content":"        String invalidFile \u003d \"invalidFile\";","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(() -\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"weekiat-douze"},"content":"                return ImageUtil.deleteImage(invalidFile);","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"weekiat-douze"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"weekiat-douze"},"content":"                return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"weekiat-douze"},"content":"        });","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"weekiat-douze"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"weekiat-douze"},"content":"    public void valid_invalidPath_throwsCommandException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"        String invalidPath \u003d \"invalidPath\";","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"weekiat-douze"},"content":"        assertFalse(() -\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"weekiat-douze"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"weekiat-douze"},"content":"                return ImageUtil.isValidImage(invalidPath);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"weekiat-douze"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"                return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"weekiat-douze"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"weekiat-douze"},"content":"        });","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"weekiat-douze"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"weekiat-douze":43}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"    private static final String INVALID_STATUS \u003d \" \";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"SHni99"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"weekiat-douze"},"content":"    private static final String VALID_IMAGE \u003d BENSON.getImage().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_STATUS, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"                VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"            VALID_ADDRESS, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"SHni99"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"SHni99"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_STATUS, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"SHni99"},"content":"                VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"SHni99"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"SHni99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"SHni99"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"SHni99"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"SHni99"},"content":"            VALID_ADDRESS, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"weekiat-douze"},"content":"                VALID_IMAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, null, VALID_EMAIL,","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"SHni99"},"content":"            VALID_ADDRESS, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"                VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, VALID_PHONE, null,","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"SHni99"},"content":"            VALID_ADDRESS, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"SHni99"},"content":"                VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"SHni99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"SHni99"},"content":"            null, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"SHni99"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_STATUS, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"SHni99"},"content":"                invalidTags, VALID_IMAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weekiat-douze":2,"SHni99":38,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"        descriptor.setStatus(person.getStatus());","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"SHni99"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"SHni99"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"SHni99"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"SHni99"},"content":"        return this;","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SHni99":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"SHni99"},"content":"    public static final String DEFAULT_STATUS \u003d \"Y4 chemical engineering\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SHni99"},"content":"    public static final String DEFAULT_PHONE \u003d \"11111111\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SHni99"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SHni99"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"    private Status status;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"weekiat-douze"},"content":"    private Image image;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"weekiat-douze"},"content":"        image \u003d new Image();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"SHni99"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"weekiat-douze"},"content":"        image \u003d personToCopy.getImage();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"SHni99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"SHni99"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"SHni99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"SHni99"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"SHni99"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"SHni99"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"SHni99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"SHni99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"weekiat-douze"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"weekiat-douze"},"content":"     * Sets the {@code IMAGE} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"weekiat-douze"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"weekiat-douze"},"content":"    public PersonBuilder withImage(String imageName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"weekiat-douze"},"content":"        this.image \u003d new Image(imageName);","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"weekiat-douze"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"weekiat-douze"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"weekiat-douze"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":118,"author":{"gitId":"SHni99"},"content":"        return new Person(name, status, phone, email, address, tags, image);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"weekiat-douze":11,"SHni99":18,"-":92}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"SHni99"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().fullStatusDetail + \" \");","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS)","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"            .append(status.fullStatusDetail).append(\" \"));","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"SHni99":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SHni99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"SHni99"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withStatus(\"Y2 economics\")","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"SHni99"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withStatus(\"Y1 design\")","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"SHni99"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withStatus(\"Y3 bioengineering\")","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"SHni99"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withStatus(\"Y4 social work\")","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"SHni99"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"SHni99"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withStatus(\"Y3 data science\")","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"SHni99"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withStatus(\"Y1 computer engineering\")","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"SHni99"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withStatus(\"Y2 accounting\")","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"SHni99"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withStatus(\"Y1 life science\")","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"SHni99"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withStatus(\"Y2 accounting\")","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"SHni99"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"SHni99"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withStatus(VALID_STATUS_AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"SHni99"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"SHni99"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"SHni99"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"SHni99"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"SHni99"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SHni99":25,"-":55}},{"path":"tp/.idea/misc.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" languageLevel\u003d\"JDK_11\" default\u003d\"true\" project-jdk-name\u003d\"11\" project-jdk-type\u003d\"JavaSDK\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"    \u003coutput url\u003d\"file://$PROJECT_DIR$/out\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"SHni99":6}},{"path":"tp/.idea/modules.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"  \u003ccomponent name\u003d\"ProjectModuleManager\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"    \u003cmodules\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"      \u003cmodule fileurl\u003d\"file://$PROJECT_DIR$/tp.iml\" filepath\u003d\"$PROJECT_DIR$/tp.iml\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"    \u003c/modules\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"SHni99"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"SHni99"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"SHni99":8}},{"path":"tp/.idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"SHni99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"SHni99"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"SHni99"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"SHni99"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$/..\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"SHni99"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"SHni99"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"SHni99":6}}]
