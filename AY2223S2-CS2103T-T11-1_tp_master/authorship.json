[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"\u003csection align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"  \u003ch1\u003eWell Informed Fridge Environment \u0026lt;WIFE/\u0026gt;\u003c/h1\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-1/tp/branch/master/graph/badge.svg?token\u003dIG8S2ONSIE)](https://codecov.io/gh/AY2223S2-CS2103T-T11-1/tp)","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"\u003c/section\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"## Table of Contents","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Introduction](#introduction)","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Features](#features)","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Requirements](#requirements)","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Getting Started](#getting-started)","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Useful Links](#useful-links)","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"## Introduction","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt; - a cutting-edge fridge management system that helps you keep track of your food items, prevent them from going to waste, and optimise your refrigerator’s storage and organisation. With \u0026lt;WIFE/\u0026gt;, you can easily check expiration dates, set reminders for items that need to be replenished, and get nutritional tips and recipes based on your food inventory. \u0026lt;WIFE/\u0026gt; is the perfect solution to make sure you’re always one step ahead, saving you time and money while reducing food waste. So, let \u0026lt;WIFE/\u0026gt; take care of your fridge and enjoy the freedom of knowing your food is in good hands.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"## Features","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"-   Help - Displays all available commands","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"-   List - Displays all items","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"-   Add - Adds items","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"-   Update - Updates items","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"-   Delete - Delete items","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"-   Tag - tags items","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"## Requirements","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"-   \u0026gt;\u003d Java 11","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"-   JavaFX","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"## Getting Started","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"Run the following command on your local environment:","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"```shell","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"  git clone with HTTPS          https://github.com/AY2223S2-CS2103T-T11-1/tp.git","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"  git clone with SSH            git@github.com:AY2223S2-CS2103T-T11-1/tp.git","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"  git clone with Github CLI     gh repo clone AY2223S2-CS2103T-T11-1/tp","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"If you want to use the application you can click [here](https://www.youtube.com/watch?v\u003dxvFZjo5PgG0) to download.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"## Useful links:","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"-   [User Guide](https://github.com/AY2223S2-CS2103T-T11-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Developer Guide](https://github.com/AY2223S2-CS2103T-T11-1/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"-   [About Us](https://github.com/AY2223S2-CS2103T-T11-1/tp/blob/master/docs/AboutUs.md)","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"Acknowledgement: This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"-":4,"ScorpiusSigma":52}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cStackPane minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"25.0\" prefWidth\u003d\"600.0\" promptText\u003d\"Enter command here...\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"         \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"   \u003c/TextField\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":6,"nigelteosw":5,"ScorpiusSigma":2}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":".background {","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":".label {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":".label-bright {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":".label-header {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":".text-field {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":".tab-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":".table-view {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        transparent","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        transparent","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":".split-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":".list-view {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 0px, 0, 3px, 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":".list-cell {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: transparent, -fx-background ;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-insets: 5px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"nigelteosw"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":".list-cell .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":".cell_big_label {","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 21px;","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"nigelteosw"},"content":".list-cell:filled:selected .cell_big_label {","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":".cell_small_label {","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"nigelteosw"},"content":".list-cell:filled:selected .cell_small_label {","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"nigelteosw"},"content":".cell_small_label_constants {","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: #7e7e7e;","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"nigelteosw"},"content":".list-cell:filled:selected .cell_small_label_constants {","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: #c4bebe;","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":".stack-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":".pane-with-border {","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"ScorpiusSigma"},"content":"     -fx-background-color: #D9D9D9;","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"ScorpiusSigma"},"content":"     -fx-border-color: #757d77;","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"nigelteosw"},"content":"     -fx-border-radius: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"nigelteosw"},"content":"     -fx-background-radius: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":".status-bar {","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":".result-display {","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":".result-display .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"jnjy"},"content":".status-bar .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"jnjy"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"jnjy"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"jnjy"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"jnjy"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"jnjy"},"content":".grid-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"jnjy"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"jnjy"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"jnjy"},"content":".context-menu {","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"jnjy"},"content":".context-menu .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"jnjy"},"content":".menu-bar {","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-color: white","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"jnjy"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"jnjy"},"content":".menu .left-container {","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"ScorpiusSigma"},"content":".enterButton {","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-border-color: #006994;","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"jnjy"},"content":"/*","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"jnjy"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"jnjy"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"jnjy"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"jnjy"},"content":".button {","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #006994;","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-04"},{"lineNumber":249,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"jnjy"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":256,"author":{"gitId":"jnjy"},"content":".button:hover {","lastModifiedDate":"2023-03-04"},{"lineNumber":257,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #005c80;","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":259,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"jnjy"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"jnjy"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"jnjy"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":263,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"jnjy"},"content":".button:focused {","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"nigelteosw"},"content":"    /* -fx-border-color: white, white;","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":268,"author":{"gitId":"jnjy"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-04"},{"lineNumber":269,"author":{"gitId":"jnjy"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":270,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-insets: 1 1 1 1, 0; */","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"jnjy"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"jnjy"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":277,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"jnjy"},"content":".button:default {","lastModifiedDate":"2023-03-04"},{"lineNumber":280,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-04"},{"lineNumber":282,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":283,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":284,"author":{"gitId":"jnjy"},"content":".button:default:hover {","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":287,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"jnjy"},"content":".dialog-pane {","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":291,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"jnjy"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-04"},{"lineNumber":294,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"jnjy"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-04"},{"lineNumber":298,"author":{"gitId":"jnjy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":300,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":301,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"jnjy"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":305,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":306,"author":{"gitId":"jnjy"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"jnjy"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"jnjy"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":311,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"jnjy"},"content":".scroll-bar {","lastModifiedDate":"2023-03-04"},{"lineNumber":314,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"jnjy"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#1d1d1d, 80%);","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-insets: 4;","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":321,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":322,"author":{"gitId":"jnjy"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":324,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":325,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":326,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":327,"author":{"gitId":"jnjy"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-04"},{"lineNumber":328,"author":{"gitId":"jnjy"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-04"},{"lineNumber":329,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":330,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":331,"author":{"gitId":"jnjy"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-04"},{"lineNumber":332,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 1 7 1 7;","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":334,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":335,"author":{"gitId":"jnjy"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-04"},{"lineNumber":336,"author":{"gitId":"jnjy"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":337,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":338,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":339,"author":{"gitId":"jnjy"},"content":"#cardPane {","lastModifiedDate":"2023-03-04"},{"lineNumber":340,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-04"},{"lineNumber":341,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":342,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":343,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":344,"author":{"gitId":"nigelteosw"},"content":"/* .card_border {","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"nigelteosw"},"content":"} */","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"jnjy"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-04"},{"lineNumber":352,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-04"},{"lineNumber":353,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-04"},{"lineNumber":354,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":355,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":356,"author":{"gitId":"jnjy"},"content":"#commandTextField {","lastModifiedDate":"2023-03-04"},{"lineNumber":357,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-04"},{"lineNumber":358,"author":{"gitId":"jnjy"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":359,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-family: \"Overpass\";","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-04"},{"lineNumber":361,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":363,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":364,"author":{"gitId":"ScorpiusSigma"},"content":"#filterField, #wifeListPanel, #wifeWebpage {","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"jnjy"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":366,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":367,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":368,"author":{"gitId":"jnjy"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-04"},{"lineNumber":369,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background-color: #D9D9D9, #D9D9D9, #D9D9D9, #D9D9D9;","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"jnjy"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":371,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":372,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":373,"author":{"gitId":"jnjy"},"content":"#tags {","lastModifiedDate":"2023-03-04"},{"lineNumber":374,"author":{"gitId":"nigelteosw"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-03-19"},{"lineNumber":375,"author":{"gitId":"nigelteosw"},"content":"    -fx-vgap: 10;","lastModifiedDate":"2023-03-19"},{"lineNumber":376,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":377,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":378,"author":{"gitId":"jnjy"},"content":"#tags .label {","lastModifiedDate":"2023-03-04"},{"lineNumber":379,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":380,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #ffe872;","lastModifiedDate":"2023-03-19"},{"lineNumber":381,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":382,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":383,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":384,"author":{"gitId":"jnjy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-04"},{"lineNumber":385,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":386,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":387,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":388,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":389,"author":{"gitId":"nigelteosw"},"content":"#tags .veg {","lastModifiedDate":"2023-03-19"},{"lineNumber":390,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":391,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #bdf5aa;","lastModifiedDate":"2023-03-19"},{"lineNumber":392,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":393,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":394,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":395,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-19"},{"lineNumber":396,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":397,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":398,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":399,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":400,"author":{"gitId":"nigelteosw"},"content":"#tags .meat {","lastModifiedDate":"2023-03-19"},{"lineNumber":401,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":402,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #ee9d9d;","lastModifiedDate":"2023-03-19"},{"lineNumber":403,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":404,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":405,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":406,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-19"},{"lineNumber":407,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":408,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":409,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":410,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":411,"author":{"gitId":"nigelteosw"},"content":"#tags .dairy {","lastModifiedDate":"2023-03-19"},{"lineNumber":412,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":413,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #aed6ed;","lastModifiedDate":"2023-03-19"},{"lineNumber":414,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":415,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":416,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-19"},{"lineNumber":417,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-19"},{"lineNumber":418,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":419,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":420,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":289,"nigelteosw":107,"ScorpiusSigma":24}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":".error {","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    -fx-background: #d9d9d9;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":".tag-selector {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":".tooltip-text {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":19,"ScorpiusSigma":1}},{"path":"bin/main/view/FoodListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"\u003cStackPane styleClass\u003d\"card_border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"      \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER\" minHeight\u003d\"95.0\" prefHeight\u003d\"95.0\" styleClass\u003d\"card_border_inner\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"          \u003cGridPane prefHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"              \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"                  \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"              \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"              \u003cVBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"105.0\" prefWidth\u003d\"80.0\" spacing\u003d\"3.0\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"                      \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"                      \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"                          \u003cminWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"                              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"                              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"                          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"                      \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"                      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"               \u003cHBox alignment\u003d\"CENTER_LEFT\" layoutX\u003d\"25.0\" layoutY\u003d\"88.0\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"                     \u003cLabel fx:id\u003d\"id111\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Expiry: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"                     \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"            \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"                  \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"                        \u003cLabel fx:id\u003d\"id11\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Qty: \"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"                           \u003cminWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"                              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"                           \u003c/minWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"                           \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$quantity\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"                  \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"                        \u003cLabel fx:id\u003d\"id1\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Unit: \"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"                           \u003cminWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"                              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"                           \u003c/minWidth\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"                           \u003cLabel fx:id\u003d\"unit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$unit\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"               \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"nigelteosw"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"nigelteosw"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"nigelteosw"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"nigelteosw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"nigelteosw":101,"ScorpiusSigma":7}},{"path":"bin/main/view/FoodListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"    \u003cListView fx:id\u003d\"foodListView\" VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"   \u003c/ListView\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"nigelteosw":13}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"#copyButton, #helpMessage, #helpMenu {","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"#copyButton {","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"#copyButton:hover {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"#copyButton:armed {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jnjy":14,"nigelteosw":7,"rmj1405":1}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"               \u003cVBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"                     \u003cLabel fx:id\u003d\"helpMenu\" text\u003d\"Label\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"                     \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"                      \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"                      \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"BASELINE_LEFT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":31,"ScorpiusSigma":15}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"\u003cfx:root alwaysOnTop\u003d\"true\" maxHeight\u003d\"900.0\" maxWidth\u003d\"1200.0\" minHeight\u003d\"650.0\" minWidth\u003d\"730.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"WIFE\" type\u003d\"javafx.stage.Stage\" width\u003d\"680.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\" minWidth\u003d\"680.0\" styleClass\u003d\"background\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"            \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"680.0\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"              \u003cVBox fx:id\u003d\"foodList\" minWidth\u003d\"400.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"                \u003cStackPane fx:id\u003d\"foodListPanelPlaceholder\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"CENTER_RIGHT\" minWidth\u003d\"280.0\" prefWidth\u003d\"280.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"            \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"550.0\" prefHeight\u003d\"33.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"                \u003cButton fx:id\u003d\"addFoodButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"33.0\" prefWidth\u003d\"90.0\" styleClass\u003d\"enterButton\" stylesheets\u003d\"@DarkTheme.css\" text\u003d\"Enter\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":40,"nigelteosw":21,"ScorpiusSigma":11}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":36}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_RIGHT\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":6,"ScorpiusSigma":2}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":12}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"Not a valid FXML file","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"\u003c?import seedu.wife.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":3,"ScorpiusSigma":1}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cfx:root type\u003d\"seedu.wife.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":5,"ScorpiusSigma":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"mainClassName \u003d \u0027seedu.wife.Main\u0027","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"    archiveFileName \u003d \u0027wife.jar\u0027","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"run {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jnjy":4,"rmj1405":4,"Bisceto":3,"-":72,"ScorpiusSigma":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"aiming to transform fridge inventory management. \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"You can reach us at the email `ng.jinyuan@u.nus.edu`","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"### Ng Jin Yuan","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cimg src\u003d\"images/jnjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"[[github](http://github.com/jnjy)]","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"[[portfolio](team/jnjy.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"-   Role: Team lead, Git Expert","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"-   Responsibilities: Responsible for overall project coordination and assisting team with issues relating to Git.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"### Ritika Joshi","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cimg src\u003d\"images/rmj1405.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"[[github](https://github.com/rmj1405)]","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"[[portfolio](team/rmj1405.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"-   Role: Scheduling and tracking, Deliverables and deadlines","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"-   Responsibilities: Responsible for ensuring that requirements are being met. In charge of defining, assigning and tracking project tickets.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"### Justin Leng","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cimg src\u003d\"images/scorpiussigma.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"[[github](http://github.com/scorpiussigma)]","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"[[portfolio](team/scorpiussigma.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"-   Role: Integration","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"-   Responsibilities: Responsible for versioning of the code, maintaining the code repository, integrate various parts of the software to create a whole.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"### Nigel Teo","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cimg src\u003d\"images/nigelteosw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"[[github](http://github.com/nigelteosw)]","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"[[portfolio](team/nigelteosw.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"-   Role: UI/UX experts","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"-   Responsibilities: Responsible for the look of the product and user experience.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"### Wesley Teo","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"\u003cimg src\u003d\"images/bisceto.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"[[github](http://github.com/bisceto)]","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"[[portfolio](team/bisceto.md)]","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"-   Role: Documentation","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"-   Responsibilities: Responsible for the quality of project documentation.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jnjy":6,"nigelteosw":2,"Bisceto":1,"-":27,"ScorpiusSigma":24}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"## Introduction","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"WIFE is a food inventory management system that aims to aid busy users in managing food items in their fridge. With its","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"inventory management system, users can easily edit their fridge\u0027s inventory and view it in a sleek and easy-to-read","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"list. Users can also tag their food items according to their preferences.","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"This developer guide aims to provide detailed documentation for WIFE\u0027s design and implementation. This includes its","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"architecture, design choices as well outlines for all features of the software. This project is released under the MIT","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"license, making it open source and available for anyone to use and modify.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"## Table of Contents","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"- [Design](#design)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"  - [Food-related Features](#food-related-features)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    - [General Implementation Details](#general-implementation-details)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"    - [General Consideration Design](#general-consideration-design)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    - [Add a `Food`](#add-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    - [Edit a `Food`](#edit-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"    - [Increase/Decrease quantity of a `Food`](#increasedecrease-quantity-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    - [View details of a `Food`.](#view-details-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"  - [Tag-related Features](#tag-related-features)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"    - [Overview](#overview)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    - [Design considerations:](#design-considerations)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    - [Create a new tag](#create-a-new-tag)","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    - [Tag a `Food`](#tag-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"    - [Untag a `Food`](#untag-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    - [List `Food` by tag(s).](#list-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    - [Delete `Food` by tag(s).](#delete-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    - [Delete tag(s)](#delete-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"  - [Dynamic Help](#dynamic-help)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    - [Feature Details:](#feature-details)","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"- [Appendix: Future enhancements](#appendix-planned-enhancements)","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC01: Add a `Food`](#use-case-uc01-add-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC02: Lists all `Food`](#use-case-uc02-lists-all-foods)","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC03: Edit a `Food`](#use-case-uc03-edit-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC04: Increase the quantity of a `Food`](#use-case-uc04-increase-the-quantity-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC05: Decrease the quantity of a `Food`](#use-case-uc05-decrease-the-quantity-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC06: Delete a `Food`](#use-case-uc06-delete-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC07: Create a new tag](#use-case-uc07-create-a-new-tag)","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC08: Tag a `Food`](#use-case-uc08-tag-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC09: List `Food` by tags](#use-case-uc09-list-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC10: Delete `Food` by tags](#use-case-uc10-delete-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC11: Delete tags](#use-case-uc11-delete-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"  - [Use case UC12: View help](#use-case-uc12-view-help)","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"  - [Initial Launch](#initial-launch)","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"  - [Tests for Food-related features](#tests-for-food-related-features)","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"    - [Add a `Food`](#test-to-add-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"    - [List all `Food`](#test-to-list-all-foods)","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"    - [Edit a `Food`](#test-to-edit-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"    - [Find a `Food`](#test-to-find-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"    - [Increase quantity of a`Food`](#test-to-increase-quantity-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"    - [Decrease quantity of a `Food`](#test-to-decrease-quantity-of-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"    - [Delete a `Food`](#test-to-delete-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"  - [Sort `Food` by expiry date](#test-to-sort-foods-by-expiry-date)","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"  - [Tag-related features](#tests-for-tag-related-features)","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"    - [Create a new tag](#test-to-create-a-new-tag)","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"    - [Tag a `Food`](#test-to-tag-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"    - [Untag a `Food`](#test-to-untag-a-food)","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"    - [List all tags](#test-to-list-all-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"    - [List `Food` by tag(s)](#test-to-list-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"    - [Delete `Food` by tag(s)](#test-to-delete-foods-by-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"    - [Delete tag(s)](#test-to-delete-tags)","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"  - [General Features](#tests-for-general-features)","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"    - [Help](#test-for-help)","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"    - [Clear](#test-to-clear-foods)","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"Bisceto"},"content":"    - [Exit](#test-to-exit)","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"Bisceto"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"Bisceto"},"content":"## Acknowledgements","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"Bisceto"},"content":"WIFE is a brownfield software project developed at the School of Computing at National University of Singapore.","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Bisceto"},"content":"It was adapted from a previous project called AddressBook Level-3, and it was developed as part of the CS2103T Software","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Bisceto"},"content":"Engineering Module.","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Bisceto"},"content":"Java dependencies:","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"ScorpiusSigma"},"content":"-   [Jackson](https://github.com/FasterXML/jackson) for JSON-related operations","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"ScorpiusSigma"},"content":"-   [JavaFX](https://openjfx.io/) for GUI","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"ScorpiusSigma"},"content":"-   [JUnit 5](https://github.com/junit-team/junit5) for testing","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"Documentation dependencies:","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":110,"author":{"gitId":"Bisceto"},"content":"-   [Jekyll](https://jekyllrb.com/) for conversion of .md files to .html files for rendering of website","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"Bisceto"},"content":"-   [PlantUML](https://plantuml.com/) for UML diagrams","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"ScorpiusSigma"},"content":"---","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"Bisceto"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Bisceto"},"content":"Below is a high-level view of how WIFE is structured, including its key components.","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"ScorpiusSigma"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"ScorpiusSigma"},"content":"-   At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"ScorpiusSigma"},"content":"-   At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ScorpiusSigma"},"content":"-   [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"ScorpiusSigma"},"content":"-   [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ScorpiusSigma"},"content":"-   [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ScorpiusSigma"},"content":"-   [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"ScorpiusSigma"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"Bisceto"},"content":"-   Defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"Bisceto"},"content":"-   Implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point)","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"Bisceto"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"ScorpiusSigma"},"content":"-   executes user commands using the `Logic` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"ScorpiusSigma"},"content":"-   listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"ScorpiusSigma"},"content":"-   keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"ScorpiusSigma"},"content":"-   depends on some classes in the `Model` component, as it displays `Food` object residing in the `Model`.","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"jnjy"},"content":"![Structure of the UI Component](images/LogicClassDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"Bisceto"},"content":"* When `Logic` is called upon to execute a command, it uses the `WifeParser` class to parse the user command.","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"Bisceto"},"content":"* This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"Bisceto"},"content":"* The command can communicate with the `Model` when it is executed (e.g. to add a `Food`).","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"Bisceto"},"content":"* The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"ScorpiusSigma"},"content":"-   When called upon to parse a user command, the `WifeParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `WifeParser` returns back as a `Command` object.","lastModifiedDate":"2023-04-07"},{"lineNumber":212,"author":{"gitId":"ScorpiusSigma"},"content":"-   All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"ScorpiusSigma"},"content":"-   stores WIFE data i.e., all `Food` and `Tag` objects (which are contained in a `UniqueFoodList` and `UniqueTagList` objects).","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"ScorpiusSigma"},"content":"-   stores the currently \u0027selected\u0027 `Food` and `Tag` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFood\u003e` and `ObservableList\u003cTag\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"ScorpiusSigma"},"content":"-   stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"ScorpiusSigma"},"content":"-   does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `WIFE`, which `Food` references. This allows `Wife` to only require one `Tag` object per unique tag, instead of each `Food` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"ScorpiusSigma"},"content":"-   can save both WIFE data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"ScorpiusSigma"},"content":"-   inherits from both `WifeStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"ScorpiusSigma"},"content":"-   depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Bisceto"},"content":"Classes used by multiple components are in the `seedu.wife.commons` package.","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"ScorpiusSigma"},"content":"---","lastModifiedDate":"2023-04-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Bisceto"},"content":"### Food-related Features","lastModifiedDate":"2023-04-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":257,"author":{"gitId":"jnjy"},"content":"#### General Implementation Details","lastModifiedDate":"2023-04-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":259,"author":{"gitId":"jnjy"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":261,"author":{"gitId":"jnjy"},"content":"Wife\u0027s `Food` object is composed of classes that represent the various attributes available in each `Food`. To ensure","lastModifiedDate":"2023-04-05"},{"lineNumber":262,"author":{"gitId":"jnjy"},"content":"efficient storage and organization, all items are stored in a UniqueFoodList, while their corresponding `Tag` are stored","lastModifiedDate":"2023-04-05"},{"lineNumber":263,"author":{"gitId":"jnjy"},"content":"in a separate UniqueTagList. `UniqueTagList` enforces a maximum limit on the number of tags that can be added to","lastModifiedDate":"2023-04-05"},{"lineNumber":264,"author":{"gitId":"jnjy"},"content":"Wife. By using these lists, Wife can easily manage and access its inventory, ensuring that it remains optimized","lastModifiedDate":"2023-04-05"},{"lineNumber":265,"author":{"gitId":"jnjy"},"content":"and easy to use.","lastModifiedDate":"2023-04-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"jnjy"},"content":"The related attributes of a `Food` are:","lastModifiedDate":"2023-04-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"jnjy"},"content":"- `Name`: Name of the Food","lastModifiedDate":"2023-04-05"},{"lineNumber":270,"author":{"gitId":"jnjy"},"content":"- `Unit`: Unit of measurement of the Food","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"jnjy"},"content":"- `Quantity`: Quantity of the Food","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"jnjy"},"content":"- `ExpiryDate`: Expiry Date of the Food","lastModifiedDate":"2023-04-05"},{"lineNumber":273,"author":{"gitId":"Bisceto"},"content":"- `Tags` : Tags attached to a Food","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"jnjy"},"content":"#### General Consideration Design","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":277,"author":{"gitId":"jnjy"},"content":"The design of `Food` class follows closely to the original `Person` class in AB3, with some modifications made to fit","lastModifiedDate":"2023-03-26"},{"lineNumber":278,"author":{"gitId":"jnjy"},"content":"the usage of WIFE.","lastModifiedDate":"2023-03-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":280,"author":{"gitId":"jnjy"},"content":"-   `Person` class was renamed to `Food` with its attribute modified to the attributes mentioned above.","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"jnjy"},"content":"-   Addition of individual tags storage for each item to store their associated `Tag`.","lastModifiedDate":"2023-03-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":283,"author":{"gitId":"Bisceto"},"content":"#### Add a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"jnjy"},"content":"The `add` command adds a new `Food` in WIFE.","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":289,"author":{"gitId":"jnjy"},"content":"**Implementation**","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":291,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input to a new `AddCommand` object. `AddCommandParser` is used","lastModifiedDate":"2023-04-09"},{"lineNumber":292,"author":{"gitId":"jnjy"},"content":"to parse and validate the user input for each attributes of `Food`. After which an `AddCommand` object is created with ","lastModifiedDate":"2023-04-09"},{"lineNumber":293,"author":{"gitId":"jnjy"},"content":"the new `Food` object with validated attributes.","lastModifiedDate":"2023-04-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":295,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `AddCommand#execute()` to facilitate the insertion of `Food` into ","lastModifiedDate":"2023-04-09"},{"lineNumber":296,"author":{"gitId":"jnjy"},"content":"`UniqueFoodList`.","lastModifiedDate":"2023-04-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":298,"author":{"gitId":"jnjy"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"jnjy"},"content":"1. The user specifies a set of attributes for the new `Food` when adding a new `Food`.","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"jnjy"},"content":"2. If any of the attributes is empty, an error response is returned and users will be prompted to key in the command","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"jnjy"},"content":"   with all necessary attributes being inserted.","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"jnjy"},"content":"3. If any of the inserted attributes is invalid, an error response is returned and users will be prompted to key in the","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"jnjy"},"content":"   command with valid attributes.","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"jnjy"},"content":"4. If the `Food` inserted by the user has the same name and expiry date as another `Food` in the `Model`, an error is","lastModifiedDate":"2023-03-26"},{"lineNumber":306,"author":{"gitId":"jnjy"},"content":"   returned to inform the user that there is a duplicated copy of `Food` in the `UniqueFoodList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":307,"author":{"gitId":"jnjy"},"content":"5. Completion of step 4 without any exceptions will result in successful addition of a new `Food` in WIFE and stored in","lastModifiedDate":"2023-03-26"},{"lineNumber":308,"author":{"gitId":"jnjy"},"content":"   `UniqueFoodList`","lastModifiedDate":"2023-03-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"jnjy"},"content":"The following sequence diagram shows how the `add` command.","lastModifiedDate":"2023-03-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":312,"author":{"gitId":"nigelteosw"},"content":"![AddCommandSequenceDiagram](images/AddCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"Bisceto"},"content":"#### Edit a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":316,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":318,"author":{"gitId":"jnjy"},"content":"The `edit` command edits the attribute of selected `Food` in WIFE. The selected `Food` is specified","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"jnjy"},"content":"by retrieving from the one-indexed food list.","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"ScorpiusSigma"},"content":"**Implementation**","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input to a new `EditCommand` object. `EditCommandParser` is ","lastModifiedDate":"2023-04-09"},{"lineNumber":324,"author":{"gitId":"jnjy"},"content":"used to parse and check whether the user input for the new attribute of `Food` is valid. After which an `EditCommand` ","lastModifiedDate":"2023-04-09"},{"lineNumber":325,"author":{"gitId":"jnjy"},"content":"object is created with new `Food` with updated attributes. ","lastModifiedDate":"2023-04-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":327,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `EditCommand#execute()` to facilitate the updating of `Food` in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":328,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"ScorpiusSigma"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"jnjy"},"content":"1. The user specifies the food index that represents the `Food` to be edited.","lastModifiedDate":"2023-03-26"},{"lineNumber":332,"author":{"gitId":"jnjy"},"content":"2. If the index provided is a negative or zero index, an error response is returned and users will be","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"jnjy"},"content":"   prompted to enter a valid index.","lastModifiedDate":"2023-03-26"},{"lineNumber":334,"author":{"gitId":"jnjy"},"content":"3. The user specifies the new attribute(s) for the `Food` when editing the `Food`. There must be at least one attribute","lastModifiedDate":"2023-03-26"},{"lineNumber":335,"author":{"gitId":"jnjy"},"content":"   provided when editing `Food`.","lastModifiedDate":"2023-03-26"},{"lineNumber":336,"author":{"gitId":"jnjy"},"content":"4. If any of the attributes is empty, an error response is returned and users will be prompted to key in the command","lastModifiedDate":"2023-03-26"},{"lineNumber":337,"author":{"gitId":"jnjy"},"content":"   with all necessary attributes being inserted.","lastModifiedDate":"2023-03-26"},{"lineNumber":338,"author":{"gitId":"jnjy"},"content":"5. If any of the inserted attributes is invalid, an error response is returned and users will be prompted to key in the","lastModifiedDate":"2023-03-26"},{"lineNumber":339,"author":{"gitId":"jnjy"},"content":"   command with valid attributes.","lastModifiedDate":"2023-03-26"},{"lineNumber":340,"author":{"gitId":"jnjy"},"content":"6. If the `Food` inserted by the user has the same name and expiry date as another `Food` in the `Model`, an error is","lastModifiedDate":"2023-03-26"},{"lineNumber":341,"author":{"gitId":"jnjy"},"content":"   returned to inform the user that there is a duplicated copy of `Food` in the `UniqueFoodList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":342,"author":{"gitId":"jnjy"},"content":"7. Completion of step 6 without any exceptions will result in successful addition of a new `Food` in WIFE and stored in","lastModifiedDate":"2023-03-26"},{"lineNumber":343,"author":{"gitId":"jnjy"},"content":"   `UniqueFoodList`","lastModifiedDate":"2023-03-26"},{"lineNumber":344,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"nigelteosw"},"content":"The following sequence diagram shows how the `edit` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":346,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"nigelteosw"},"content":"![EditCommandSequenceDiagram](images/EditCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":348,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"Bisceto"},"content":"#### Increase/Decrease quantity of a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":350,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-03-26"},{"lineNumber":352,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"Bisceto"},"content":"The increase/decrease quantity feature is meant to be a shorthand for users to change the quantity of a particular `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":354,"author":{"gitId":"Bisceto"},"content":"Traditionally, to change the quantity of an item, the user would use the edit command to edit the quantity of a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":355,"author":{"gitId":"Bisceto"},"content":"The user can now specify `inc` or `dec` to increase or decrease the quantity of the indexed `Food` respectively.","lastModifiedDate":"2023-04-09"},{"lineNumber":356,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"jnjy"},"content":"**Design considerations**","lastModifiedDate":"2023-03-26"},{"lineNumber":358,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":359,"author":{"gitId":"Bisceto"},"content":"-   **Alternative 1:** The command parameter will be the new quantity of the `Food` to edit","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":361,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":362,"author":{"gitId":"Bisceto"},"content":"        -   Easily implemented. The command parameter will be set as the new quantity of the `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":363,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":364,"author":{"gitId":"ScorpiusSigma"},"content":"        -   May not be intuitive for the user, as the command is to increase/decrease the quantity.","lastModifiedDate":"2023-04-07"},{"lineNumber":365,"author":{"gitId":"Bisceto"},"content":"        -   Can be unnecessarily complicated for the user, i.e. entering a higher quantity than the current quantity for","lastModifiedDate":"2023-04-09"},{"lineNumber":366,"author":{"gitId":"Bisceto"},"content":"            `inc` and vice versa.","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Does not significantly value-add to the product as compared to just using the edit command.","lastModifiedDate":"2023-04-07"},{"lineNumber":368,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Alternative 2 (Current implementation):** The command parameter will be the quantity to increase/decrease the","lastModifiedDate":"2023-04-07"},{"lineNumber":370,"author":{"gitId":"Bisceto"},"content":"    quantity of the `Food` by.","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":372,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Intuitive for the user to key in the quantity they want to increase/decrease by.","lastModifiedDate":"2023-04-07"},{"lineNumber":373,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":374,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Parameter to increase/decrease quantity must be checked that it is a positive integer.","lastModifiedDate":"2023-04-07"},{"lineNumber":375,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Users will have to use separate commands to increase and decrease quantity.","lastModifiedDate":"2023-04-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"Bisceto"},"content":"Another aspect that was considered when implementing this feature was having a default quantity to increase and decrease","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"Bisceto"},"content":"if no quantity was specified. We realised it was intuitive for users to make the default increment or decrement set to","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"Bisceto"},"content":"1, easing convenience for the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":381,"author":{"gitId":"Bisceto"},"content":"**Implementation**","lastModifiedDate":"2023-03-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":383,"author":{"gitId":"Bisceto"},"content":"\u003cdiv\u003e Note: The implementation for `inc` and `dec` are the same, except the variable names and logic used to calculate ","lastModifiedDate":"2023-03-23"},{"lineNumber":384,"author":{"gitId":"Bisceto"},"content":"new quantity (Addition/Subtraction) The described implementation is for the `inc` command. \u003c/div\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":386,"author":{"gitId":"Bisceto"},"content":"![IncreaseQuantitySequenceDiagram](images/IncreaseQuantitySequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":388,"author":{"gitId":"Bisceto"},"content":"The first stage of the implementation is parsing the user input to `IncreaseCommand`. `IncreaseCommandParser` is used","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"Bisceto"},"content":"to parse and check whether the user input  is valid. After which a `IncreaseCommand` object is created along with a","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"Bisceto"},"content":"`IncreaseFoodDescriptor` instance to increase the quantity of the current `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":392,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `IncreaseCommand#execute()`.","lastModifiedDate":"2023-04-09"},{"lineNumber":393,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":394,"author":{"gitId":"Bisceto"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-23"},{"lineNumber":395,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":396,"author":{"gitId":"Bisceto"},"content":"1. The user specifies an index of the `Food` to be edited.","lastModifiedDate":"2023-04-09"},{"lineNumber":397,"author":{"gitId":"Bisceto"},"content":"2. If the index is out of bounds from the Food List, an error response is returned and users will be prompted to key in","lastModifiedDate":"2023-04-09"},{"lineNumber":398,"author":{"gitId":"Bisceto"},"content":"   the command with the valid index.","lastModifiedDate":"2023-03-23"},{"lineNumber":399,"author":{"gitId":"Bisceto"},"content":"3. If no specific quantity is specified, the quantity of the indexed `Food` will be increased by one.","lastModifiedDate":"2023-04-09"},{"lineNumber":400,"author":{"gitId":"Bisceto"},"content":"4. If a specific quantity is specified, the quantity of the indexed `Food` will be increased by that value.","lastModifiedDate":"2023-04-09"},{"lineNumber":401,"author":{"gitId":"Bisceto"},"content":"5. If the specific quantity is lesser than or equal to 0, an error response is returned and users will be prompted to","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"Bisceto"},"content":"   key in the command with a valid quantity.","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"Bisceto"},"content":"The following activity diagram summarizes what happens when a user executes a new `inc` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":405,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"Bisceto"},"content":"![IncreaseQuantityActivityDiagram](images/IncreaseQuantityActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":407,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"Bisceto"},"content":"#### View details of a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":410,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":411,"author":{"gitId":"Bisceto"},"content":"**Overview**","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":413,"author":{"gitId":"Bisceto"},"content":"The view feature is meant to be a shorthand for users to view the details of a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":414,"author":{"gitId":"Bisceto"},"content":"Traditionally, to view the details of a `Food`, the user would use the list command to view its details.","lastModifiedDate":"2023-04-09"},{"lineNumber":415,"author":{"gitId":"Bisceto"},"content":"The user can now specify `view` to view more details of the indexed `Food` such as its full name.","lastModifiedDate":"2023-04-09"},{"lineNumber":416,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":417,"author":{"gitId":"Bisceto"},"content":"The following UML diagram shows `view` and its associated class.","lastModifiedDate":"2023-04-08"},{"lineNumber":418,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":419,"author":{"gitId":"nigelteosw"},"content":"![ViewCommandSequenceDiagram](images/ViewCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":420,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":421,"author":{"gitId":"nigelteosw"},"content":"**Implementation**","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":423,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is checking that the command is `view` and that the index is valid. ","lastModifiedDate":"2023-04-09"},{"lineNumber":424,"author":{"gitId":"jnjy"},"content":"`ViewCommandParser` is used to parse and check whether the user input is valid. After which a `ViewCommand` object is ","lastModifiedDate":"2023-04-09"},{"lineNumber":425,"author":{"gitId":"jnjy"},"content":"created which will be used to switch the view from the list view to the details view.","lastModifiedDate":"2023-04-09"},{"lineNumber":426,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"nigelteosw"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"Bisceto"},"content":"1. The user specifies an index of the `Food` to be viewed.","lastModifiedDate":"2023-04-09"},{"lineNumber":430,"author":{"gitId":"Bisceto"},"content":"2. If the index is out of bounds from the Food List, an error response is returned and users will be prompted to key in","lastModifiedDate":"2023-04-09"},{"lineNumber":431,"author":{"gitId":"nigelteosw"},"content":"   the command with the valid index.","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"nigelteosw"},"content":"3. If no specific quantity is specified, an error response is returned and users will be prompted to key in","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"nigelteosw"},"content":"   the command with the valid index.","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"nigelteosw"},"content":"4. If a specific quantity is specified, the item will be displayed in the view.","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"nigelteosw"},"content":"5. If the specific quantity is lesser than or equal to 0, an error response is returned and users will be prompted to","lastModifiedDate":"2023-03-23"},{"lineNumber":436,"author":{"gitId":"nigelteosw"},"content":"   key in the command with a valid index.","lastModifiedDate":"2023-03-23"},{"lineNumber":437,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":438,"author":{"gitId":"nigelteosw"},"content":"The following activity diagram shows the usage of the `view` command.","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"Bisceto"},"content":"### Tag-related Features","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":443,"author":{"gitId":"jnjy"},"content":"#### Overview","lastModifiedDate":"2023-03-26"},{"lineNumber":444,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":445,"author":{"gitId":"jnjy"},"content":"The tagging functionality is facilitated by the `UniqueTagList` stored in `WIFE`. Creating or deleting tags will result ","lastModifiedDate":"2023-04-09"},{"lineNumber":446,"author":{"gitId":"jnjy"},"content":"in changes being made to the tags that exist within the `UniqueTagList`, which is home to all current `Tag` objects. ","lastModifiedDate":"2023-04-09"},{"lineNumber":447,"author":{"gitId":"Bisceto"},"content":"Furthermore, each `Food` within WIFE has its own assortment of associated `Tag` objects, which are stored in an ","lastModifiedDate":"2023-04-09"},{"lineNumber":448,"author":{"gitId":"jnjy"},"content":"internal `Set\u003cTag\u003e`.","lastModifiedDate":"2023-04-09"},{"lineNumber":449,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":450,"author":{"gitId":"jnjy"},"content":"When a `Tag` is tagged or untagged from a `Food`, the corresponding `Tag` object is added to or removed from the ","lastModifiedDate":"2023-04-09"},{"lineNumber":451,"author":{"gitId":"jnjy"},"content":"`Set\u003cTag\u003e` that is stored within the `Food`. This approach allows for effective tagging and organization of items across ","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"jnjy"},"content":"multiple lists.","lastModifiedDate":"2023-04-09"},{"lineNumber":453,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":454,"author":{"gitId":"jnjy"},"content":"The following UML diagram shows `Tag` and its associated class.","lastModifiedDate":"2023-03-26"},{"lineNumber":455,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":456,"author":{"gitId":"jnjy"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":458,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-26"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":460,"author":{"gitId":"Bisceto"},"content":"**Aspect: How to store the tags for WIFE and each `Food`.**","lastModifiedDate":"2023-04-09"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":462,"author":{"gitId":"jnjy"},"content":"* **Alternative 1 (current choice):** Store `Tag` in `UniqueTagList` and each `Food` stores its own set of associated","lastModifiedDate":"2023-03-26"},{"lineNumber":463,"author":{"gitId":"jnjy"},"content":"  `Tag` objects.","lastModifiedDate":"2023-03-26"},{"lineNumber":464,"author":{"gitId":"jnjy"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":465,"author":{"gitId":"jnjy"},"content":"        * Easy to implement. Tagging a `Food` simply just adds a `Tag` to the tags set associated to `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":466,"author":{"gitId":"jnjy"},"content":"        * Users are able to create and reuse the same `Tag` that may be extensible for editing to suit their own use","lastModifiedDate":"2023-03-26"},{"lineNumber":467,"author":{"gitId":"jnjy"},"content":"          case.","lastModifiedDate":"2023-04-09"},{"lineNumber":468,"author":{"gitId":"jnjy"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":469,"author":{"gitId":"jnjy"},"content":"        * May have performance issues in terms of memory usage as additional storage is used.","lastModifiedDate":"2023-03-26"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":471,"author":{"gitId":"Bisceto"},"content":"* **Alternative 2:** Instantiates `Tag` with a specified name and stores all `Food` classified by the tag as a parameter","lastModifiedDate":"2023-04-09"},{"lineNumber":472,"author":{"gitId":"Bisceto"},"content":"  of the associated Food List in the instantiated `Tag` class.","lastModifiedDate":"2023-04-09"},{"lineNumber":473,"author":{"gitId":"jnjy"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":474,"author":{"gitId":"jnjy"},"content":"        * Low space requirement. There is no need to store the set of associated `Tag`, `Set\u003cTag\u003e` in `Food`. The association","lastModifiedDate":"2023-04-09"},{"lineNumber":475,"author":{"gitId":"jnjy"},"content":"          of `Food` to `Tag` is represented by `List\u003cFood\u003e` in `Tag` object.","lastModifiedDate":"2023-03-26"},{"lineNumber":476,"author":{"gitId":"jnjy"},"content":"        * Easily extensible. Creating a new `Tag` can be done by simply instantiating a new `Tag` object.","lastModifiedDate":"2023-03-26"},{"lineNumber":477,"author":{"gitId":"jnjy"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":478,"author":{"gitId":"jnjy"},"content":"        * May be more complicated in terms of implementation as compared to alternative 1.","lastModifiedDate":"2023-03-26"},{"lineNumber":479,"author":{"gitId":"jnjy"},"content":"        * Approach is not as intuitive as compared to alternative 1 (simpler to add each `Tag` to the `Food`)","lastModifiedDate":"2023-03-26"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":481,"author":{"gitId":"Bisceto"},"content":"#### Create a new tag","lastModifiedDate":"2023-04-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":483,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-05"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":485,"author":{"gitId":"jnjy"},"content":"User can create a new pre-defined `Tag` in WIFE with the `createtag` command. The `createtag` command creates a new tag","lastModifiedDate":"2023-03-26"},{"lineNumber":486,"author":{"gitId":"Bisceto"},"content":"in WIFE which can be used to classify `Food` in the Food List. Once the tag is","lastModifiedDate":"2023-04-09"},{"lineNumber":487,"author":{"gitId":"Bisceto"},"content":"created using this command, the tag can be applied to `Food` using the `tag` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":489,"author":{"gitId":"jnjy"},"content":"**Implementation**","lastModifiedDate":"2023-03-26"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":491,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input (tag name) to `CreateTagCommand`. `CreateTagCommandParser` ","lastModifiedDate":"2023-04-09"},{"lineNumber":492,"author":{"gitId":"jnjy"},"content":"is used to parse and check whether the user input command is valid. After which a `CreateTagCommand` object is created ","lastModifiedDate":"2023-04-09"},{"lineNumber":493,"author":{"gitId":"jnjy"},"content":"with the specified tag name.","lastModifiedDate":"2023-04-09"},{"lineNumber":494,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":495,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `CreateTagCommand#execute()`. This then facilitates the creation of new `Tag`","lastModifiedDate":"2023-04-09"},{"lineNumber":496,"author":{"gitId":"jnjy"},"content":"and add the new `Tag` into `UniqueTagList`.","lastModifiedDate":"2023-04-09"},{"lineNumber":497,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":498,"author":{"gitId":"jnjy"},"content":"The following sequence diagram shows how the `createtag` command works.","lastModifiedDate":"2023-04-09"},{"lineNumber":499,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":500,"author":{"gitId":"jnjy"},"content":"![CreateTagSequenceDiagram](images/CreateTagSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":501,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":502,"author":{"gitId":"jnjy"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":504,"author":{"gitId":"jnjy"},"content":"1. The user specifies a tag name for the new tag when creating a new tag.","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"jnjy"},"content":"2. If the tag name is empty, an error response is returned and users will be prompted to key in the command with the valid","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"jnjy"},"content":"   tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":507,"author":{"gitId":"jnjy"},"content":"3. If the tag name is invalid, an error response is returned and users will be prompted to key in the command with a valid","lastModifiedDate":"2023-03-26"},{"lineNumber":508,"author":{"gitId":"jnjy"},"content":"   tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":509,"author":{"gitId":"jnjy"},"content":"4. If the tag name inserted by the user has the same tag name as another tag in the `Model`, an error is returned to","lastModifiedDate":"2023-03-26"},{"lineNumber":510,"author":{"gitId":"jnjy"},"content":"   inform the user that there is already a duplicated copy of tag in the `UniqueTagList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":511,"author":{"gitId":"jnjy"},"content":"5. If the tag storage of WIFE is full, an error response is returned to inform that the user has reached the maximum","lastModifiedDate":"2023-03-26"},{"lineNumber":512,"author":{"gitId":"jnjy"},"content":"   capacity of the tag storage and will not be able to insert additional tag.","lastModifiedDate":"2023-03-26"},{"lineNumber":513,"author":{"gitId":"jnjy"},"content":"6. Completion of step 5 without any exceptions will result in successful creation of a new `Tag` in WIFE and stored in","lastModifiedDate":"2023-03-26"},{"lineNumber":514,"author":{"gitId":"jnjy"},"content":"   `UniqueTagList`","lastModifiedDate":"2023-03-26"},{"lineNumber":515,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":516,"author":{"gitId":"jnjy"},"content":"The following activity diagram summarizes what happens when a user executes a new `createtag` command:","lastModifiedDate":"2023-04-05"},{"lineNumber":517,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":518,"author":{"gitId":"jnjy"},"content":"![CreateTagActivityDiagram](images/CreateTagActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":519,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":520,"author":{"gitId":"Bisceto"},"content":"#### Tag a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":521,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":522,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-09"},{"lineNumber":523,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":524,"author":{"gitId":"jnjy"},"content":"User may choose to tag a `Food` in `WIFE` with any of the pre-defined `Tag` created. This can simply","lastModifiedDate":"2023-03-26"},{"lineNumber":525,"author":{"gitId":"jnjy"},"content":"be done using the command `tag`. This tagging function allows user to easily classify their `Food` in","lastModifiedDate":"2023-03-26"},{"lineNumber":526,"author":{"gitId":"jnjy"},"content":"the fridge.","lastModifiedDate":"2023-03-26"},{"lineNumber":527,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":528,"author":{"gitId":"jnjy"},"content":"**Implementation**","lastModifiedDate":"2023-03-26"},{"lineNumber":529,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":530,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input to `TagFoodCommand`. `TagFoodCommandParser` is used","lastModifiedDate":"2023-03-26"},{"lineNumber":531,"author":{"gitId":"jnjy"},"content":"to parse and check whether the user input is valid. After which a `TagFoodCommand` object is created with the specified","lastModifiedDate":"2023-03-26"},{"lineNumber":532,"author":{"gitId":"jnjy"},"content":"index and tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":533,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":534,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `TagFoodCommand#execute()`. This then facilitates the insertion of `Tag`","lastModifiedDate":"2023-04-09"},{"lineNumber":535,"author":{"gitId":"jnjy"},"content":"into the tag set associated with `Food` at specified index.","lastModifiedDate":"2023-04-09"},{"lineNumber":536,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":537,"author":{"gitId":"jnjy"},"content":"The following sequence diagram shows how the `tag` command works.","lastModifiedDate":"2023-04-09"},{"lineNumber":538,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":539,"author":{"gitId":"jnjy"},"content":"![TagFoodSequenceDiagram](images/TagFoodSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":540,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":541,"author":{"gitId":"jnjy"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-26"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":543,"author":{"gitId":"Bisceto"},"content":"1. The user specifies the index of the `Food` to be tagged and the name of the tag.","lastModifiedDate":"2023-04-09"},{"lineNumber":544,"author":{"gitId":"Bisceto"},"content":"2. If the index is out of bounds from the Food List, an error response is returned and users will be prompted to key in","lastModifiedDate":"2023-04-09"},{"lineNumber":545,"author":{"gitId":"jnjy"},"content":"   the command with the valid index.","lastModifiedDate":"2023-03-26"},{"lineNumber":546,"author":{"gitId":"jnjy"},"content":"3. If no specific tag name is specified, an error response is returned and users will be prompted to key in","lastModifiedDate":"2023-03-26"},{"lineNumber":547,"author":{"gitId":"jnjy"},"content":"   the command with a tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":548,"author":{"gitId":"jnjy"},"content":"4. If the tag name specified does not exist in WIFE, an error response is returned and users will need to create the tag","lastModifiedDate":"2023-03-26"},{"lineNumber":549,"author":{"gitId":"jnjy"},"content":"   before having access to the tag.","lastModifiedDate":"2023-03-26"},{"lineNumber":550,"author":{"gitId":"Bisceto"},"content":"5. Completion of step 4 without any exception will result in successful tagging of the `Food` with the","lastModifiedDate":"2023-04-09"},{"lineNumber":551,"author":{"gitId":"jnjy"},"content":"   specified tag.","lastModifiedDate":"2023-03-26"},{"lineNumber":552,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":553,"author":{"gitId":"jnjy"},"content":"The following activity diagram summarizes what happens when a user executes a new `createtag` command:","lastModifiedDate":"2023-04-09"},{"lineNumber":554,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":555,"author":{"gitId":"jnjy"},"content":"![TagFoodActivityDiagram](images/TagFoodActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":556,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":557,"author":{"gitId":"Bisceto"},"content":"#### Untag a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":558,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":559,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-09"},{"lineNumber":560,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":561,"author":{"gitId":"Bisceto"},"content":"The `untag` feature removes a specified tag from a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":562,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":563,"author":{"gitId":"jnjy"},"content":"**Implementation**","lastModifiedDate":"2023-03-26"},{"lineNumber":564,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":565,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input to `UntagCommand`. `UntagCommandParser` is used to ","lastModifiedDate":"2023-04-09"},{"lineNumber":566,"author":{"gitId":"Bisceto"},"content":"parse and check whether the user input is valid - if the tag exists or does not exist in the `Food` internal tag ","lastModifiedDate":"2023-04-09"},{"lineNumber":567,"author":{"gitId":"jnjy"},"content":"set. After which, an `UntagCommand` object is created with the specified tag name to be removed. ","lastModifiedDate":"2023-04-09"},{"lineNumber":568,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":569,"author":{"gitId":"jnjy"},"content":"The second stage requires `UntagCommand#execute()` to be called which then removes the tag from the `Food` at specified index.","lastModifiedDate":"2023-04-09"},{"lineNumber":570,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":571,"author":{"gitId":"jnjy"},"content":"**Usage Scenario**","lastModifiedDate":"2023-03-26"},{"lineNumber":572,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":573,"author":{"gitId":"Bisceto"},"content":"1. The user specifies tag name to be removed for a `Food` index.","lastModifiedDate":"2023-04-09"},{"lineNumber":574,"author":{"gitId":"Bisceto"},"content":"2. If the `Food` does not have that tag, an error response is returned and users will be prompted to key in the command with a valid tag name.","lastModifiedDate":"2023-04-09"},{"lineNumber":575,"author":{"gitId":"jnjy"},"content":"3. Completion of step 1 without any exceptions will result in successful removal of the specified `Tag` from the `Food` item.","lastModifiedDate":"2023-03-26"},{"lineNumber":576,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":577,"author":{"gitId":"rmj1405"},"content":"The activity diagrams of the `untag` and `tag` commands are similar.","lastModifiedDate":"2023-04-08"},{"lineNumber":578,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":579,"author":{"gitId":"jnjy"},"content":"![UntagFoodActivityDiagram](images/UntagFoodActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":580,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":581,"author":{"gitId":"Bisceto"},"content":"#### List `Food` by tag(s).","lastModifiedDate":"2023-04-09"},{"lineNumber":582,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":583,"author":{"gitId":"Bisceto"},"content":"**Overview**","lastModifiedDate":"2023-04-07"},{"lineNumber":584,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":585,"author":{"gitId":"Bisceto"},"content":"The List by tag feature is meant to be a list all `Food` by the specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":586,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":587,"author":{"gitId":"ScorpiusSigma"},"content":"The following sequence diagram shows `listbytag`.","lastModifiedDate":"2023-04-07"},{"lineNumber":588,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":589,"author":{"gitId":"jnjy"},"content":"![ListByTagSequenceDiagram](images/ListByTagSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":590,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":591,"author":{"gitId":"Bisceto"},"content":"**Design considerations**","lastModifiedDate":"2023-04-07"},{"lineNumber":592,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":593,"author":{"gitId":"Bisceto"},"content":"-   **Alternative 1:** The command parameter will be the tag name of the `Food` to display","lastModifiedDate":"2023-04-09"},{"lineNumber":594,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":595,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":596,"author":{"gitId":"Bisceto"},"content":"        -   Easily implemented. The command parameter will show the `Food` with the specified tag name","lastModifiedDate":"2023-04-09"},{"lineNumber":597,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":598,"author":{"gitId":"ScorpiusSigma"},"content":"        -   May not be convenient for the user, as the command allows only 1 tag name at a time.","lastModifiedDate":"2023-04-07"},{"lineNumber":599,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":600,"author":{"gitId":"Bisceto"},"content":"-   **Alternative 2 (Current implementation):** The command parameter will be the tag name of the `Food` to display.","lastModifiedDate":"2023-04-09"},{"lineNumber":601,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":602,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Convenient for the user to key in multiple tag names to display.","lastModifiedDate":"2023-04-07"},{"lineNumber":603,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":604,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Parameter for multiple tag names must be checked that it is not empty","lastModifiedDate":"2023-04-07"},{"lineNumber":605,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Users will have to use separate commands by `n/` which maybe a hassle","lastModifiedDate":"2023-04-07"},{"lineNumber":606,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":607,"author":{"gitId":"Bisceto"},"content":"**Implementation**","lastModifiedDate":"2023-04-07"},{"lineNumber":608,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"Bisceto"},"content":"The first stage of the implementation is parsing the user input to `ListByTagCommand`. `ListByTagCommandParser` is used","lastModifiedDate":"2023-04-07"},{"lineNumber":610,"author":{"gitId":"Bisceto"},"content":"to parse and check whether the user input is valid. After which a `ListByTagCommand` object is created with the specified","lastModifiedDate":"2023-04-07"},{"lineNumber":611,"author":{"gitId":"Bisceto"},"content":"tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":612,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":613,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `ListByTagCommand#execute()`. This then returns a `FilteredFoodList` with","lastModifiedDate":"2023-04-09"},{"lineNumber":614,"author":{"gitId":"jnjy"},"content":"`Food` associated with specified `Tag`.","lastModifiedDate":"2023-04-09"},{"lineNumber":615,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":616,"author":{"gitId":"Bisceto"},"content":"**Usage Scenario**","lastModifiedDate":"2023-04-07"},{"lineNumber":617,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":618,"author":{"gitId":"Bisceto"},"content":"1. The user specifies tags of the `Food` to be displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":619,"author":{"gitId":"Bisceto"},"content":"2. If no tag is specified, an error response is returned to prompt user to follow the command format.","lastModifiedDate":"2023-04-07"},{"lineNumber":620,"author":{"gitId":"Bisceto"},"content":"3. If the tag does not exist in `UniqueTagList`, an error response is returned and users will be prompted to key in the command with the valid tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":621,"author":{"gitId":"Bisceto"},"content":"4. If a valid tag is specified, the indexed `Food` with the specified tags will be displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":622,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":623,"author":{"gitId":"Bisceto"},"content":"The following activity diagram shows the usage of the `listbytag` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":624,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":625,"author":{"gitId":"jnjy"},"content":"![ListByTagActivityDiagram](images/ListByTagActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":626,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":627,"author":{"gitId":"Bisceto"},"content":"#### Delete `Food` by tag(s).","lastModifiedDate":"2023-04-09"},{"lineNumber":628,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":629,"author":{"gitId":"Bisceto"},"content":"**Overview**","lastModifiedDate":"2023-04-07"},{"lineNumber":630,"author":{"gitId":"Bisceto"},"content":"The Delete by tag feature is meant to delete all `Food` by the specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":631,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":632,"author":{"gitId":"ScorpiusSigma"},"content":"The following sequence diagram shows `delbytag`.","lastModifiedDate":"2023-04-07"},{"lineNumber":633,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":634,"author":{"gitId":"jnjy"},"content":"![DeleteByTagSequenceDiagram](images/DeleteByTagSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":635,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":636,"author":{"gitId":"Bisceto"},"content":"**Design considerations**","lastModifiedDate":"2023-04-07"},{"lineNumber":637,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":638,"author":{"gitId":"Bisceto"},"content":"-   **Alternative 1:** The command parameter will be the tag name of the `Food` to delete","lastModifiedDate":"2023-04-09"},{"lineNumber":639,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":640,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":641,"author":{"gitId":"Bisceto"},"content":"        -   Easily implemented. The command parameter will delete the `Food` with the specified tag name","lastModifiedDate":"2023-04-09"},{"lineNumber":642,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":643,"author":{"gitId":"ScorpiusSigma"},"content":"        -   May not be convenient for the user, as the command allows only 1 tag name at a time.","lastModifiedDate":"2023-04-07"},{"lineNumber":644,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":645,"author":{"gitId":"Bisceto"},"content":"-   **Alternative 2 (Current implementation):** The command parameter will be the tag name of the `Food` to delete.","lastModifiedDate":"2023-04-09"},{"lineNumber":646,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":647,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Convenient for the user to key in multiple tag names to display.","lastModifiedDate":"2023-04-07"},{"lineNumber":648,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":649,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Parameter for multiple tag names must be checked that it is not empty","lastModifiedDate":"2023-04-07"},{"lineNumber":650,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Users will have to use separate commands by `n/` which maybe a hassle","lastModifiedDate":"2023-04-07"},{"lineNumber":651,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":652,"author":{"gitId":"Bisceto"},"content":"**Implementation**","lastModifiedDate":"2023-04-07"},{"lineNumber":653,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":654,"author":{"gitId":"Bisceto"},"content":"The first stage of the implementation is parsing the user input to `DeleteByTagCommand`. `DeleteByTagCommandParser` is used","lastModifiedDate":"2023-04-07"},{"lineNumber":655,"author":{"gitId":"Bisceto"},"content":"to parse and check whether the user input is valid. After which a `DeleteByTagCommand` object is created with the specified tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":656,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":657,"author":{"gitId":"jnjy"},"content":"The second step necessitates the execution of `DeleteByTagCommand#execute()`. This then facilitates the deletion of all","lastModifiedDate":"2023-04-09"},{"lineNumber":658,"author":{"gitId":"jnjy"},"content":"`Food` associated with specified `Tag`.","lastModifiedDate":"2023-04-09"},{"lineNumber":659,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":660,"author":{"gitId":"Bisceto"},"content":"**Usage Scenario**","lastModifiedDate":"2023-04-07"},{"lineNumber":661,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":662,"author":{"gitId":"Bisceto"},"content":"1. The user specifies tags of the `Food` to be deleted.","lastModifiedDate":"2023-04-09"},{"lineNumber":663,"author":{"gitId":"Bisceto"},"content":"2. If no tag is specified, an error response is returned to prompt user to follow the command format.","lastModifiedDate":"2023-04-07"},{"lineNumber":664,"author":{"gitId":"Bisceto"},"content":"3. If the tag does not exist in `UniqueTagList`, an error response is returned and users will be prompted to key in the command with the valid tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":665,"author":{"gitId":"Bisceto"},"content":"4. If a valid tag is specified, the `Food` with the specified tags will be deleted.","lastModifiedDate":"2023-04-09"},{"lineNumber":666,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":667,"author":{"gitId":"Bisceto"},"content":"The following activity diagram shows the usage of the `delbytag` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":668,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":669,"author":{"gitId":"jnjy"},"content":"![DeleteByTagActivityDiagram](images/DeleteByTagActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":670,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":671,"author":{"gitId":"Bisceto"},"content":"#### Delete tag(s)","lastModifiedDate":"2023-04-07"},{"lineNumber":672,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":673,"author":{"gitId":"jnjy"},"content":"**Overview**","lastModifiedDate":"2023-04-09"},{"lineNumber":674,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":675,"author":{"gitId":"Bisceto"},"content":"The `deltag` command deletes existing tag(s) in WIFE. This means `Food` that are initially tagged with the specified tag(s) will have that tag removed.","lastModifiedDate":"2023-04-09"},{"lineNumber":676,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":677,"author":{"gitId":"Bisceto"},"content":"**Implementation**","lastModifiedDate":"2023-04-07"},{"lineNumber":678,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":679,"author":{"gitId":"jnjy"},"content":"The first stage of the implementation is parsing the user input to `DeleteTagCommand`. `DeleteTagCommandParser` is used ","lastModifiedDate":"2023-04-09"},{"lineNumber":680,"author":{"gitId":"jnjy"},"content":"to parse and check whether the user input is valid. After which a `DeleteTagCommand` object is created with the ","lastModifiedDate":"2023-04-09"},{"lineNumber":681,"author":{"gitId":"jnjy"},"content":"specified tag name. ","lastModifiedDate":"2023-04-09"},{"lineNumber":682,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":683,"author":{"gitId":"jnjy"},"content":"The second stage requires `DeleteTagCommand#execute()` to be called which then removes the tag from the `UniqueTagList`","lastModifiedDate":"2023-04-09"},{"lineNumber":684,"author":{"gitId":"jnjy"},"content":"and all its appearance in `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":685,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":686,"author":{"gitId":"ScorpiusSigma"},"content":"The following sequence diagram shows how the `deltag` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":687,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":688,"author":{"gitId":"jnjy"},"content":"![DeleteTagSequenceDiagram](images/DeleteTagSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":689,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":690,"author":{"gitId":"Bisceto"},"content":"**Usage Scenario**","lastModifiedDate":"2023-04-07"},{"lineNumber":691,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":692,"author":{"gitId":"Bisceto"},"content":"1. The user specifies tag name(s) for the tag(s) to be deleted.","lastModifiedDate":"2023-04-07"},{"lineNumber":693,"author":{"gitId":"Bisceto"},"content":"2. If the tag name is empty, an error response is returned and users will be prompted to key in the command with the valid tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":694,"author":{"gitId":"Bisceto"},"content":"3. If all tag name(s) are invalid, an error response is returned and users will be prompted to key in the command with a valid tag name.","lastModifiedDate":"2023-04-07"},{"lineNumber":695,"author":{"gitId":"Bisceto"},"content":"4. If some tag name(s) are invalid, invalid tag names will be ignored and valid tag names will be processed.","lastModifiedDate":"2023-04-07"},{"lineNumber":696,"author":{"gitId":"Bisceto"},"content":"5. Completion of step 4 without any exceptions will result in successful deletion of specified `Tag` in WIFE and `Food` with specified tag(s) will have that tag(s) removed","lastModifiedDate":"2023-04-07"},{"lineNumber":697,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":698,"author":{"gitId":"ScorpiusSigma"},"content":"The following activity diagram summarizes what happens when a user executes a new `deltag` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":699,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":700,"author":{"gitId":"jnjy"},"content":"![DeleteTagActivityDiagram](images/DeleteTagActivityDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":701,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":702,"author":{"gitId":"rmj1405"},"content":"### General Features","lastModifiedDate":"2023-04-08"},{"lineNumber":703,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":704,"author":{"gitId":"rmj1405"},"content":"#### Dynamic Help","lastModifiedDate":"2023-04-08"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"rmj1405"},"content":"![HelpCommandActivityDiagram.png](images%2FHelpCommandActivityDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":707,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":708,"author":{"gitId":"rmj1405"},"content":"The dynamic help mechanism allows the user to receive in-app help for the specific command being queried i.e. `help add`. It extends the traditional help functionality where the user only received general help. The help commands and respective outputs are stored internally as enums in `HelpMenu.java`. Additionally, `HelpMenu.java` implements the following operations:","lastModifiedDate":"2023-03-26"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"rmj1405"},"content":"HelpMenu#getGeneralHelp() — Retrieves a general help message if the user inputs `help`.","lastModifiedDate":"2023-03-22"},{"lineNumber":711,"author":{"gitId":"rmj1405"},"content":"HelpMenu#getCommandHelp() — Retrieves the command specific help message.","lastModifiedDate":"2023-03-22"},{"lineNumber":712,"author":{"gitId":"rmj1405"},"content":"HelpMenu#parseCommand() — Parses the command input in `help COMMAND` to ensure it is a valid command.","lastModifiedDate":"2023-03-22"},{"lineNumber":713,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":714,"author":{"gitId":"rmj1405"},"content":"These operations are invoked in `HelpCommandParser.java` which calls HelpMenu#getGeneralHelp() or HelpMenu#getCommandHelp() depending on the help command input after parsing the input with HelpMenu#parseCommand().","lastModifiedDate":"2023-03-22"},{"lineNumber":715,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":716,"author":{"gitId":"rmj1405"},"content":"**Implementation**","lastModifiedDate":"2023-04-08"},{"lineNumber":717,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":718,"author":{"gitId":"rmj1405"},"content":"Step 1. After successful retrieval of the help message, the message is passed to the `HelpCommand` object returned by `HelpCommandParser`.","lastModifiedDate":"2023-03-22"},{"lineNumber":719,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":720,"author":{"gitId":"rmj1405"},"content":"Step 2. The `LogicManager` executes the `HelpCommand` object which generates a `Command Result` object with the help message.","lastModifiedDate":"2023-03-26"},{"lineNumber":721,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":722,"author":{"gitId":"rmj1405"},"content":"Step 3. MainWindow#executeCommand() extracts the help message from the `CommandResult` and sends it to `HelpWindow` as the text to be set in the FXML `label`.","lastModifiedDate":"2023-03-22"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-09"},{"lineNumber":725,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"Bisceto"},"content":"Here are links to other documentation that you might find useful when developing WIFE:","lastModifiedDate":"2023-04-07"},{"lineNumber":728,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":729,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":730,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":731,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":732,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":733,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-09"},{"lineNumber":736,"author":{"gitId":"rmj1405"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-04-08"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":738,"author":{"gitId":"rmj1405"},"content":"#### User Interface","lastModifiedDate":"2023-04-08"},{"lineNumber":739,"author":{"gitId":"rmj1405"},"content":"1. The enter button text gets truncated on some devices. We suspect this to be an OS related issue and plan to fix this in the future.","lastModifiedDate":"2023-04-08"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"jnjy"},"content":"#### Food\u0027s Unit Representation","lastModifiedDate":"2023-04-09"},{"lineNumber":742,"author":{"gitId":"jnjy"},"content":"It has been recognized that some users prefer to utilize specific unit representations for certain types of food, ","lastModifiedDate":"2023-04-09"},{"lineNumber":743,"author":{"gitId":"jnjy"},"content":"such as using 1L or 2L to indicate the volume of milk. To accommodate this, future iterations of the system will ","lastModifiedDate":"2023-04-09"},{"lineNumber":744,"author":{"gitId":"jnjy"},"content":"incorporate alphanumeric representations of `Unit`, enabling users to include such unit specifications.","lastModifiedDate":"2023-04-09"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-09"},{"lineNumber":747,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"ScorpiusSigma"},"content":"-   Fridge owner who cares about food waste and wish to track their fridge inventory.","lastModifiedDate":"2023-04-07"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"Bisceto"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-05"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"ScorpiusSigma"},"content":"-   The perfect solution to make sure you’re always one step ahead when managing your inventory, saving you time and","lastModifiedDate":"2023-04-07"},{"lineNumber":758,"author":{"gitId":"ScorpiusSigma"},"content":"    money while reducing food waste.","lastModifiedDate":"2023-04-07"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"Bisceto"},"content":"### User stories ","lastModifiedDate":"2023-04-07"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"| Priority | As a …​                            | I want to …​                                          | So that I can…​                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"Bisceto"},"content":"|----------|------------------------------------|-------------------------------------------------------|---------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":766,"author":{"gitId":"Bisceto"},"content":"| `* * *`  | Organised user                     | add food items to my list                             | track what is in my fridge                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":767,"author":{"gitId":"Bisceto"},"content":"| `* * *`  | Meal planner                       | set expiration dates for items in my fridge           | plan meals around items that are expiring   |","lastModifiedDate":"2023-03-27"},{"lineNumber":768,"author":{"gitId":"Bisceto"},"content":"| `* * *`  | Organised user                     | set item categories for fridge items                  | easily find what I need when cooking.       |","lastModifiedDate":"2023-03-27"},{"lineNumber":769,"author":{"gitId":"Bisceto"},"content":"| `* * *`  | Organised user                     | delete ingredients                                    | know what ingredients I have thrown away    |","lastModifiedDate":"2023-03-27"},{"lineNumber":770,"author":{"gitId":"Bisceto"},"content":"| `* *`    | Organised user                     | layout items                                          | see where all my food items are             |","lastModifiedDate":"2023-03-27"},{"lineNumber":771,"author":{"gitId":"Bisceto"},"content":"| `* *`    | Fridge owner                       | transfer my list to another system                    | use the same system with another fridge     |","lastModifiedDate":"2023-03-27"},{"lineNumber":772,"author":{"gitId":"Bisceto"},"content":"| `* *`    | Organised User                     | search for specific food items                        | see whether I still have it in my fridge    |","lastModifiedDate":"2023-03-27"},{"lineNumber":773,"author":{"gitId":"Bisceto"},"content":"| `* *`    | User with unique items             | leave comments on items                               | remember any particular remarks             |","lastModifiedDate":"2023-03-27"},{"lineNumber":774,"author":{"gitId":"Bisceto"},"content":"| `* *`    | User who likes visuals             | attach images to items                                | remember what they look like                |","lastModifiedDate":"2023-03-27"},{"lineNumber":775,"author":{"gitId":"Bisceto"},"content":"| `* *`    | User who manages finances          | know how much is spent every month                    | track my monthly finances                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":776,"author":{"gitId":"Bisceto"},"content":"| `* *`    | User who likes to try new products | rate the items                                        | know whether to buy the same item next time |","lastModifiedDate":"2023-03-27"},{"lineNumber":777,"author":{"gitId":"Bisceto"},"content":"| `* *`    | Forgetful user                     | see past purchases                                    | remember what I have bought in the past     |","lastModifiedDate":"2023-03-27"},{"lineNumber":778,"author":{"gitId":"Bisceto"},"content":"| `* *`    | Forgetful user                     | set reminders for items                               | remember to use them before they expire     |","lastModifiedDate":"2023-03-27"},{"lineNumber":779,"author":{"gitId":"Bisceto"},"content":"| `*`      | User who likes to cook             | see recipes with the food in my fridge as ingredients | decide what meals I can make                |","lastModifiedDate":"2023-03-27"},{"lineNumber":780,"author":{"gitId":"Bisceto"},"content":"| `*`      | User who does grocery shopping     | generate a grocery list                               | bring it to the supermarket                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"jnjy"},"content":"(For all use cases below, the **System** is the `Well Informed Fridge Environment (WIFE)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-04"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"Bisceto"},"content":"### **Use case UC01: Add a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":788,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":790,"author":{"gitId":"Bisceto"},"content":"1. User add item by giving WIFE the name of the item.","lastModifiedDate":"2023-03-05"},{"lineNumber":791,"author":{"gitId":"Bisceto"},"content":"2. User confirms.","lastModifiedDate":"2023-03-05"},{"lineNumber":792,"author":{"gitId":"Bisceto"},"content":"3. WIFE adds the item to the list and displays all current items in the fridge.","lastModifiedDate":"2023-03-05"},{"lineNumber":793,"author":{"gitId":"Bisceto"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":794,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":795,"author":{"gitId":"Bisceto"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":796,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":797,"author":{"gitId":"ScorpiusSigma"},"content":"-   2a. WIFE detects an error in the entered data.","lastModifiedDate":"2023-04-07"},{"lineNumber":798,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":799,"author":{"gitId":"ScorpiusSigma"},"content":"    -   2a1. WIFE requests for the correct data.","lastModifiedDate":"2023-04-07"},{"lineNumber":800,"author":{"gitId":"ScorpiusSigma"},"content":"    -   2a2. User enters new data.","lastModifiedDate":"2023-04-07"},{"lineNumber":801,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Steps 2a1-2a2 are repeated until the data entered are correct. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":802,"author":{"gitId":"Bisceto"},"content":"        Use case resumes from step 3.","lastModifiedDate":"2023-03-05"},{"lineNumber":803,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":804,"author":{"gitId":"ScorpiusSigma"},"content":"-   \\*a. At any time, User chooses to cancel the transfer.","lastModifiedDate":"2023-04-07"},{"lineNumber":805,"author":{"gitId":"ScorpiusSigma"},"content":"    -   \\*a1. OBS requests to confirm the cancellation.","lastModifiedDate":"2023-04-07"},{"lineNumber":806,"author":{"gitId":"ScorpiusSigma"},"content":"    -   \\*a2. User confirms the cancellation. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":807,"author":{"gitId":"Bisceto"},"content":"        Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":808,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":809,"author":{"gitId":"Bisceto"},"content":"### **Use case UC02: Lists all `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":810,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":811,"author":{"gitId":"Bisceto"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":812,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":813,"author":{"gitId":"Bisceto"},"content":"1. User ask to view all `Food` in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":814,"author":{"gitId":"Bisceto"},"content":"2. WIFE displays all `Food` that are in the fridge. \u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":815,"author":{"gitId":"Bisceto"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":816,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":817,"author":{"gitId":"Bisceto"},"content":"**Extensions:**","lastModifiedDate":"2023-03-05"},{"lineNumber":818,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":819,"author":{"gitId":"ScorpiusSigma"},"content":"-   1a. WIFE is empty.","lastModifiedDate":"2023-04-07"},{"lineNumber":820,"author":{"gitId":"ScorpiusSigma"},"content":"    -   1a1. WIFE displays a message that tells the User that there are no items. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":821,"author":{"gitId":"Bisceto"},"content":"        Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":822,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":823,"author":{"gitId":"Bisceto"},"content":"### **Use case UC03: Edit a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":824,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":825,"author":{"gitId":"Bisceto"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":826,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":827,"author":{"gitId":"Bisceto"},"content":"1.  User requests to update an item in the fridge.","lastModifiedDate":"2023-04-07"},{"lineNumber":828,"author":{"gitId":"Bisceto"},"content":"2.  WIFE updates the item and displays successful update message.","lastModifiedDate":"2023-04-07"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":832,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-04-07"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":834,"author":{"gitId":"Bisceto"},"content":"* 1a. WIFE is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":835,"author":{"gitId":"Bisceto"},"content":"    * 1a1. WIFE displays a message that tells the User that there are no items","lastModifiedDate":"2023-04-07"},{"lineNumber":836,"author":{"gitId":"Bisceto"},"content":"      and cannot update specified item","lastModifiedDate":"2023-04-07"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":838,"author":{"gitId":"Bisceto"},"content":"      Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":839,"author":{"gitId":"Bisceto"},"content":"* 1b. User selects an item that does not exist.","lastModifiedDate":"2023-04-07"},{"lineNumber":840,"author":{"gitId":"Bisceto"},"content":"    * 1b1. WIFE displays a message that tells the User that specified item does not exist.","lastModifiedDate":"2023-04-07"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":842,"author":{"gitId":"Bisceto"},"content":"      Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":843,"author":{"gitId":"Bisceto"},"content":"    * ","lastModifiedDate":"2023-04-07"},{"lineNumber":844,"author":{"gitId":"Bisceto"},"content":"### **Use case UC04: Increase the quantity of a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"Bisceto"},"content":"1. User selects a `Food` to increase its quantity in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":849,"author":{"gitId":"Bisceto"},"content":"2. WIFE informs the user that the increase has been completed.","lastModifiedDate":"2023-04-07"},{"lineNumber":850,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"Bisceto"},"content":"* 1a. User selects an invalid `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":855,"author":{"gitId":"Bisceto"},"content":"    * 1a1. WIFE displays a message that tells the User that the selected `Food`is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":856,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"Bisceto"},"content":"* 1b. The user does not specify the quantity of the `Food` to increase by","lastModifiedDate":"2023-04-09"},{"lineNumber":859,"author":{"gitId":"Bisceto"},"content":"    * 1b1. WIFE increases the quantity of the specified `Food` by 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":860,"author":{"gitId":"Bisceto"},"content":"      Use case resumes from Step 2.","lastModifiedDate":"2023-04-07"},{"lineNumber":861,"author":{"gitId":"Bisceto"},"content":"* 1c. The user specifies a value that is lesser than or equal to 0 for the quantity of the `Food` to increase by.","lastModifiedDate":"2023-04-09"},{"lineNumber":862,"author":{"gitId":"Bisceto"},"content":"    * 1b1. WIFE displays a message that tells the user that the specified value is invalid.","lastModifiedDate":"2023-04-07"},{"lineNumber":863,"author":{"gitId":"Bisceto"},"content":"      Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"Bisceto"},"content":"### **Use case UC05: Decrease the quantity of a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":866,"author":{"gitId":"Bisceto"},"content":"The same as Use Case UC08: Increment the quantity of a `Food`, except that it is to decrease the quantity of a `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"Bisceto"},"content":"**Additional Extensions**","lastModifiedDate":"2023-04-07"},{"lineNumber":869,"author":{"gitId":"Bisceto"},"content":"* 1d. The user specifies a value that is larger than the current quantity of the `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":870,"author":{"gitId":"Bisceto"},"content":"  * 1d1. WIFE displays a message that tells the user that the specified value is invalid.","lastModifiedDate":"2023-04-07"},{"lineNumber":871,"author":{"gitId":"Bisceto"},"content":"    Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"Bisceto"},"content":"### **Use case UC06: Delete a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"rmj1405"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":876,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":877,"author":{"gitId":"Bisceto"},"content":"1. User requests to delete specified `Food` in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":878,"author":{"gitId":"Bisceto"},"content":"2. WIFE deletes `Food` and displays successful deletion message. \u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":879,"author":{"gitId":"rmj1405"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":880,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":881,"author":{"gitId":"Bisceto"},"content":"**Extensions:**","lastModifiedDate":"2023-04-07"},{"lineNumber":882,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":883,"author":{"gitId":"ScorpiusSigma"},"content":"-   1a. WIFE is empty.","lastModifiedDate":"2023-04-07"},{"lineNumber":884,"author":{"gitId":"Bisceto"},"content":"    -   1a1. WIFE displays a message that tells the User that there are no items and cannot delete specified item. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":885,"author":{"gitId":"rmj1405"},"content":"        Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":886,"author":{"gitId":"Bisceto"},"content":"-   1b. User selects an index that is more than the `Food` in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":887,"author":{"gitId":"Bisceto"},"content":"    -   1b1. WIFE displays a message that tells the User that the `Food` index provided is invalid. \u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":888,"author":{"gitId":"rmj1405"},"content":"        Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":889,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":890,"author":{"gitId":"Bisceto"},"content":"### **Use case UC07: Create a new tag**","lastModifiedDate":"2023-04-07"},{"lineNumber":891,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":892,"author":{"gitId":"jnjy"},"content":"**MSS**","lastModifiedDate":"2023-03-22"},{"lineNumber":893,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":894,"author":{"gitId":"jnjy"},"content":"1. User adds a new tag by giving WIFE the name of the tag.","lastModifiedDate":"2023-03-22"},{"lineNumber":895,"author":{"gitId":"jnjy"},"content":"2. User confirms.","lastModifiedDate":"2023-03-22"},{"lineNumber":896,"author":{"gitId":"jnjy"},"content":"3. WIFE adds the tag to the list and displays all current tags in the fridge.","lastModifiedDate":"2023-03-22"},{"lineNumber":897,"author":{"gitId":"jnjy"},"content":"   Use case ends.","lastModifiedDate":"2023-03-22"},{"lineNumber":898,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":899,"author":{"gitId":"jnjy"},"content":"**Extensions**","lastModifiedDate":"2023-03-22"},{"lineNumber":900,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":901,"author":{"gitId":"jnjy"},"content":"* 1a. User keyed in an invalid tag name.","lastModifiedDate":"2023-03-22"},{"lineNumber":902,"author":{"gitId":"jnjy"},"content":"    * 1a1. WIFE displays a message that tells the User that there the tag name keyed in by","lastModifiedDate":"2023-03-22"},{"lineNumber":903,"author":{"gitId":"jnjy"},"content":"    * the user is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":904,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":905,"author":{"gitId":"jnjy"},"content":"      Use case ends.","lastModifiedDate":"2023-03-22"},{"lineNumber":906,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":907,"author":{"gitId":"jnjy"},"content":"* 1b. Tag already exists in WIFE\u0027s list of pre-defined tags.","lastModifiedDate":"2023-03-22"},{"lineNumber":908,"author":{"gitId":"jnjy"},"content":"    * 1a1. WIFE displays a message that tells the User that there are already similar tags","lastModifiedDate":"2023-03-22"},{"lineNumber":909,"author":{"gitId":"jnjy"},"content":"    * in the list, hence, no action will be carried out.","lastModifiedDate":"2023-03-22"},{"lineNumber":910,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":911,"author":{"gitId":"jnjy"},"content":"      Use case ends.","lastModifiedDate":"2023-03-22"},{"lineNumber":912,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":913,"author":{"gitId":"Bisceto"},"content":"### **Use case UC08: Tag a `Food`**","lastModifiedDate":"2023-04-09"},{"lineNumber":914,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":915,"author":{"gitId":"Bisceto"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":916,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":917,"author":{"gitId":"Bisceto"},"content":"1.  User requests to list the `Food` stored in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":918,"author":{"gitId":"Bisceto"},"content":"2.  WIFE shows the full list of `Food`.","lastModifiedDate":"2023-04-09"},{"lineNumber":919,"author":{"gitId":"Bisceto"},"content":"3.  User tags `Food` at specified index with tags pre-defined by WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":920,"author":{"gitId":"Bisceto"},"content":"4.  WIFE tags the `Food` with the chosen tag.","lastModifiedDate":"2023-04-09"},{"lineNumber":921,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":922,"author":{"gitId":"Bisceto"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":923,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":924,"author":{"gitId":"Bisceto"},"content":"**Extensions**","lastModifiedDate":"2023-03-23"},{"lineNumber":925,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":926,"author":{"gitId":"Bisceto"},"content":"-   2a. The list is empty. WIFE informs the user that the list is empty.\u003c/br\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":927,"author":{"gitId":"Bisceto"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":928,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":929,"author":{"gitId":"Bisceto"},"content":"-   3a. The given index is invalid.","lastModifiedDate":"2023-04-07"},{"lineNumber":930,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":931,"author":{"gitId":"Bisceto"},"content":"    -   3a1. WIFE displays an error message to inform the user that the index","lastModifiedDate":"2023-04-07"},{"lineNumber":932,"author":{"gitId":"Bisceto"},"content":"    -   inserted is invalid. \u003c/br\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":933,"author":{"gitId":"Bisceto"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-04-07"},{"lineNumber":934,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":935,"author":{"gitId":"Bisceto"},"content":"-   4a. Chosen tag is not in the pre-defined list of tags.","lastModifiedDate":"2023-04-07"},{"lineNumber":936,"author":{"gitId":"Bisceto"},"content":"    -   4a1. WIFE shows an error message.","lastModifiedDate":"2023-04-07"},{"lineNumber":937,"author":{"gitId":"Bisceto"},"content":"    -   4a2. WIFE asks if the user wish to add the new tags into the tag list. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":938,"author":{"gitId":"Bisceto"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-04-07"},{"lineNumber":939,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":940,"author":{"gitId":"Bisceto"},"content":"### **Use case UC09: List `Food` by tags**","lastModifiedDate":"2023-04-09"},{"lineNumber":941,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":942,"author":{"gitId":"ScorpiusSigma"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":943,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":944,"author":{"gitId":"Bisceto"},"content":"1. User requests to view `Food` with specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":945,"author":{"gitId":"Bisceto"},"content":"2. WIFE displays all `Food` with the specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":946,"author":{"gitId":"ScorpiusSigma"},"content":"   Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":947,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":948,"author":{"gitId":"ScorpiusSigma"},"content":"**Extensions**","lastModifiedDate":"2023-03-27"},{"lineNumber":949,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":950,"author":{"gitId":"ScorpiusSigma"},"content":"-   1a. User requests an invalid tag.","lastModifiedDate":"2023-04-07"},{"lineNumber":951,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":952,"author":{"gitId":"Bisceto"},"content":"    -   1a1. WIFE displays a message that tells the User that there are no `Food` tagged with the specified tag.","lastModifiedDate":"2023-04-09"},{"lineNumber":953,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":954,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":955,"author":{"gitId":"Bisceto"},"content":"-   1b. The user specify valid and invalid tags together.","lastModifiedDate":"2023-04-09"},{"lineNumber":956,"author":{"gitId":"Bisceto"},"content":"    -   1b1. WIFE displays `Food` with valid tags. It also tells User which tag is valid or invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":957,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":958,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":959,"author":{"gitId":"Bisceto"},"content":"### **Use case UC10: Delete `Food` by tags**","lastModifiedDate":"2023-04-09"},{"lineNumber":960,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":961,"author":{"gitId":"ScorpiusSigma"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":962,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":963,"author":{"gitId":"Bisceto"},"content":"1. User requests to delete `Food` with specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":964,"author":{"gitId":"Bisceto"},"content":"2. WIFE deletes and displays all `Food` with the specified tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":965,"author":{"gitId":"ScorpiusSigma"},"content":"   Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":966,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":967,"author":{"gitId":"ScorpiusSigma"},"content":"**Extensions**","lastModifiedDate":"2023-03-27"},{"lineNumber":968,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":969,"author":{"gitId":"ScorpiusSigma"},"content":"-   1a. User requests an invalid tag.","lastModifiedDate":"2023-04-07"},{"lineNumber":970,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":971,"author":{"gitId":"Bisceto"},"content":"    -   1a1. WIFE displays a message that tells the User that there are no `Food` tagged with the specified tag to be deleted.","lastModifiedDate":"2023-04-09"},{"lineNumber":972,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":973,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":974,"author":{"gitId":"Bisceto"},"content":"-   1b. The user specify valid and invalid tags together.","lastModifiedDate":"2023-04-09"},{"lineNumber":975,"author":{"gitId":"Bisceto"},"content":"    -   1b1. WIFE deletes and displays `Food` with valid tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":976,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":977,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":978,"author":{"gitId":"Bisceto"},"content":"### **Use case UC11: Delete tags**","lastModifiedDate":"2023-04-07"},{"lineNumber":979,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":980,"author":{"gitId":"ScorpiusSigma"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":981,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":982,"author":{"gitId":"ScorpiusSigma"},"content":"1. User requests to delete pre-defined tags in WIFE.","lastModifiedDate":"2023-03-27"},{"lineNumber":983,"author":{"gitId":"Bisceto"},"content":"2. WIFE deletes pre-defined tags in WIFE and untag itself from associated `Food`. It then tells the users the tags that are deleted","lastModifiedDate":"2023-04-09"},{"lineNumber":984,"author":{"gitId":"ScorpiusSigma"},"content":"   Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":985,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":986,"author":{"gitId":"ScorpiusSigma"},"content":"**Extensions**","lastModifiedDate":"2023-03-27"},{"lineNumber":987,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":988,"author":{"gitId":"ScorpiusSigma"},"content":"-   1a. User requests an invalid tag.","lastModifiedDate":"2023-04-07"},{"lineNumber":989,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":990,"author":{"gitId":"ScorpiusSigma"},"content":"    -   1a1. WIFE displays a message that tells the User that the tag specified is does not exit in WIFE","lastModifiedDate":"2023-04-07"},{"lineNumber":991,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":992,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":993,"author":{"gitId":"Bisceto"},"content":"-   1b. The user specify valid and invalid tags together.","lastModifiedDate":"2023-04-09"},{"lineNumber":994,"author":{"gitId":"ScorpiusSigma"},"content":"    -   1b1. WIFE ignores invalid tags.","lastModifiedDate":"2023-04-07"},{"lineNumber":995,"author":{"gitId":"ScorpiusSigma"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-03-27"},{"lineNumber":996,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":997,"author":{"gitId":"Bisceto"},"content":"### **Use case UC12: View help**","lastModifiedDate":"2023-04-07"},{"lineNumber":998,"author":{"gitId":"Bisceto"},"content":"**MSS:**","lastModifiedDate":"2023-04-07"},{"lineNumber":999,"author":{"gitId":"Bisceto"},"content":"1. User asks the WIFE for the help page","lastModifiedDate":"2023-04-07"},{"lineNumber":1000,"author":{"gitId":"Bisceto"},"content":"2. WIFE displays all available commands and corresponding formats \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1001,"author":{"gitId":"Bisceto"},"content":"   Use case ends.","lastModifiedDate":"2023-04-07"},{"lineNumber":1002,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1003,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"Bisceto"},"content":"2.  Should be able to hold up to 1000 food items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-27"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"Bisceto"},"content":"4.  Application’s dimension should be a minimum of 450 by 600 pixels.","lastModifiedDate":"2023-03-05"},{"lineNumber":1010,"author":{"gitId":"Bisceto"},"content":"5.  Should support a minimum of 50 items in storage.","lastModifiedDate":"2023-03-05"},{"lineNumber":1011,"author":{"gitId":"Bisceto"},"content":"6.  There should be no more than 1 second of lag when a user inputs a command.","lastModifiedDate":"2023-03-05"},{"lineNumber":1012,"author":{"gitId":"Bisceto"},"content":"7.  A first-time user should be able to easily perform CRUD operations on items.","lastModifiedDate":"2023-03-05"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"Bisceto"},"content":"Given below are instructions to test the app manually. Ideally, please follow the testing instructions in sequence, as","lastModifiedDate":"2023-04-07"},{"lineNumber":1019,"author":{"gitId":"Bisceto"},"content":"some tests may be dependent on previous instructions.","lastModifiedDate":"2023-04-07"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1026,"author":{"gitId":"Bisceto"},"content":"### Initial Launch","lastModifiedDate":"2023-04-07"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"Bisceto"},"content":"2. Double-click the jar file","lastModifiedDate":"2023-04-07"},{"lineNumber":1031,"author":{"gitId":"Bisceto"},"content":"   * Expected: Shows the GUI with a set of sample data.","lastModifiedDate":"2023-04-07"},{"lineNumber":1032,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1033,"author":{"gitId":"Bisceto"},"content":"### Tests for Food-related features","lastModifiedDate":"2023-04-07"},{"lineNumber":1034,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1035,"author":{"gitId":"Bisceto"},"content":"#### Test to add a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1036,"author":{"gitId":"Bisceto"},"content":"`add n/Broccoli u/STALK q/2 e/03-03-2033`","lastModifiedDate":"2023-04-08"},{"lineNumber":1037,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1038,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: New Food \"Broccoli\" added into the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":1039,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1040,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: New food added: Broccoli (expires on: 03-03-2033)","lastModifiedDate":"2023-04-08"},{"lineNumber":1041,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1042,"author":{"gitId":"Bisceto"},"content":"#### Test to list all `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1043,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1044,"author":{"gitId":"Bisceto"},"content":"`list`","lastModifiedDate":"2023-04-07"},{"lineNumber":1045,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1046,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: All Foods stored in WIFE are shown.","lastModifiedDate":"2023-04-07"},{"lineNumber":1047,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1048,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Listed all food items!","lastModifiedDate":"2023-04-07"},{"lineNumber":1049,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1050,"author":{"gitId":"Bisceto"},"content":"#### Test to edit a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1051,"author":{"gitId":"Bisceto"},"content":"`edit 2 q/10`","lastModifiedDate":"2023-04-08"},{"lineNumber":1052,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1053,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Broccoli\" Food has new `Quantity` of 10.","lastModifiedDate":"2023-04-08"},{"lineNumber":1054,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1055,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Edited food item: Broccoli (expires on: 03-03-2033)","lastModifiedDate":"2023-04-08"},{"lineNumber":1056,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1057,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1058,"author":{"gitId":"Bisceto"},"content":"This command is editing the \"Broccoli\" `Food`that was added when testing the `add` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":1059,"author":{"gitId":"Bisceto"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1060,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1061,"author":{"gitId":"Bisceto"},"content":"#### Test to find a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1062,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1063,"author":{"gitId":"Bisceto"},"content":"`find broc meij`","lastModifiedDate":"2023-04-08"},{"lineNumber":1064,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1065,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" and \"Broccoli\" appear in the Food List.","lastModifiedDate":"2023-04-08"},{"lineNumber":1066,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1067,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: 2 food item(s) found!","lastModifiedDate":"2023-04-08"},{"lineNumber":1068,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1069,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1070,"author":{"gitId":"Bisceto"},"content":"#### Test to increase quantity of a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1071,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1072,"author":{"gitId":"Bisceto"},"content":"`inc 1 q/100`","lastModifiedDate":"2023-04-08"},{"lineNumber":1073,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1074,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food\u0027s `Quantity` increased by 100","lastModifiedDate":"2023-04-08"},{"lineNumber":1075,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1076,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Increased Food: Meiji Milk (expires on: 13-11-2024) by 100","lastModifiedDate":"2023-04-08"},{"lineNumber":1077,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1078,"author":{"gitId":"Bisceto"},"content":"`inc 1`","lastModifiedDate":"2023-04-08"},{"lineNumber":1079,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1080,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food\u0027s `Quantity` increased by 1","lastModifiedDate":"2023-04-08"},{"lineNumber":1081,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1082,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Increased Food: Meiji Milk (expires on: 13-11-2024) by 1","lastModifiedDate":"2023-04-08"},{"lineNumber":1083,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1084,"author":{"gitId":"Bisceto"},"content":"#### Test to decrease quantity of a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"Bisceto"},"content":"`dec 1 q/100`","lastModifiedDate":"2023-04-08"},{"lineNumber":1087,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1088,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food\u0027s `Quantity` decreased by 100","lastModifiedDate":"2023-04-08"},{"lineNumber":1089,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1090,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Decreased Food: Meiji Milk (expires on: 13-11-2024) by 100","lastModifiedDate":"2023-04-08"},{"lineNumber":1091,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1092,"author":{"gitId":"Bisceto"},"content":"`dec 1`","lastModifiedDate":"2023-04-08"},{"lineNumber":1093,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1094,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food\u0027s `Quantity` decreased by 1","lastModifiedDate":"2023-04-08"},{"lineNumber":1095,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1096,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Decreased Food: Meiji Milk (expires on: 13-11-2024) by 1","lastModifiedDate":"2023-04-08"},{"lineNumber":1097,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1098,"author":{"gitId":"Bisceto"},"content":"#### Test to delete a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1100,"author":{"gitId":"Bisceto"},"content":"`delete 2`","lastModifiedDate":"2023-04-08"},{"lineNumber":1101,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1102,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Broccoli\" Food has been removed from the Food List","lastModifiedDate":"2023-04-08"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1104,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Deleted Food: Broccoli (expires on: 03-03-2033)","lastModifiedDate":"2023-04-08"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1106,"author":{"gitId":"Bisceto"},"content":"#### Test to sort `Food` by expiry date","lastModifiedDate":"2023-04-09"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"Bisceto"},"content":"`expiry`","lastModifiedDate":"2023-04-08"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1110,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: All Food items are sorted in ascending order (Foods with a closer expiry date appear at","lastModifiedDate":"2023-04-08"},{"lineNumber":1111,"author":{"gitId":"Bisceto"},"content":"the top)","lastModifiedDate":"2023-04-08"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1113,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Food items are being sorted by their expiry dates.","lastModifiedDate":"2023-04-08"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1116,"author":{"gitId":"Bisceto"},"content":"### Tests for tag-related features","lastModifiedDate":"2023-04-09"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1118,"author":{"gitId":"Bisceto"},"content":"#### Test to create a new tag","lastModifiedDate":"2023-04-09"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1120,"author":{"gitId":"Bisceto"},"content":"`createtag n/milky`","lastModifiedDate":"2023-04-08"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1122,"author":{"gitId":"Bisceto"},"content":"Expected output in Result Display: Tag(s) successfully created: Milky","lastModifiedDate":"2023-04-08"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1124,"author":{"gitId":"Bisceto"},"content":"#### Test to tag a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1126,"author":{"gitId":"Bisceto"},"content":"`tag 1 n/milky`","lastModifiedDate":"2023-04-08"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1128,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food has been tagged with the tag \"Milky\"","lastModifiedDate":"2023-04-08"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1130,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Meiji Milk successfully tagged with Milky","lastModifiedDate":"2023-04-08"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1132,"author":{"gitId":"Bisceto"},"content":"#### Test to untag a `Food`","lastModifiedDate":"2023-04-09"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"Bisceto"},"content":"`untag 1 n/milky`","lastModifiedDate":"2023-04-08"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1136,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Meiji Milk\" Food has been untagged with the tag \"Milky\"","lastModifiedDate":"2023-04-08"},{"lineNumber":1137,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1138,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Meiji Milk successfully untagged with Milky","lastModifiedDate":"2023-04-08"},{"lineNumber":1139,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1140,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1141,"author":{"gitId":"Bisceto"},"content":"#### Test to list all tags","lastModifiedDate":"2023-04-09"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1143,"author":{"gitId":"Bisceto"},"content":"`listtag`","lastModifiedDate":"2023-04-08"},{"lineNumber":1144,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1145,"author":{"gitId":"Bisceto"},"content":"Expected output in Result Display: Here are your existing tags: New Used Dairy Milky","lastModifiedDate":"2023-04-08"},{"lineNumber":1146,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1147,"author":{"gitId":"Bisceto"},"content":"#### Test to list `Food` by tag(s)","lastModifiedDate":"2023-04-09"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1149,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1150,"author":{"gitId":"Bisceto"},"content":"Prerequisite: Before testing this feature and the \"Delete Foods by tag(s)\" feature, please key in the following commands","lastModifiedDate":"2023-04-08"},{"lineNumber":1151,"author":{"gitId":"Bisceto"},"content":"sequentially.","lastModifiedDate":"2023-04-08"},{"lineNumber":1152,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1153,"author":{"gitId":"Bisceto"},"content":"`add n/Broccoli u/STALK q/2 e/03-03-2033` \u003c/br\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1154,"author":{"gitId":"Bisceto"},"content":"`createtag n/vegetables` \u003c/br\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1155,"author":{"gitId":"Bisceto"},"content":"`tag 1 n/milky` \u003c/br\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1156,"author":{"gitId":"Bisceto"},"content":"`tag 2 n/vegetables` \u003c/br\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1157,"author":{"gitId":"Bisceto"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1158,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1159,"author":{"gitId":"Bisceto"},"content":"`listbytags n/vegetables`","lastModifiedDate":"2023-04-08"},{"lineNumber":1160,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1161,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Broccoli\" Food appears in the Food List","lastModifiedDate":"2023-04-08"},{"lineNumber":1162,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1163,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Listed all food with the following tags:","lastModifiedDate":"2023-04-08"},{"lineNumber":1164,"author":{"gitId":"Bisceto"},"content":"[Vegetables]","lastModifiedDate":"2023-04-08"},{"lineNumber":1165,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1166,"author":{"gitId":"Bisceto"},"content":"#### Test to delete `Food` by tag(s)","lastModifiedDate":"2023-04-09"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1169,"author":{"gitId":"Bisceto"},"content":"Prerequisite: Ensure you have entered the prerequisite commands mentioned in \"List Foods by tag(s).","lastModifiedDate":"2023-04-08"},{"lineNumber":1170,"author":{"gitId":"Bisceto"},"content":"Then, enter the `list` command to show all Food items first.","lastModifiedDate":"2023-04-09"},{"lineNumber":1171,"author":{"gitId":"Bisceto"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1172,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1173,"author":{"gitId":"Bisceto"},"content":"`delbytag n/vegetables`","lastModifiedDate":"2023-04-08"},{"lineNumber":1174,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1175,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: \"Broccoli\" Food is removed from the Food List.","lastModifiedDate":"2023-04-08"},{"lineNumber":1176,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1177,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Deleted Food:","lastModifiedDate":"2023-04-08"},{"lineNumber":1178,"author":{"gitId":"Bisceto"},"content":"Broccoli (expires on: 03-03-2033)","lastModifiedDate":"2023-04-08"},{"lineNumber":1179,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1180,"author":{"gitId":"Bisceto"},"content":"#### Test to delete tag(s)","lastModifiedDate":"2023-04-09"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1182,"author":{"gitId":"Bisceto"},"content":"`deltag n/milky`","lastModifiedDate":"2023-04-08"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1184,"author":{"gitId":"Bisceto"},"content":"Expected Output in Food List: All occurrences of the `Milky` tag that are tagged to food items in the food the list","lastModifiedDate":"2023-04-08"},{"lineNumber":1185,"author":{"gitId":"Bisceto"},"content":"will be deleted. (\"Meiji Milk\" Food will not be deleted!)","lastModifiedDate":"2023-04-08"},{"lineNumber":1186,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1187,"author":{"gitId":"Bisceto"},"content":"Expected Output in Result Display: Tag successfully deleted: [Milky]","lastModifiedDate":"2023-04-08"},{"lineNumber":1188,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1189,"author":{"gitId":"Bisceto"},"content":"### Tests for general features","lastModifiedDate":"2023-04-09"},{"lineNumber":1190,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1191,"author":{"gitId":"Bisceto"},"content":"#### Test for Help","lastModifiedDate":"2023-04-09"},{"lineNumber":1192,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1193,"author":{"gitId":"Bisceto"},"content":"`help`","lastModifiedDate":"2023-04-07"},{"lineNumber":1194,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1195,"author":{"gitId":"Bisceto"},"content":"Expected Output: The Help Window pops up and shows a general help message.","lastModifiedDate":"2023-04-07"},{"lineNumber":1196,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1197,"author":{"gitId":"Bisceto"},"content":"`help add`","lastModifiedDate":"2023-04-07"},{"lineNumber":1198,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1199,"author":{"gitId":"Bisceto"},"content":"Expected Output: The Help Window pops up and shows a help message for the `add` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1200,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1201,"author":{"gitId":"Bisceto"},"content":"#### Test to clear WIFE","lastModifiedDate":"2023-04-09"},{"lineNumber":1202,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1203,"author":{"gitId":"Bisceto"},"content":"`clear`","lastModifiedDate":"2023-04-07"},{"lineNumber":1204,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1205,"author":{"gitId":"Bisceto"},"content":"Expected output in Food List: All Foods and tags have been removed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1206,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1207,"author":{"gitId":"Bisceto"},"content":"Expected output in Results Display: WIFE has been cleared!","lastModifiedDate":"2023-04-07"},{"lineNumber":1208,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1209,"author":{"gitId":"Bisceto"},"content":"#### Test to exit","lastModifiedDate":"2023-04-09"},{"lineNumber":1210,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1211,"author":{"gitId":"Bisceto"},"content":"`exit`","lastModifiedDate":"2023-04-07"},{"lineNumber":1212,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1213,"author":{"gitId":"Bisceto"},"content":"Expected output: WIFE application closes.","lastModifiedDate":"2023-04-07"},{"lineNumber":1214,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1215,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":1216,"author":{"gitId":"Bisceto"},"content":"### Glossary","lastModifiedDate":"2023-04-07"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1218,"author":{"gitId":"Bisceto"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1219,"author":{"gitId":"Bisceto"},"content":"* **WIFE** - Well Informed Fridge Environment \u003cbr/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1220,"author":{"gitId":"Bisceto"},"content":"* **Main Success Scenario (MSS)** - The most straightforward interaction for a given use case with no errors. \u003cbr/\u003e","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jnjy":225,"nigelteosw":43,"rmj1405":30,"Bisceto":535,"-":254,"ScorpiusSigma":133}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"   1. Run the `seedu.wife.Main` and try a few commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"jnjy":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"   e.g. `seedu.wife.commons.StringUtilTest`","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"   e.g. `seedu.wife.storage.StorageManagerTest`","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"   e.g. `seedu.wife.logic.LogicManagerTest`","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"## Introduction ","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt; helps users to manage their","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"items in the fridge. With this, one never has to worry about optimizing storage and organization of food items in their","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"refrigerator!","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"## Table of Contents","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"- [Trying out your first command!](#trying-out-your-first-command)","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"- [Features](#features)","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"- [Food-related Features](#food-related-features)","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"  - [Add a food item: `add`](#add-a-food-add)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"  - [List all food item: `list`](#list-all-food-items-list)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"  - [Edit a food item: `edit`](#edit-a-food-edit)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"  - [Find a food item: `find`](#find-a-food-find)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"  - [Increasing the quantity of a food item: `inc`](#increasing-the-quantity-of-a-food-inc)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"  - [Decreasing the quantity of a food item: `dec`](#decreasing-the-quantity-of-a-food-dec)","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"  - [Delete a food item: `delete`](#delete-a-food-delete)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"  - [Checking expiry of food items : `expiry`](#checking-expiry-of-food-items--expiry)","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"  - [View a food item : `view`](#view-full-name-of-food-item--view)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"- [Tag-related Features](#tag-related-features)","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"  - [Create a new tag: `createtag`](#create-a-new-tag-createtag)","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"  - [Tag a food item: `tag`](#tag-a-food-tag)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"  - [Untag a food item: `untag`](#untag-a-food-untag)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"  - [List all tags: `listtag`](#list-all-tags-listtag)","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"  - [Listing all food items by their tag(s) : `listbytag`](#listing-all-foods-by-their-tags--listbytag)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"  - [Delete food items by their tag(s) : `delbytag`](#delete-foods-by-their-tags--delbytag)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"  - [Delete tag(s) : `deltag`](#delete-tags--deltag)","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"- [General Features](#general-features)","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"  - [Getting help: `help`](#getting-help-help)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"  - [Clearing WIFE : `clear`](#clearing-wife--clear)","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"  - [Exit the program : `exit`](#exit-the-program--exit)","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"  - [Food Commands](#food-commands)","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"  - [Tag Commands](#tag-commands)","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"  - [General Commands](#general-commands)","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"1. Ensure you have [`Java 11`](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) or above installed in your Computer.","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"2. Download the latest `wife.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-1/tp/releases).","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"3. Double-click on the application to run WIFE!","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"If double-clicking the application does not work:","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"  * Copy the file to the folder you want to use as the _home folder_ for your WIFE.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"  * Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar wife.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"   ![Ui](images/UG/Ui_current.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"The main application consists of 3 components, namely:","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"* Food List","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"* Result Display","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"* User Input Box","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"## Trying out your first command!","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"Not sure how to start? Don\u0027t worry, let\u0027s start out with a simple command as an example using the sample data","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"provided WIFE when you first start up. ","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"* Type the following command in the user input box at the bottom of WIFE and press \u0027Enter\u0027 on your keyboard","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"to execute it.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"  `add n/Coca Cola u/Cans q/5 e/01-01-2099`","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"You should see the Food List be updated as such!","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"  ![Ui_updated](images/UG/AddFood.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"Congratulations, you just added your first item!","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"To see what the command format means, you can refer to the [Features](#features) below for details of each command to maximise your productivity with WIFE.","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Bisceto"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Meiji Milk`.","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  * Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Bisceto"},"content":"    e.g. `inc INDEX [q/QUANTITY]` can be used as `inc 1 q/10` or as `inc 1`.","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Bisceto"},"content":"  e.g. `[t/TAG NAME]…​` can be used as ` ` (i.e. 0 times), `t/Vegetables`, `t/Fresh` etc.","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Bisceto"},"content":"  e.g. if the command specifies `n/NAME u/UNIT`, `u/UNIT n/NAME` is also acceptable.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"Bisceto"},"content":"  e.g. if you specify `n/item1 n/item2`, only `n/item2` will be taken.","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":111,"author":{"gitId":"Bisceto"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Bisceto"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Bisceto"},"content":"## Food-related Features","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Bisceto"},"content":"### Add a food item: `add`","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"Bisceto"},"content":"Adds a new food item into WIFE. (This is the command when you tried out your first command!)","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"rmj1405"},"content":"Format: `add n/NAME u/UNIT q/QUANTITY e/EXPIRY DATE`","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"Bisceto"},"content":"* All parameters must be present in the command. Date must be in the format of DD-MM-YYYY","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"Bisceto"},"content":"* `UNIT` of the food item must have at most 10 characters","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"* `QUANTITY` of the food item **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"* `QUANTITY` of the food item should be less than `1,000,000`.","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"* `EXPIRY DATE` of the food item should be in the format `DD-MM-YYYY`. Examples of valid date format:","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"  * 11-11-2025","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"  * 07-04-2024","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"Bisceto"},"content":"* `EXPIRY DATE` of the food item should not be before the date of insertion","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Bisceto"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"rmj1405"},"content":"`add n/Coca Cola u/Cans q/5 e/01-01-2099` returns","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"Bisceto"},"content":"New food added: Coca Cola (expires on: 01-01-2099)","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"![AddFood](images/UG/AddFood.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Bisceto"},"content":"### List all food items: `list`","lastModifiedDate":"2023-04-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Bisceto"},"content":"Shows a list of all food items in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"ScorpiusSigma"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ScorpiusSigma"},"content":"`list` returns","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ScorpiusSigma"},"content":"```shell","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Bisceto"},"content":"  Listed all food items!","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"Bisceto"},"content":"![ListFoods](images/UG/ListFoods.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"Bisceto"},"content":"### Edit a food item: `edit`","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"Bisceto"},"content":"Edits a food item in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"rmj1405"},"content":"Format: `edit INDEX [n/NAME] [u/UNIT] [q/QUANTITY] [e/EXPIRY DATE]`","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"Bisceto"},"content":"* `INDEX` must be a valid integer that refers to an item currently in the fridge","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"Bisceto"},"content":"* `QUANTITY` of the edited food item should be less than `1,000,000`","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"Bisceto"},"content":"* `EXPIRY DATE` of the edited food item should be in the format `DD-MM-YYYY`. Examples of valid date format:","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"jnjy"},"content":"  * 11-11-2025","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":"  * 07-04-2024","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"Bisceto"},"content":"* `EXPIRY DATE` of the edited food should not be before the date of insertion","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"Example: \u003cbr/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"Bisceto"},"content":"`edit 1 n/Chocolate Milk q/20 e/06-06-2030` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"```markdown","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"Bisceto"},"content":"Edited food item: Chocolate milk (expires on: 06-06-2030)","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Bisceto"},"content":"![EditFood](images/UG/EditFood.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"Bisceto"},"content":"### Find a food item: `find`","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Bisceto"},"content":"Find food items in WIFE which names contain any of the specified keywords. Keywords are case-insensitive.","lastModifiedDate":"2023-04-06"},{"lineNumber":182,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"Bisceto"},"content":"Format: `find KEYWORD [KEYWORD]...`","lastModifiedDate":"2023-04-06"},{"lineNumber":184,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Bisceto"},"content":"Example: \u003cbr/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Bisceto"},"content":"`find choc` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Bisceto"},"content":"1 food item(s) found!","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"Bisceto"},"content":"![FindFood](images/UG/FindFood.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":192,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":193,"author":{"gitId":"Bisceto"},"content":"### Increasing the quantity of a food: `inc`","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Bisceto"},"content":"Increases the quantity of a food item in WIFE.","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"Bisceto"},"content":"Format: `inc INDEX [q/QUANTITY]`","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":200,"author":{"gitId":"Bisceto"},"content":"* Ensure you can see the whole list of food items (using `list`) before using this command!","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"Bisceto"},"content":"* Increases the quantity of the food item at the specified `INDEX`","lastModifiedDate":"2023-04-09"},{"lineNumber":202,"author":{"gitId":"Bisceto"},"content":"* The `INDEX` refers to the index number shown in the Food List","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"jnjy"},"content":"* The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"jnjy"},"content":"* If no `QUANTITY` is specified, the default `QUANTITY` to increase is 1.","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"jnjy"},"content":"* If a `QUANTITY` is specified, it **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"Bisceto"},"content":"* The final `QUANTITY` of the edited food item should be less than `1,000,000`","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"Bisceto"},"content":"`inc 1` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":212,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"Bisceto"},"content":"  Increased Food: Chocolate Milk (expires on: 06-06-2030) by 1","lastModifiedDate":"2023-04-09"},{"lineNumber":214,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"Bisceto"},"content":"![IncreaseFood](images/UG/IncreaseFood.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"Bisceto"},"content":"`inc 1 q/100` returns","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"Bisceto"},"content":"  Increased Food: Chocolate Milk (expires on: 06-06-2030) by 100","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"Bisceto"},"content":"### Decreasing the quantity of a food: `dec`","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":225,"author":{"gitId":"Bisceto"},"content":"Decreases the quantity of a food item in WIFE.","lastModifiedDate":"2023-04-06"},{"lineNumber":226,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":227,"author":{"gitId":"Bisceto"},"content":"Format: `dec INDEX [q/QUANTITY]`","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"Bisceto"},"content":"Usage is the same as `inc`, with the only difference is being to decrease the quantity of the food item.","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"jnjy"},"content":"* The `QUANTITY` specified to decrease by **cannot be equal to or greater than** the current quantity of the food item.","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"Bisceto"},"content":"If you wish to delete the item, please use the `delete` command!","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"Bisceto"},"content":"### Delete a food: `delete`","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"jnjy"},"content":"Deletes the specified food item from WIFE.","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"jnjy"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"jnjy"},"content":"* Deletes the food item at the specified `INDEX`.","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"jnjy"},"content":"* The `INDEX` refers to the index number shown in the displayed food item list.","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"jnjy"},"content":"* The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"jnjy"},"content":"Result:","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"Bisceto"},"content":"`delete 1` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":249,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"Bisceto"},"content":"Deleted Food: Chocolate Milk (expires on 06-06-2030)","lastModifiedDate":"2023-04-09"},{"lineNumber":251,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"jnjy"},"content":"![DeleteFood](images/UG/DeleteFood.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"Bisceto"},"content":"### Checking expiry of food items : `expiry`","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"Bisceto"},"content":"Sorts the food items by expiry date in ascending order (food items with a closer expiry date will appear at the top)","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"Bisceto"},"content":"and displays all food items.","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"Bisceto"},"content":"Format: `expiry`","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"Bisceto"},"content":"`expiry` returns","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"Bisceto"},"content":"```shell","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"Bisceto"},"content":"Food items are being sorted by their expiry dates.","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":269,"author":{"gitId":"rmj1405"},"content":"### View the full name of a food item : `view`","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":271,"author":{"gitId":"nigelteosw"},"content":"Displays the full name of the food item. This is useful when the food item name is too long to be displayed in the","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"nigelteosw"},"content":"food list.","lastModifiedDate":"2023-04-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"nigelteosw"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-04-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-04-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"nigelteosw"},"content":"`view 1` returns","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"nigelteosw"},"content":"```shell","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"Bisceto"},"content":"Viewed Food: Coca Cola (expires on: 01-01-2099)","lastModifiedDate":"2023-04-09"},{"lineNumber":281,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":283,"author":{"gitId":"Bisceto"},"content":"![ViewFood](images/UG/ViewFood.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":285,"author":{"gitId":"Bisceto"},"content":"## Tag-related Features","lastModifiedDate":"2023-04-06"},{"lineNumber":286,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"jnjy"},"content":"### Create a new tag: `createtag`","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":289,"author":{"gitId":"jnjy"},"content":"Creates a new pre-defined tag in WIFE.","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"Bisceto"},"content":"Format: `createtag n/TAG NAME [n/TAG NAME]...`","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":293,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"Bisceto"},"content":"* `TAG NAME` has a maximum limit of **15 characters**.","lastModifiedDate":"2023-04-06"},{"lineNumber":295,"author":{"gitId":"jnjy"},"content":"* `TAG NAME` is case-insensitive and two tags with the same name will be classified as duplicates.","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"jnjy"},"content":"* If in the case where any of the tags (but not all) already exists in WIFE, the non-duplicate tags will be created. ","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"Bisceto"},"content":"  However, if all the tags being declared already exist in WIFE, WIFE will return an error response to prevent ","lastModifiedDate":"2023-04-09"},{"lineNumber":298,"author":{"gitId":"jnjy"},"content":"  the creation of duplicate tags.","lastModifiedDate":"2023-04-07"},{"lineNumber":299,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":300,"author":{"gitId":"jnjy"},"content":"Example:","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"Bisceto"},"content":"`createtag n/Fizzy n/Soup` displays","lastModifiedDate":"2023-04-09"},{"lineNumber":302,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"jnjy"},"content":"Tag(s) successfully created:","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"Bisceto"},"content":"Fizzy","lastModifiedDate":"2023-04-09"},{"lineNumber":305,"author":{"gitId":"Bisceto"},"content":"Soup","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"Bisceto"},"content":"![CreateTag](images/UG/CreateTag.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"Bisceto"},"content":"### Tag a food item: `tag`","lastModifiedDate":"2023-04-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Bisceto"},"content":"Tag the specified food item in your fridge with an existing tag.","lastModifiedDate":"2023-04-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"Bisceto"},"content":"Pre-Defined Tags (These tags already exist when you start up the application):","lastModifiedDate":"2023-04-09"},{"lineNumber":315,"author":{"gitId":"Bisceto"},"content":"* `New`","lastModifiedDate":"2023-04-06"},{"lineNumber":316,"author":{"gitId":"Bisceto"},"content":"* `Used`","lastModifiedDate":"2023-04-06"},{"lineNumber":317,"author":{"gitId":"Bisceto"},"content":"* `Dairy`","lastModifiedDate":"2023-04-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Bisceto"},"content":"Format: `tag INDEX n/TAG NAME`","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":321,"author":{"gitId":"jnjy"},"content":"Note:","lastModifiedDate":"2023-04-07"},{"lineNumber":322,"author":{"gitId":"jnjy"},"content":"* Each food item can have a maximum of **4** tags.","lastModifiedDate":"2023-04-07"},{"lineNumber":323,"author":{"gitId":"jnjy"},"content":"* Only one tag can be tagged to a food item per command.","lastModifiedDate":"2023-04-07"},{"lineNumber":324,"author":{"gitId":"jnjy"},"content":"* `TAG NAME` must be a valid tag created in WIFE. List of tags available can easily be checked ","lastModifiedDate":"2023-04-07"},{"lineNumber":325,"author":{"gitId":"jnjy"},"content":"* using the [`listtag`](#list-all-tags-listtag) command.","lastModifiedDate":"2023-04-07"},{"lineNumber":326,"author":{"gitId":"jnjy"},"content":"* `INDEX` refers to any number on the food item list and must be a positive number, i.e., 1, 2, 3, 4, …","lastModifiedDate":"2023-04-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"jnjy"},"content":"Example: \u003cbr/\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":329,"author":{"gitId":"Bisceto"},"content":"`tag 1 n/new` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":330,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-04-09"},{"lineNumber":331,"author":{"gitId":"Bisceto"},"content":"Coca Cola successfully tagged with New","lastModifiedDate":"2023-04-09"},{"lineNumber":332,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":333,"author":{"gitId":"Bisceto"},"content":"`tag 1 n/Fizzy` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":334,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"Bisceto"},"content":"Coca Cola successfully tagged with Fizzy","lastModifiedDate":"2023-04-09"},{"lineNumber":336,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"jnjy"},"content":"![TagFood](images/UG/TagFood.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"Bisceto"},"content":"### Untag a food item: `untag`","lastModifiedDate":"2023-04-09"},{"lineNumber":341,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":342,"author":{"gitId":"rmj1405"},"content":"Remove a tag from a specified food item in your fridge.","lastModifiedDate":"2023-03-26"},{"lineNumber":343,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":344,"author":{"gitId":"Bisceto"},"content":"Format: `untag INDEX n/TAG NAME`","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"jnjy"},"content":"* Remove `TAG NAME` from the food item with index `INDEX`.","lastModifiedDate":"2023-04-07"},{"lineNumber":346,"author":{"gitId":"jnjy"},"content":"* `TAG NAME` must be an existing tag of the selected food item.","lastModifiedDate":"2023-04-07"},{"lineNumber":347,"author":{"gitId":"jnjy"},"content":"* Only one tag can be removed from a food item per command.","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"Bisceto"},"content":"* `INDEX` refers to any number on the Food List and must be a positive number, i.e., 1, 2, 3, 4, …","lastModifiedDate":"2023-04-09"},{"lineNumber":349,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":350,"author":{"gitId":"rmj1405"},"content":"Example:","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"Bisceto"},"content":"`untag 1 n/new` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"Bisceto"},"content":"New successfully untagged from Coca Cola","lastModifiedDate":"2023-04-09"},{"lineNumber":354,"author":{"gitId":"Bisceto"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"jnjy"},"content":"![UntagFood](images/UG/UntagFood.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"Bisceto"},"content":"### List all tags: `listtag`","lastModifiedDate":"2023-03-30"},{"lineNumber":359,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":360,"author":{"gitId":"Bisceto"},"content":"List all the tags that you have created, including the pre-defined tags.","lastModifiedDate":"2023-03-30"},{"lineNumber":361,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":362,"author":{"gitId":"rmj1405"},"content":"Format: `listtag`","lastModifiedDate":"2023-03-26"},{"lineNumber":363,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":364,"author":{"gitId":"rmj1405"},"content":"Example:","lastModifiedDate":"2023-03-26"},{"lineNumber":365,"author":{"gitId":"rmj1405"},"content":"`listtag` displays","lastModifiedDate":"2023-03-26"},{"lineNumber":366,"author":{"gitId":"rmj1405"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":367,"author":{"gitId":"rmj1405"},"content":"Here are your existing tags: ","lastModifiedDate":"2023-03-26"},{"lineNumber":368,"author":{"gitId":"Bisceto"},"content":"New","lastModifiedDate":"2023-04-09"},{"lineNumber":369,"author":{"gitId":"Bisceto"},"content":"Used","lastModifiedDate":"2023-04-09"},{"lineNumber":370,"author":{"gitId":"rmj1405"},"content":"Dairy","lastModifiedDate":"2023-03-26"},{"lineNumber":371,"author":{"gitId":"Bisceto"},"content":"Soup","lastModifiedDate":"2023-04-09"},{"lineNumber":372,"author":{"gitId":"Bisceto"},"content":"Fizzy","lastModifiedDate":"2023-04-09"},{"lineNumber":373,"author":{"gitId":"rmj1405"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"Bisceto"},"content":"![ListTag](images/UG/ListTag.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":376,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"Bisceto"},"content":"### Listing all foods by their tag(s) : `listbytag`","lastModifiedDate":"2023-03-30"},{"lineNumber":378,"author":{"gitId":"jnjy"},"content":"Shows a list of all food item in WIFE by specified tag(s).","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"Bisceto"},"content":"Food items that contains any tags specified in the command will be listed.","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"Bisceto"},"content":"Format: `listbytag n/TAG NAME [n/TAG NAME]...`","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"jnjy"},"content":"Example:","lastModifiedDate":"2023-03-27"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"Bisceto"},"content":"`listbytag n/Fizzy` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":386,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":387,"author":{"gitId":"Bisceto"},"content":"```markdown","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"jnjy"},"content":"Listed all food with the following tags:","lastModifiedDate":"2023-03-27"},{"lineNumber":389,"author":{"gitId":"Bisceto"},"content":"[Fizzy]","lastModifiedDate":"2023-04-09"},{"lineNumber":390,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":391,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":392,"author":{"gitId":"Bisceto"},"content":"![ListByTag](images/UG/ListByTag.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"Bisceto"},"content":"### Delete food items by their tag(s) : `delbytag`","lastModifiedDate":"2023-04-09"},{"lineNumber":395,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":396,"author":{"gitId":"Bisceto"},"content":"Delete food items from WIFE by their specified tag(s).","lastModifiedDate":"2023-03-29"},{"lineNumber":397,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":398,"author":{"gitId":"Bisceto"},"content":"Format: `delbytag n/TAG NAME [n/TAG NAME]...`","lastModifiedDate":"2023-03-29"},{"lineNumber":399,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":400,"author":{"gitId":"ScorpiusSigma"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":401,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":402,"author":{"gitId":"Bisceto"},"content":"`delbytag n/Fizzy` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":403,"author":{"gitId":"ScorpiusSigma"},"content":"```shell","lastModifiedDate":"2023-03-26"},{"lineNumber":404,"author":{"gitId":"ScorpiusSigma"},"content":"Deleted Food:","lastModifiedDate":"2023-03-26"},{"lineNumber":405,"author":{"gitId":"Bisceto"},"content":"Coca Cola (expires on: 01-01-2099)","lastModifiedDate":"2023-04-09"},{"lineNumber":406,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-26"},{"lineNumber":407,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":408,"author":{"gitId":"Bisceto"},"content":"![DelByTag](images/UG/DelByTag.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":409,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":410,"author":{"gitId":"Bisceto"},"content":"### Delete tag(s) : `deltag`","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":412,"author":{"gitId":"Bisceto"},"content":"Deletes specified tags from WIFE. This command will delete all occurrences of the specified tags that are","lastModifiedDate":"2023-04-06"},{"lineNumber":413,"author":{"gitId":"Bisceto"},"content":"tagged to food items in the Food List, if any.","lastModifiedDate":"2023-04-09"},{"lineNumber":414,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":415,"author":{"gitId":"Bisceto"},"content":"Format: `deltag n/TAG NAME [n/TAG NAME]...`","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"Bisceto"},"content":"* `TAG NAME` must match an existing tag in WIFE.","lastModifiedDate":"2023-04-06"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":420,"author":{"gitId":"Bisceto"},"content":"`deltag n/Soup n/Fizzy` returns","lastModifiedDate":"2023-04-09"},{"lineNumber":421,"author":{"gitId":"ScorpiusSigma"},"content":"```shell","lastModifiedDate":"2023-03-26"},{"lineNumber":422,"author":{"gitId":"ScorpiusSigma"},"content":"Tag successfully deleted:","lastModifiedDate":"2023-03-26"},{"lineNumber":423,"author":{"gitId":"Bisceto"},"content":"[Soup]","lastModifiedDate":"2023-04-09"},{"lineNumber":424,"author":{"gitId":"Bisceto"},"content":"[Fizzy]","lastModifiedDate":"2023-04-09"},{"lineNumber":425,"author":{"gitId":"ScorpiusSigma"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":426,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":427,"author":{"gitId":"Bisceto"},"content":"![DelTag](images/UG/DelTag.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":428,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":429,"author":{"gitId":"Bisceto"},"content":"## General Features","lastModifiedDate":"2023-04-06"},{"lineNumber":430,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":431,"author":{"gitId":"Bisceto"},"content":"### Getting help: `help`","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"Bisceto"},"content":"The dynamic `help` functionality provides general help as well as command specific help that includes command formats and example usages.","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"Bisceto"},"content":"It appears as a separate help window.","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"Bisceto"},"content":"Format: `help [COMMAND_NAME]` where `COMMAND_NAME` may be omitted to view general help","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"Bisceto"},"content":"##### List of COMMAND_NAME","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"Bisceto"},"content":"- Food Commands:","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"Bisceto"},"content":"  * add","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"Bisceto"},"content":"  * list","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"Bisceto"},"content":"  * edit","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"rmj1405"},"content":"  * view","lastModifiedDate":"2023-04-08"},{"lineNumber":444,"author":{"gitId":"Bisceto"},"content":"  * find","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"Bisceto"},"content":"  * inc","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"Bisceto"},"content":"  * dec","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"Bisceto"},"content":"  * delete","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"rmj1405"},"content":"  * expiry","lastModifiedDate":"2023-04-05"},{"lineNumber":449,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":450,"author":{"gitId":"Bisceto"},"content":"- Tag Commands:","lastModifiedDate":"2023-03-30"},{"lineNumber":451,"author":{"gitId":"Bisceto"},"content":"  * createtag","lastModifiedDate":"2023-03-30"},{"lineNumber":452,"author":{"gitId":"Bisceto"},"content":"  * tag","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"Bisceto"},"content":"  * untag","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"Bisceto"},"content":"  * listtag","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"Bisceto"},"content":"  * listbytag","lastModifiedDate":"2023-03-30"},{"lineNumber":456,"author":{"gitId":"Bisceto"},"content":"  * delbytag","lastModifiedDate":"2023-03-30"},{"lineNumber":457,"author":{"gitId":"Bisceto"},"content":"  * deltag","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"Bisceto"},"content":"- General Commands:","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"Bisceto"},"content":"  * help","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"Bisceto"},"content":"  * clear","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"Bisceto"},"content":"  * exit","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"Bisceto"},"content":"Example 1:","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"Bisceto"},"content":"`help` displays a general help message","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"Bisceto"},"content":"![Help](images/UG/Help.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":468,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"Bisceto"},"content":"Example 2:","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"Bisceto"},"content":"`help add` displays the command format and example usages specific to the `add` command","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":472,"author":{"gitId":"Bisceto"},"content":"![HelpAdd](images/UG/HelpAdd.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":473,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":474,"author":{"gitId":"Bisceto"},"content":"### Clearing WIFE : `clear`","lastModifiedDate":"2023-03-30"},{"lineNumber":475,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":476,"author":{"gitId":"Bisceto"},"content":"Clears the entire Food List (`Food` and tags included) in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-03-30"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":480,"author":{"gitId":"Bisceto"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-30"},{"lineNumber":481,"author":{"gitId":"Bisceto"},"content":"This is a destructive command! Using this command will empty all food items and tags. Be careful when using this command!","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"Bisceto"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":483,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":484,"author":{"gitId":"Bisceto"},"content":"### Exit the program : `exit`","lastModifiedDate":"2023-03-30"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"Bisceto"},"content":"Your data is automatically saved after any executed commands. But to be safe, we will suggest to always exit the application","lastModifiedDate":"2023-03-29"},{"lineNumber":493,"author":{"gitId":"Bisceto"},"content":"by the `exit` command to prevent any corruption of the file.","lastModifiedDate":"2023-04-06"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":497,"author":{"gitId":"Bisceto"},"content":"Wife data are saved as a JSON file `wife.json` in the \u0027data\u0027 folder in the directory where `wife.jar` is in. Advanced","lastModifiedDate":"2023-04-06"},{"lineNumber":498,"author":{"gitId":"Bisceto"},"content":"users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-04-06"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":500,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":501,"author":{"gitId":"Bisceto"},"content":"If your changes to the data file makes its format invalid, WIFE will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-27"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":504,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"Bisceto"},"content":"**Q**: Can I use this application with other people? \u003cbr/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":509,"author":{"gitId":"Bisceto"},"content":"**A**: As of now, WIFE does not support concurrent users. If you would like to share your WIFE Food List with another","lastModifiedDate":"2023-04-09"},{"lineNumber":510,"author":{"gitId":"Bisceto"},"content":"user, install WIFE on their computer and overwrite their data file with the data file created by WIFE in your computer.","lastModifiedDate":"2023-03-27"},{"lineNumber":511,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":512,"author":{"gitId":"Bisceto"},"content":"**Q**: Can I use WIFE on mobile devices? \u003cbr/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":513,"author":{"gitId":"Bisceto"},"content":"**A**: As of now, WIFE is designed to only run on computers and laptops due to the usage of the Command Line Interface.","lastModifiedDate":"2023-03-27"},{"lineNumber":514,"author":{"gitId":"Bisceto"},"content":"There is no support for mobile devices yet.","lastModifiedDate":"2023-03-27"},{"lineNumber":515,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":516,"author":{"gitId":"Bisceto"},"content":"**Q**: Do I need to connect to Wi-Fi to use WIFE? \u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":517,"author":{"gitId":"Bisceto"},"content":"**A**: No, you can use WIFE without a Wi-Fi connection.","lastModifiedDate":"2023-04-09"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"Bisceto"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":522,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"Bisceto"},"content":"### Food Commands","lastModifiedDate":"2023-03-29"},{"lineNumber":525,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":526,"author":{"gitId":"Bisceto"},"content":"| Feature             | Action                                   | Command Format                                              | Example                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":527,"author":{"gitId":"Bisceto"},"content":"|---------------------|------------------------------------------|-------------------------------------------------------------|-------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":528,"author":{"gitId":"rmj1405"},"content":"| Add                 | Adds a food item to the food list        | `add n/NAME u/UNIT q/QUANTITY e/EXPIRY DATE`                | `add n/Coca Cola u/Cans q/5 e/01-01-2099` |","lastModifiedDate":"2023-03-31"},{"lineNumber":529,"author":{"gitId":"Bisceto"},"content":"| List                | Lists all food items                     | `list`                                                      | `list`                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":530,"author":{"gitId":"rmj1405"},"content":"| View                | View a food item                         | `view INDEX`                                                | `view 1`                                  |","lastModifiedDate":"2023-04-08"},{"lineNumber":531,"author":{"gitId":"rmj1405"},"content":"| Edit                | Edits a food item                        | `edit INDEX [n/NAME] [u/UNIT] [q/QUANTITY] [e/EXPIRY DATE]` | `edit 1 n/Cauliflower q/20`               |","lastModifiedDate":"2023-03-31"},{"lineNumber":532,"author":{"gitId":"Bisceto"},"content":"| Find                | Finds a food item                        | `find KEYWORD [KEYWORD]...`                                 | `find Broccoli`                           |","lastModifiedDate":"2023-04-06"},{"lineNumber":533,"author":{"gitId":"Bisceto"},"content":"| Increase            | Increases the quantity of a food item    | `inc INDEX [q/QUANTITY]`                                    | `inc 1 q/100`                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":534,"author":{"gitId":"Bisceto"},"content":"| Decrease            | Decreases the quantity of a food item    | `dec INDEX [q/QUANTITY]`                                    | `dec 1 q/100`                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":535,"author":{"gitId":"Bisceto"},"content":"| Delete              | Deletes a food item                      | `delete INDEX`                                              | `delete 3`                                |","lastModifiedDate":"2023-04-06"},{"lineNumber":536,"author":{"gitId":"Bisceto"},"content":"| Sort by expiry date | List all food items by their expiry date | `expiry`                                                    | `expiry`                                  |","lastModifiedDate":"2023-04-06"},{"lineNumber":537,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":538,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":539,"author":{"gitId":"Bisceto"},"content":"### Tag Commands","lastModifiedDate":"2023-03-29"},{"lineNumber":540,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"Bisceto"},"content":"| Feature            | Action                                        | Command Format                         | Example                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":542,"author":{"gitId":"Bisceto"},"content":"|--------------------|-----------------------------------------------|----------------------------------------|------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":543,"author":{"gitId":"Bisceto"},"content":"| Create Tag         | Creates a new pre-defined tag in WIFE         | `createtag n/TAG NAME [n/TAG NAME]...` | `createtag n/Dairy`                |","lastModifiedDate":"2023-03-29"},{"lineNumber":544,"author":{"gitId":"Bisceto"},"content":"| Tag                | Tags a food item with a pre-defined tag \u003cbr/\u003e | `tag INDEX n/TAG NAME`                 | `tag 3 n/Fresh`                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":545,"author":{"gitId":"Bisceto"},"content":"| Untag              | Removes a tag from a food item                | `untag INDEX n/TAG NAME`               | `untag 3 n/Fresh`                  |  ","lastModifiedDate":"2023-04-06"},{"lineNumber":546,"author":{"gitId":"Bisceto"},"content":"| List tags          | Lists all the tags created                    | `listtag`                              | `listtag`                          |","lastModifiedDate":"2023-04-06"},{"lineNumber":547,"author":{"gitId":"Bisceto"},"content":"| List foods by tags | Lists all food items by specified tags        | `listbytag`                            | `listbytag n/Vegetables n/Healthy` |","lastModifiedDate":"2023-04-06"},{"lineNumber":548,"author":{"gitId":"Bisceto"},"content":"| Delete by tags     | Deletes food items by their tags              | `delbytag n/TAG NAME [n/TAG NAME]...`  | `delbytag n/Healthy n/Dairy`       |","lastModifiedDate":"2023-04-06"},{"lineNumber":549,"author":{"gitId":"Bisceto"},"content":"| Delete tags        | Deletes specified tags.                       | `deltag n/TAG NAME [n/TAG NAME]...`    | `deltag n/Healthy n/Dairy`         |","lastModifiedDate":"2023-04-06"},{"lineNumber":550,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":551,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":552,"author":{"gitId":"Bisceto"},"content":"### General Commands","lastModifiedDate":"2023-03-29"},{"lineNumber":553,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"Bisceto"},"content":"| Feature | Action                                                | Command Format | Example    |","lastModifiedDate":"2023-03-29"},{"lineNumber":555,"author":{"gitId":"Bisceto"},"content":"|---------|-------------------------------------------------------|----------------|------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":556,"author":{"gitId":"Bisceto"},"content":"| Help    | Shows a help message                                  | `help`         | `help add` |","lastModifiedDate":"2023-03-29"},{"lineNumber":557,"author":{"gitId":"Bisceto"},"content":"| Clear   | Resets all food items \u003cbr/\u003e(**Destructive command!**) | `clear`        | `clear`    |","lastModifiedDate":"2023-03-29"},{"lineNumber":558,"author":{"gitId":"Bisceto"},"content":"| Exit    | Exits WIFE                                            | `exit`         | `exit`     |","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":560,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":561,"author":{"gitId":"Bisceto"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":562,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":563,"author":{"gitId":"Bisceto"},"content":"## Glossary","lastModifiedDate":"2023-03-29"},{"lineNumber":564,"author":{"gitId":"Bisceto"},"content":"* **Command Terminal** The typing interface that you use in WIFE. You can open a separate command terminal on your operating","lastModifiedDate":"2023-04-07"},{"lineNumber":565,"author":{"gitId":"Bisceto"},"content":"system for installation purposes.","lastModifiedDate":"2023-04-07"},{"lineNumber":566,"author":{"gitId":"Bisceto"},"content":"* **Destructive Command:** It will wipe out all current data in WIFE.","lastModifiedDate":"2023-03-30"},{"lineNumber":567,"author":{"gitId":"Bisceto"},"content":"*  **Extraneous parameters**  Additional parameters for a command that are not needed or unnecessary.","lastModifiedDate":"2023-04-07"},{"lineNumber":568,"author":{"gitId":"Bisceto"},"content":"* **GUI:** Graphical User Interface - It is the view of the application that you see!","lastModifiedDate":"2023-04-07"},{"lineNumber":569,"author":{"gitId":"Bisceto"},"content":"* **Home Folder** The working folder that `wife.jar` is currently located in.","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jnjy":66,"nigelteosw":27,"rmj1405":25,"Bisceto":310,"-":112,"ScorpiusSigma":29}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Bisceto"},"content":"    content: \"\u003cWIFE/\u003e\";","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Bisceto":1,"-":294}},{"path":"docs/diagrams/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"participant \"f:Food\" as Food LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"[-\u003e LogicManager : execute(\"add n/Broccoli...\")","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"add n/Broccoli...\")","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"activate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"create AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"activate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"AddCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e AddCommandParser : parse(\"n/Broccoli...\")","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"activate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"create Food","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"AddCommandParser -\u003e Food","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"activate Food","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"Food --\u003e AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"deactivate Food","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"create AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"activate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"deactivate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"AddCommandParser --\u003e WifeParser : a","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"AddCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"WifeParser --\u003e LogicManager : a","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"activate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"AddCommand -\u003e Model : addFood(f)","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"deactivate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nigelteosw":77}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteFood(food)","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveWife(wife)","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"Wife *-right-\u003e \"1\" UniqueFoodList","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"Wife *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"UniqueTagList -[hidden]down- UniqueFoodList","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"UniqueTagList -[hidden]down- UniqueFoodList","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"UniqueTagList *-right-\u003e \"0..50\" Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"Tag *-right-\u003e \"1\" TagName","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"UniqueFoodList *-right-\u003e Food","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"Food *-up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"Food *--\u003e \"1\" Name","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"Food *--\u003e \"1\" Unit","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"Food *--\u003e \"1\" Quantity","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"Food *--\u003e \"1\" ExpiryDate","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":13,"-":10}},{"path":"docs/diagrams/CreateTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":":User executes `createtag` command;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"if () then ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    :Error: Invalid Command;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"([Valid command]) elseif () then ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    :Error: Invalid Tag Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"([Valid tag name]) elseif () then ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    :Error: Tag Storage Full;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"else ([Tag storage available])","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"endif","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    :createtag command executes successfully;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"jnjy":20}},{"path":"docs/diagrams/CreateTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u0027all logic entities","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"participant \":CreateTagCommandParser\" as CreateTagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"participant \":Tag\" as Tag LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"participant \":CreateTagCommand\" as CreateTagCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"\u0027model entity","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"[-\u003e LogicManager : execute(\"createtag n/tagname\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"createtag n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"activate WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"create CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"WifeParser -\u003e CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"activate CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"CreateTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"deactivate CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"WifeParser -\u003e CreateTagCommandParser :parse(\"n/tagname\")","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"activate CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"create Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"CreateTagCommandParser -\u003e Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"activate Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"Tag --\u003e CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"deactivate Tag","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"create CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"CreateTagCommandParser -\u003e CreateTagCommand : CreateTagCommand(tag)","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"activate CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"CreateTagCommand --\u003e CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"deactivate CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"CreateTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"deactivate CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"CreateTagCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"destroy CreateTagCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"WifeParser --\u003e LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"deactivate WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"LogicManager -\u003e CreateTagCommand : execute(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"activate CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"CreateTagCommand -\u003e Model : addTag(toCreate)","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"Model --\u003e CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"CreateTagCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"CommandResult --\u003e CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"CreateTagCommand --\u003e LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"deactivate CreateTagCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"jnjy":80}},{"path":"docs/diagrams/DeleteByTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":":User executes `delbytag` command;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"if () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Command;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid command]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Tag Name;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid tag name]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Tag Does Not Exist;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"else ([Tag exist])","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"    :delbytag command executes successfully;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":20}},{"path":"docs/diagrams/DeleteByTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027all logic entities","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":DeleteByTagCommandParser\" as DeleteByTagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":DeleteByTagCommand\" as DeleteByTagCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027model entity","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"[-\u003e LogicManager : execute(\"delbytag n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"activate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"create DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteByTagCommandParser :parse(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"create DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommandParser -\u003e DeleteByTagCommand : DeleteByTagCommand(tag)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommand --\u003e DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"destroy DeleteByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e DeleteByTagCommand : execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommand -\u003e Model : deletefood()","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"Model --\u003e DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"CommandResult --\u003e DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteByTagCommand --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":72}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"activate WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteCommandParser --\u003e WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteCommandParser --\u003e WifeParser : d","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate WifeParser","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteCommand -\u003e Model : deleteFood(1)","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"ScorpiusSigma":11}},{"path":"docs/diagrams/DeleteTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":":User executes `deltag` command;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"if () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Command;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid command]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Tag Name;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid tag name]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Tag Does Not Exist;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"else ([Tag exist])","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"    :deltag command executes successfully;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":20}},{"path":"docs/diagrams/DeleteTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027all logic entities","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":DeleteTagCommandParser\" as DeleteTagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":DeleteTagCommand\" as DeleteTagCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027model entity","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"[-\u003e LogicManager : execute(\"deltag n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"activate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"create DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e DeleteTagCommandParser :parse(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"create DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommandParser -\u003e DeleteTagCommand : DeleteTagCommand(tag)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommand --\u003e DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"destroy DeleteTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e DeleteTagCommand : execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"activate DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommand -\u003e Model : deleteTag(toDelete)","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"Model --\u003e DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"CommandResult --\u003e DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"DeleteTagCommand --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate DeleteTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":72}},{"path":"docs/diagrams/EditCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"participant \"ef:EditFoodDescriptor\" as EditFoodDescriptor LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/Broccoli q/10\")","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"edit 1 n/Broccoli q/10\")","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"activate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"create EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"activate EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"create EditFoodDescriptor","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"EditCommandParser -\u003e EditFoodDescriptor","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"activate EditFoodDescriptor","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"EditFoodDescriptor --\u003e EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"deactivate EditFoodDescriptor","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"EditCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e EditCommandParser : parse(\"1\", ef)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"activate EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"create EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"activate EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"deactivate EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"EditCommandParser --\u003e WifeParser : e","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"EditCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"WifeParser --\u003e LogicManager : e","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"activate EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"EditCommand -\u003e Model : setFood(f, ef)","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"deactivate EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nigelteosw":78}},{"path":"docs/diagrams/IncreaseQuantityActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":":User executes `inc` command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"if () then ([Valid index specified])","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    if () then ([Quantity not specified])","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"        :WIFE increases quantity by 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"        stop;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"        if () then ([Valid quantity specified])","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"            :WIFE increases quantity by specified quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"            :WIFE returns error message;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"            stop","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        endif","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    endif","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    :WIFE returns error message;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    stop;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jnjy":1,"Bisceto":24}},{"path":"docs/diagrams/IncreaseQuantitySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"participant \":IncreaseCommandParser\" as IncreaseCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"participant \"inc:IncreaseCommand\" as IncreaseCommand LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"[-\u003e LogicManager : execute(\"inc 1 q/10\")","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"activate LogicManager","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"inc 1 q/10\")","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"activate WifeParser","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"create IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"WifeParser -\u003e IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"activate IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"IncreaseCommandParser --\u003e WifeParser","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"deactivate IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"WifeParser -\u003e IncreaseCommandParser : parse(\"1 q/10\")","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"activate IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"create IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"IncreaseCommandParser -\u003e IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"activate IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"IncreaseCommand --\u003e IncreaseCommandParser : inc","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"deactivate IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"IncreaseCommandParser --\u003e WifeParser : inc","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"deactivate IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"IncreaseCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"destroy IncreaseCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"WifeParser --\u003e LogicManager : inc","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"deactivate WifeParser","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"LogicManager -\u003e IncreaseCommand : execute()","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"activate IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"IncreaseCommand -\u003e Model : increaseFood(1, 10)","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"activate Model","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"Model --\u003e IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"deactivate Model","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"create CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"IncreaseCommand -\u003e CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"activate CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"CommandResult --\u003e IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"IncreaseCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"deactivate IncreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"@enduml","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Bisceto":70}},{"path":"docs/diagrams/ListByTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":":User executes `listbytag` command;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"if () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Command;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid command]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Invalid Tag Name;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"([Valid tag name]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"    :Error: Tag Does Not Exist;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"else ([Tag exist])","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"    :listbytag command executes successfully;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":20}},{"path":"docs/diagrams/ListByTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027all logic entities","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":ListByTagCommandParser\" as ListByTagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":ListByTagCommand\" as ListByTagCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"\u0027model entity","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"[-\u003e LogicManager : execute(\"listbytag n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"activate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"create ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"activate ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser -\u003e ListByTagCommandParser :parse(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"activate ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"create ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommandParser -\u003e ListByTagCommand : ListByTagCommand(tag)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"activate ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommand --\u003e ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"destroy ListByTagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"WifeParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"LogicManager -\u003e ListByTagCommand : execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"activate ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommand -\u003e Model : updateFilteredFoodList()","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"Model --\u003e ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"CommandResult --\u003e ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"ListByTagCommand --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate ListByTagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ScorpiusSigma":72}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"Class WifeParser","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"LogicManager -right-\u003e\"1\" WifeParser","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"WifeParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyWife\" as ReadOnlyWife","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"Class Wife","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"Class UniqueFoodList","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"class UniqueTagList","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"Class Food","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"class Name","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"Class Unit","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"Class Quantity","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"Class ExpiryDate","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"class TagName","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"Wife .up.|\u003e ReadOnlyWife","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"Model .left.\u003e ReadOnlyWife","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"ModelManager -left-\u003e \"1\" Wife","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"Wife *--\u003e \"1\" UniqueFoodList","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"Wife *--\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"UniqueFoodList --\u003e \"~* all\" Food","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"UniqueTagList --\u003e \"~* all\" Tag","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"Food *--\u003e Name","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"Food *--\u003e Unit","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"Food *--\u003e Quantity","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"Food *--\u003e ExpiryDate","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"Food *--\u003e \"*\" Tag","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"Tag *--\u003e TagName","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"Name -[hidden]right-\u003e Unit","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"Unit -[hidden]right-\u003e Quantity","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"Quantity -[hidden]right-\u003e ExpiryDate","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"ModelManager --\u003e\"~* filtered\" Food","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"ModelManager --\u003e\"~* filtered\" Tag","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":28,"-":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"Class WifeParser","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"HiddenOutside ..\u003e WifeParser","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"WifeParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"WifeParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"jnjy":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"package \"Wife Storage\" #F4F6F6{","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nWifeStorage\" as WifeStorage","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"Class JsonWifeStorage","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"Class JsonSerializableWife","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"Class JsonAdaptedFood","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"StorageManager -up-\u003e \"1\" WifeStorage","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"Storage -right-|\u003e WifeStorage","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"JsonWifeStorage .up.|\u003e WifeStorage","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"JsonWifeStorage ..\u003e JsonSerializableWife","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"JsonSerializableWife --\u003e \"*\" JsonAdaptedFood","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"JsonSerializableWife --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"JsonAdaptedFood --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":12,"-":32}},{"path":"docs/diagrams/TagFoodActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":":User executes tag command;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"if () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    :Error: Invalid Command Format;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"([Index and TagName Provided]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    :Error: Invalid Index;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"([Valid Index]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    :Error: Tag does not exist in WIFE;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"([Tag Exists in WIFE]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    :Error: Tag limits reached for Food;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"([Tag limit not reached for Food]) elseif () then ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    :Error: Food already tagged with the Tag;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    stop;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"else ([Food not tagged with Tag])","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    :tag command executes successfully","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    and food tagged with specified Tag;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jnjy":27}},{"path":"docs/diagrams/TagFoodSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u0027all logic entities","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"participant \":Food\" as Food LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"\u0027model entity","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"[-\u003e LogicManager : execute(\"createtag n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"activate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"create TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"WifeParser -\u003e TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"activate TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"TagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"WifeParser -\u003e TagCommandParser :parse(\"n/tagname\")","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"activate TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"create TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"TagCommandParser -\u003e TagCommand : TagCommand(tag)","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"activate TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"TagCommand --\u003e TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"deactivate TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"TagCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"TagCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"destroy TagCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"WifeParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"LogicManager -\u003e TagCommand : execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"activate TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"create Food","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"TagCommand -\u003e Food : createNewFoodWithNewTags(foodToTag, foodTags)","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"activate Food","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"Food --\u003e TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"deactivate Food","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"TagCommand -\u003e Model : setFood(foodToTag, editedFood)","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"CommandResult --\u003e TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"TagCommand --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"deactivate TagCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jnjy":80}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"Class FoodListPanel","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"Class FoodCard","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"MainWindow *-down-\u003e \"1\" FoodListPanel","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"FoodListPanel -down-\u003e \"*\" FoodCard","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"FoodListPanel --|\u003e UiPart","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"FoodCard --|\u003e UiPart","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"FoodCard ..\u003e Model","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"FoodListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jnjy":8,"-":52}},{"path":"docs/diagrams/UntagFoodActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"start","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":":User executes untag command;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"if () then ([Invalid Format])","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    :Error: Invalid Command Format;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    stop;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"([Index and TagName Provided]) elseif () then ([Invalid Index])","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    :Error: Invalid Index;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    stop;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"([Valid Index]) elseif () then ([Nonexistent Tag Name])","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    :Error: Tag does not exist in WIFE;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    stop;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"endif","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    :Untag command executes successfully","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"and specified Tag is removed from food;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"stop","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"rmj1405":21}},{"path":"docs/diagrams/ViewCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"participant \":WifeParser\" as WifeParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e WifeParser : parseCommand(\"view 1\")","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"activate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"create ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"ViewCommandParser --\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"WifeParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"create ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"activate ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"ViewCommandParser --\u003e WifeParser : v","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"ViewCommandParser -[hidden]-\u003e WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"WifeParser --\u003e LogicManager : v","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"deactivate WifeParser","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"activate ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"ViewCommand -\u003e Model : viewFood(1)","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nigelteosw":69}},{"path":"docs/diagrams/wife/HelpCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":":User keys in help command;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"if () then ([command specified])","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    if () then ([command is valid])","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"        :Display command specific help message;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"        stop","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    else ([[command is invalid])","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"        :Display command does not exist message","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"        with general help message;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        stop","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    endif","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"else ([command not specified])","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    :Help window displays general help","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    message;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    stop","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"rmj1405":22}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"title: Well Informed Fridge Environment \u003cWIFE/\u003e;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-1/tp/branch/master/graph/badge.svg?token\u003dIG8S2ONSIE)](https://codecov.io/gh/AY2223S2-CS2103T-T11-1/tp)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"![Ui](images/UG/Ui_updated.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"Enhance life with WIFE! Our product **Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt;** helps users to **manage their","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"items** in the fridge. With this, one never has to worry about **optimizing storage** and **organisation of food items** in their","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"refrigerator!","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"* If you are interested in using WIFE, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"* If you are interested about developing WIFE, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"Java dependencies:","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"* [Jackson](https://github.com/FasterXML/jackson) for JSON-related operations","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"* [JavaFX](https://openjfx.io/) for GUI","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"* [JUnit 5](https://github.com/junit-team/junit5) for testing","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"Documentation dependencies:","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"* [Jekyll](https://jekyllrb.com/) for conversion of .md files to .html files for rendering of website","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"* [PlantUML](https://plantuml.com/) for UML diagrams","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jnjy":2,"Bisceto":14,"-":11,"ScorpiusSigma":1}},{"path":"docs/team/bisceto.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"title: Teo Yu Xiang Wesley\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"### Project: Well Informed Fridge Environment (WIFE)","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt; helps users to manage their ","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"items in the fridge. With this, one never has to worry about optimizing storage and organisation of food items in their","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"refrigerator!","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"* **New Feature**: Added the ability to increase/decrease the quantity of a food item.","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    - What it does: It allows the user to increase or decrease the quantity of a food item by a specific quantity. If no","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"quantity is specified, it will increase/decrease the quantity of the specified food item by 1.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    - Justification: This feature provides a shorthand command for users to change the quantity of a food item.","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"Originally, if a user wishes to change the quantity, they would use the edit command to update the new quantity.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"However in reality, this may not be convenient as users will have to calculate the new end quantity of a food item.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"In addition, most of the time they only wish to change the quantity by 1. This command eases convenience for users by simply","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"stating the quantity they wish to increase/decrease by.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    - Difficulty: The nature of this command is similar to the edit command, with the difference being that this command only considers the ","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"`Quantity` of a `Food`, thus its implementation was relatively similar as well. However, additional checks and test cases were written e.g.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"ensuring that the value to decrease by was not greater than the current `Quantity`.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"* **Enhancements to existing features**: Finding a food item by its name.","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    - What it does: Originally, the find feature implemented by AB3 needed the name of a person to match the keyword exactly.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"      Now, the name of the food item just needs to contain the keyword for it to appear in the filtered list.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    - Justification: The need for the name of the food item to exactly match the keyword inputted by the user is too restrictive.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"      The user may not remember the exact name or spelling of the food item that they are looking for, thus editing the feature for","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"      the name to simply contain the keyword is more flexible and user-friendly, enhancing the user experience.","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djnjy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"* **Project management**:","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"    * Managed documentation formatting and content structure for WIFE, including the User Guide and Developer Guide.","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    * Reviewed all PRs that involved editing of UG and DG e.g. diagrams and feature implementations.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"    * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"        * Added documentation for the features `inc` and `dec` [[PR#175]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/175)","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        * Added table of contents and command summary [[PR#186]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/186)","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"        * Fixed UG issues from PE-D [[PR#280]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/280)","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        * ","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        * Finalised formatting issues and structure of UG","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"      * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        * Added documentation for non-functional requirements (NFR)","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        * Added use case when user wants to view help","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        * Added documentation for user stories","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        * Added implementation details and diagrams for features `inc` and `dec` [[PR#171]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/171)","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"        * Added documentation for manual testing [[PR#297]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/297)","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"        * Finalised formatting issues and structure of DG","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"-   **Testing**:","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"    -   Added tests for `IncreaseCommand` and `IncreaseCommandParser` [[PR#160]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/160) [[PR#290]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/290)","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"    -   Added tests for `DecreaseCommand` and `DecreaseCommandParser` [[PR#290]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/290)","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"    -   Edited tests for `Find` [[PR#278]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/278)","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"    * PRs reviewed: [[PR#38]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/38) [[PR#43]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/43)","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"[[PR#56]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/56) [[PR#61]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/61)","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"[[PR#62]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/62) [[PR#63]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/63)","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"[[PR#64]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/64) [[PR#160]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/160)","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"[[PR#161]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/161) [[PR#163]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/163)","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"[[PR#164]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/164) [[PR#166]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/166)","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"[[PR#168]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/168) [[PR#171]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/171)","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"[[PR#172]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/172) [[PR#174]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/174)","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"[[PR#180]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/180) [[PR#188]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/188) ","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"[[PR#279]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/279) [[PR#282]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/282) ","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"[[PR#283]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/283) [[PR#284]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/284)","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"[[PR#285]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/285) [[PR#286]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/286)","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"[[PR#292]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/292) [[PR#294]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/294)","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"[[PR#295]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/295) [[PR#296]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/296)","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"[[PR#298]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/298) [[PR#301]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/301)","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"Bisceto"},"content":"[[PR#302]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/302) [[PR#303]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/303) ","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"Bisceto"},"content":"[[PR#304]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/304)","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"Bisceto":92}},{"path":"docs/team/jnjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"title: Ng Jin Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"### Project: Well Informed Fridge Environment (WIFE)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u003cWIFE/\u003e helps users to manage their items in the ","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"fridge. With this, one never has to worry about optimizing storage and organisation of food items in their refrigerator!","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"* **New Feature**: Added the ability to create new tag.","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"  * What it does: Allow user to create their unique pre-defined tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    * Justification: This feature improves the product significantly because a user can create a unique tag that the","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"      user wish to use for classification of the food item that the user owns in the fridge.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"  * Highlights: This feature is useful when the user wish to tag food of a certain categories of tag the food to the","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    user\u0027s name.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"* **New Feature**: Added the ability to list all the created tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"  * What it does: Displays to the user the list of tags that had been created in WIFE.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"  * Justification: This feature improves the product significantly because a user can conveniently list","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"  all the tags that had been created in the system for easier reference. This allows the user to easily","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"  select the tags that user wish to tag their food item with.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"  * Highlights: This feature is useful when the user wish to tag food or filter out food based on the tags","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"  available.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"* **New Feature**: Added the ability to add tags to the food items.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"  * What it does: Allows the user to add valid tags to any valid food item in WIFE that they wish to categorise.","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"  * Justification: This feature improves the product significantly because a user can conveniently classify","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    the food item based on the food\u0027s unique characteristic. It also allows for easier search of the food item","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    based on the tags allocated for the food item.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"  * Highlights: This enhancement allows for easier classification of food item in the fridge and will ease the filtering","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    of the food item in the fridge.","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djnjy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"  * Created Bugs Tracker Project Board to track software bugs on GitHub [Link](https://github.com/orgs/AY2223S2-CS2103T-T11-1/projects/6/views/1?layout\u003dboard)","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"  * Managed releases `v1.3(trial)` and `v1.3.2` on GitHub","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"* **Testing**:","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"  * Added test for `TagFoodCommand` and `TagFoodCommandParser` (Pull Request [#129](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/129))","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"  * StringUtil: Added Capitalize word function to capitalize first letter of each word to standardize naming display ()","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    * Added documentation for the features `tags`, `add` and `update` [link](https://docs.google.com/document/d/1MQun8t0bxWSTK7mvMVGaFhbeXMVMyw60-daNUtj52Lw/edit?usp\u003dsharing)","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    * Added documentation for `createtag` command (Pull Request [#172](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/172))","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    ","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    * Updated the UML diagram from AddressBook to Wife [#286](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/286)","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    * Added implementation details for `createtag` feature (Pull Request [#125](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/125))","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    * Added implementation details for `add`, `edit` and `tag` feature","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    * Added further enhancement on `Unit` for `Food` in WIFE.","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    ","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"  * PRs reviewed and merged (only the most recent PRs are shown):","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    - [[#130]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/130)","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    [[#142]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/142)","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    [[#148]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/148)","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    [[#155]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/155)","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    [[#158]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/158)","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    [[#159]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/159)","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    [[#165]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/165)","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"    [[#169]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/169)","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    [[#170]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/170)","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    [[#175]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/175)","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"    [[#176]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/176)","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    [[#177]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/177)","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"    [[#178]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/178)","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"    [[#179]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/179)","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"    [[#186]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/186)","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    [[#189]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/189)","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"    [[#192]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/192)","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"    [[#195]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/195)","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    [[#196]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/196)","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"    [[#278]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/278)","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    [[#280]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/280)","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    [[#287]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/287)","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    [[#291]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/291)","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    [[#293]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/293)","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    [[#295]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/295)","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"    [[#297]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/297)","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    [[#299]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/299)","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"    [[#305]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/305)","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"  * Integrated a GitHub plugin (CodeCov) to the team repo.","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"  ","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"* **Additional Contribution**:","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"  * Refactored `AddressBook` to `Wife` [[#74]](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/74)","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"jnjy":114}},{"path":"docs/team/nigelteosw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"title: Teo Shao Wei, Nigel\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"### Project: Well Informed Fridge Environment (WIFE) Level 3","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt; helps users to manage their ","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"items in the fridge. With this, one never has to worry about optimizing storage and organization of food items in their ","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"refrigerator!","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"* **New Feature**: Added the ability to add foods.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    * What it does: allows the user to add their a food item to the fridge. ","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    * One important note: Initially, this feature does not allow users to add tags to new food items. This is because we want to encourage users to utilize pre-existing tags, which are consistent and standardized.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    * Justification: The decision to use pre-existing tags was based on best practices in user interface design. By limiting the number of tags that users can create, we ensure that the tags are more consistent and easy to understand. Additionally, pre-existing tags can make it easier for users to search and filter their fridge contents.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"* **New Feature**: Improved User Interface (UI) for displaying fridge contents","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    * What it does:  Enables users to easily view the contents of their fridge and feedback provided.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    * Justification: Our group has updated the GUI to make it more user-friendly. We have achieved this by making the display brighter and reducing sharp edges that can strain the eyes.","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    * Highlights: Implementing these changes was challenging as it required a deep understanding of the interplay between various elements of the UI, such as the fxml files and css. The updated fxml files had to look good together and be consistent with the new design while still functioning correctly. The css had to be updated to fit the new display, ensuring that the overall design was cohesive and visually appealing.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"* **New Feature**: Added the ability to view foods.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    * What it does: allows the user to view their food items in the fridge.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    * Justification: This feature allows users to view their food items in the fridge. This is useful as it allows users to get a better overview of a specific item in the fridge.","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    * Highlights: This feature was challenging to implement","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"* **Feature Not Implemented in Final Product**: Dynamic panel display feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    * What it does: This feature would have allowed users to view different panels, such as the fridge, statistics, and details of a specific food item, in a single display port.","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    * Justification: The goal of this feature was to make the product more flexible and adaptable to future iterations that might require additional views or information to be displayed on the same screen.","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    * Highlights: Developing this feature would have been challenging as it required a deep understanding of the JavaFX framework and its ability to parse commands and update the view. It also required a clear understanding of the interaction between the view and the model.","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    * Rationale for rejection: While this feature had the potential to add significant value to the product, it was not implemented in the final version due to constraints on resources and time. The team decided that the current UI was sufficient for the initial release, and prioritized other features that were more critical for the first iteration. However, this feature could be revisited in future releases or updates when there is more time and resources available to test and implement it properly. [Link to pull request](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/190)","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"    ","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnigelteosw\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dnigelteosw\u0026tabRepo\u003dAY2223S2-CS2103T-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        * Added documentation for the features `add` and `view` ","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        * Added documentation for user stories and use cases for the features `add`","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    * PRs reviewed: [[#39]] [[#62]] [[#83]] [[#132]] [[#139]] [[#148]] [[#181]]","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nigelteosw":47}},{"path":"docs/team/rmj1405.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"title: Ritika\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"### Project: Well Informed Fridge Environment (WIFE)","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u003cWIFE/\u003e helps users to manage their food items in the fridge. With this, one never has to worry about optimizing storage and the organization of food items in their refrigerator.","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"* **New Feature**: Added the ability to receive command specific help through the dynamic help command.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    * What it does: Users can receive help for each command by simply typing `help COMMAND`. For instance `help add` will display a brief description and format of the add command.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    * Justification: Users can receive quick and easy help within the application without having to search for the command in the User Guide. This enhances user experience and satisfaction by making access to help as convenient as possible.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"  ","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"* **New Feature**: Added an untag command that allows the user to remove a tag from a food item.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"  * What it does: Removes the tag with a given name from the food item listed at a specific index. For instance, `untag 1 n/dairy` removes the dairy tag from item 1.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"  * Justification: This is a pair feature to tagging a food item to ensure CRUD capabilities for the food tags.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"* **User Interface(UI)**: Designed UI mockup in Figma and styled application UI with JavaFX","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"  * Touched up overall application layout","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"  * Edited colours and restyled food item components and tags","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"  * Restyled help display","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"  * Enabled event handler for Enter button","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"  ","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003drmj1405\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003drmj1405\u0026tabRepo\u003dAY2223S2-CS2103T-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"* **Project management**:","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    * In charge of meeting minutes, team ticket board and ensured team was keeping up with deadlines.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"* **Testing**:","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    -   Added test for `HelpMenu` and `HelpCommandParser` (Pull Request [\\#126](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/126))","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"    -   Added test for `UntagFoodCommand` and `UntagFoodCommandParser` (Pull Request [\\#159](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/159))","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"        * Added documentation for the features `untag` and `help`","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"          (Pull Request [\\#124](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/124))","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        * Added documentation for the features `untag` and `help`","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"          (Pull Request [\\#164](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/164))","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"  -   PRs reviewed","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"      -   [\\#41](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/41)","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"      -   [\\#132](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/132)","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"      -   [\\#173](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/173)","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"      -   [\\#180](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/180)","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"      -   [\\#288](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/288)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"rmj1405":65}},{"path":"docs/team/scorpiussigma.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"title: Leng Wei Cong, Justin\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"### Project: Well Informed Fridge Environment (WIFE)","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"Enhance life with WIFE! Our product Well Informed Fridge Environment \u0026lt;WIFE/\u0026gt; helps users to manage their food items in the fridge. With this, one never have to worry about optimizing storage and organization of food items in their refrigerator","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"-   **New Feature**: Modify create tag to take in multiple tag names.","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"    -   What it does: allows the user to create multiple tags with 1 command line.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Justification: This feature improves the product significantly because the user will now be able to create multiple tags with one command line without having to type `createtag` multiple times.","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"-   **New Feature**: Added the ability to list food list by specified tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    -   What it does: allows the user to list food by specified tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Justification: This feature improves the product significantly because the user will now be able to focus on food they are interested in. This way if the user were to tag their food with their name, they can easily list food by their name to give them a personalised experience in managing their food even in communal living.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"-   **New Feature**: Added the ability to Delete food list by specified tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"    -   What it does: allows the user to delete food by specified tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Justification: This feature improves the product significantly because the user will now be able to delete multiple food based on their tag. This way if the user were to remove food from the fridge with a specific tag, the user can easily delete all of them at once with the tag.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"        Highlights: This enhancement affects commands to be added in future. This feature will be useful for future feature where WIFE will automatically tag food that are expired with an \"expired\" tag. With this feature, user can easily delete all food by the expired tag.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"-   **New Feature**: Added the ability to Delete specified tag.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    -   What it does: allows the user to delete specified tags in the WIFE.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Justification: This feature improves the product significantly because the user will now be able to remove all specifieds tags in the WIFE and all occurrences of the food items in the food list.","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dscorpiussigma\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dScorpiusSigma\u0026tabRepo\u003dAY2223S2-CS2103T-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~other~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Project management**:","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Managed the merging of PR to `staging` branch and subsequently `staging` to `master` branch.","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Managed releases `v1.3.1` on GitHub","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Testing**:","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Added test for `ListByTagCommand` and `ListByTagCommandParser` (Pull Request [\\#155](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/155))","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Added test for `DeleteByTagCommand` and `DeleteByTagCommandParser` (Pull Request [\\#156](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/156))","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Added test for `DeleteTagCommand` and `DeleteTagCommandParser` (Pull Request [\\#158](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/158))","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Documentation**:","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"    -   User Guide:","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Added documentation for the features `listbytag`, `delbytag` and `deltag` (Pull Request [\\#168](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/168))","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Developer Guide:","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"        -   Added documentation for the features `listbytag`, `delbytag` and `deltag` (Pull Request [\\#174](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/174))","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Community**:","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"    -   PRs reviewed","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#193](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/193)","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#191](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/191)","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#185](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/185)","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#183](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/183)","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#171](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/171)","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#162](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/162)","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#153](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/153)","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#139](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/139)","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#138](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/138)","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#134](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/134)","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#129](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/129)","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#125](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/125)","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#118](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/118)","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#106](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/106)","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#98](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/98)","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#89](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/89)","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#85](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/85)","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#74](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/74)","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#68](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/68)","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#67](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/67)","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#66](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/66)","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#60](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/60)","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"ScorpiusSigma"},"content":"        -   [\\#41](https://github.com/AY2223S2-CS2103T-T11-1/tp/pull/41)","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"-   **Additional Contribution:**","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"ScorpiusSigma"},"content":"    -   Edit Storage workflow to read and write `Tag` on top of `Food`.","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ScorpiusSigma":91}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"Create a `RemarkCommandParser` class in the `seedu.wife.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"jnjy"},"content":"Create a new `Remark` in `seedu.wife.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"jnjy"},"content":"Simply add the following to [`seedu.wife.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jnjy":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"The `address` field in `Person` is actually an instance of the `seedu.wife.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jnjy":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.wife.logic.Logic`.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"A quick look at the `seedu.wife.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jnjy":2,"-":299}},{"path":"src/main/java/seedu/wife/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.FileUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"jnjy":3,"-":61}},{"path":"src/main/java/seedu/wife/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"jnjy":1,"-":24}},{"path":"src/main/java/seedu/wife/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Version;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.LogicManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.JsonWifeStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.StorageManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.WifeStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"import seedu.wife.ui.Ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"import seedu.wife.ui.UiManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing WIFE ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        WifeStorage wifeStorage \u003d new JsonWifeStorage(userPrefs.getWifeFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        storage \u003d new StorageManager(wifeStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s WIFE and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"     * The data from the sample WIFE will be used instead if {@code storage}\u0027s WIFE is not found,","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"     * or an empty WIFE will be used instead if errors occur when reading {@code storage}\u0027s WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        Optional\u003cReadOnlyWife\u003e wifeOptional;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        ReadOnlyWife initialData;","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"            wifeOptional \u003d storage.readWife();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"            if (!wifeOptional.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"                logger.info(\"Data file not found. Will be starting with a sample inventory\");","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"            initialData \u003d wifeOptional.orElseGet(SampleDataUtil::getSampleWife);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty inventory\");","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"            initialData \u003d new Wife();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty inventory\");","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"            initialData \u003d new Wife();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty inventory\");","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"        logger.info(\"Starting WIFE \" + MainApp.VERSION);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"jnjy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping WIFE ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":43,"-":140}},{"path":"src/main/java/seedu/wife/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":62}},{"path":"src/main/java/seedu/wife/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":78}},{"path":"src/main/java/seedu/wife/commons/core/HelpMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":" * Menu of commands to be displayed in Help Window.","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":" *","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Dynamic help functionality inspired by AY2223 S1 Team W16-2","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * however, the idea of using Enums is my own as I had implemented","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * this feature in my iP as well.","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"public enum HelpMenu {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    INVALID(\"invalid\") {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"            return INVALID_MESSAGE + \" \" + getGeneralHelp();","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    ADD(\"add\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"            return \"Add food item - add n/NAME u/UNIT q/QUANTITY e/EXPIRY DATE\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    EDIT(\"edit\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"            return \"Edit a food item - edit INDEX [n/NAME] [u/UNIT] [q/QUANTITY] [e/EXPIRY DATE]\"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"                    + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    DECREMENT(\"dec\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"            return \"Decrease qty of item - dec INDEX [q/QUANTITY]\" + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    INCREMENT(\"inc\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            return \"Increase qty of item - inc INDEX [q/QUANTITY]\" + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    DELETE(\"delete\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"            return \"Delete food item - delete INDEX\";","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    FIND(\"find\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"            return \"Find one or more food items - find KEYWORD [KEYWORD]...\" + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"    LIST(\"list\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"            return \"Lists all food items - list\";","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"    SORTBYEXPIRY(\"expiry\") {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"            return \"Sort food items by expiry date - expiry\";","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"    VIEW(\"view\") {","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"        @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"            return \"View food item - view INDEX\";","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"    },","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"    TAG(\"tag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"            return \"Tag a food item - tag INDEX n/TAG NAME\";","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"    UNTAGTAG(\"untag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"            return \"Remove a tag from a food item - untag INDEX n/TAG NAME\";","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"    DELETEBYTAG(\"delbytag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"            return \"Deletes food items containing the specified tag(s) - delbytag n/TAG NAME [n/TAG NAME]...\"","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"                    + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"    LISTBYTAG(\"listbytag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"            return \"Lists food items containing the specified tag(s) - listbytag n/TAG NAME [n/TAG NAME]...\"","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"                    + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"    CREATETAG(\"createtag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"            return \"Create new tag(s) - createtag n/TAG NAME [n/TAG NAME]...\" + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"rmj1405"},"content":"    DELETETAG(\"deltag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"rmj1405"},"content":"            return \"Delete tag(s) - deltag n/TAG NAME [n/TAG NAME]...\" + OPTIONAL_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"rmj1405"},"content":"    LISTTAG(\"listtag\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"rmj1405"},"content":"            return \"List all tags - listtag\";","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"rmj1405"},"content":"    CLEAR(\"clear\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"rmj1405"},"content":"            return \"Clears all food item AND tags - clear\";","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"rmj1405"},"content":"    HELP(\"help\") {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"rmj1405"},"content":"            return getGeneralHelp();","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"rmj1405"},"content":"    },","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"rmj1405"},"content":"    EXIT(\"exit\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"rmj1405"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"rmj1405"},"content":"        public String getCommandUsage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"rmj1405"},"content":"            return \"Exits WIFE - exit\";","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"rmj1405"},"content":"    };","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"rmj1405"},"content":"    private static final String COMMANDS_AVAILABLE \u003d \"Commands Available: \";","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"rmj1405"},"content":"    private static final String INVALID_MESSAGE \u003d \"Command does not exist!\";","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"rmj1405"},"content":"    private static final String OPTIONAL_MESSAGE \u003d \"\\nParameters in brackets are optional.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"rmj1405"},"content":"    private static final String MORE_INFO_MESSAGE \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"rmj1405"},"content":"            \"Type \u0027help COMMAND\u0027 to see specific help for a command.\";","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"rmj1405"},"content":"    private final String command;","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"rmj1405"},"content":"     * Creates a new HelpMenu object.","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"rmj1405"},"content":"     * @param command type of the command","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"rmj1405"},"content":"    HelpMenu(String command) {","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"rmj1405"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"rmj1405"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"rmj1405"},"content":"        return command;","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"rmj1405"},"content":"     * Retrieves all enums as a String created in displayHelpMenu.","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"rmj1405"},"content":"     * @return String of the general help message","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"rmj1405"},"content":"    public static String getGeneralHelp() {","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"rmj1405"},"content":"        return displayHelpMenu();","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"rmj1405"},"content":"     * Retrieves help message of a given input command.","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"rmj1405"},"content":"     * @param helpCommand the input command","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"rmj1405"},"content":"     * @return String of the command\u0027s specific message","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"rmj1405"},"content":"    public static String getCommandHelp(HelpMenu helpCommand) {","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"rmj1405"},"content":"        return helpCommand.getCommandUsage();","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"rmj1405"},"content":"    public abstract String getCommandUsage();","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"rmj1405"},"content":"     * Checks if an input command is a valid command.","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"rmj1405"},"content":"     * Reused from https://github.com/AY2223S1-CS2103T-W16-2/tp/blob/master/src/main","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"rmj1405"},"content":"     * /java/seedu/foodrem/commons/enums/CommandType.java","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"rmj1405"},"content":"     * @author rmj1405 -reused","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"rmj1405"},"content":"     * @param commandToParse the input command to check","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"rmj1405"},"content":"     * @return the command as an enum if it is valid","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"rmj1405"},"content":"     *      otherwise the INVALID command","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"rmj1405"},"content":"    public static HelpMenu parseCommand(String commandToParse) {","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"rmj1405"},"content":"        return Arrays.stream(values())","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"rmj1405"},"content":"                .filter(type -\u003e type.command.equals(commandToParse))","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"rmj1405"},"content":"                .findFirst().orElse(INVALID);","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"rmj1405"},"content":"     * Displays help menu with command examples","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"rmj1405"},"content":"     * and usage format.","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"rmj1405"},"content":"     * Does not include the INVALID constant","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"rmj1405"},"content":"     * @return list of commands as a single String","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"rmj1405"},"content":"    public static String displayHelpMenu() {","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"rmj1405"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"rmj1405"},"content":"        HelpMenu[] values \u003d HelpMenu.values();","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"rmj1405"},"content":"        int len \u003d values().length;","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"rmj1405"},"content":"        sb.append(MORE_INFO_MESSAGE);","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"rmj1405"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2023-03-21"},{"lineNumber":211,"author":{"gitId":"rmj1405"},"content":"        sb.append(COMMANDS_AVAILABLE);","lastModifiedDate":"2023-03-21"},{"lineNumber":212,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"rmj1405"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"rmj1405"},"content":"            HelpMenu command \u003d values[i];","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"rmj1405"},"content":"            if (command.equals(INVALID)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":216,"author":{"gitId":"rmj1405"},"content":"                continue;","lastModifiedDate":"2023-03-21"},{"lineNumber":217,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":218,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"rmj1405"},"content":"            sb.append(command.getCommand());","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"rmj1405"},"content":"            if (i !\u003d len - 1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"rmj1405"},"content":"                sb.append(\", \");","lastModifiedDate":"2023-03-21"},{"lineNumber":222,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"rmj1405"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nigelteosw":6,"rmj1405":220}},{"path":"src/main/java/seedu/wife/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final String LOG_FILE \u003d \"wife.log\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":110,"ScorpiusSigma":1}},{"path":"src/main/java/seedu/wife/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_INVALID_FOOD_DISPLAYED_INDEX \u003d \"The food item index provided is invalid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_FOODS_LISTED_OVERVIEW \u003d \"%1$d food item(s) found!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"There is no %1$s Tag!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_SUCCESSFUL_FOOD_TAG \u003d \"%s successfully tagged with %s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    public static final String MESSAGE_SUCCESSFUL_FOOD_UNTAG \u003d \"%s successfully untagged from %s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DOUBLE_TAG \u003d \"You have already tagged %s with %s.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index you entered is invalid.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_TAG_CREATE_SUCCESS \u003d \"Tag(s) successfully created:\";","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"The tag you are trying to create has been created before.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_EMPTY_ARGUMENT \u003d \"You missed out the argument for the command, please refer\"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"            + \" to help for more info. \\n %s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_MAXIMUM_TAG_FOOD \u003d \"You have reached the maximum tag limit for %s.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":11,"rmj1405":1,"Bisceto":1,"-":8,"ScorpiusSigma":1}},{"path":"src/main/java/seedu/wife/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":115}},{"path":"src/main/java/seedu/wife/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core.index;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jnjy":1,"-":53}},{"path":"src/main/java/seedu/wife/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":10}},{"path":"src/main/java/seedu/wife/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":1,"-":20}},{"path":"src/main/java/seedu/wife/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":2,"-":40}},{"path":"src/main/java/seedu/wife/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":1,"-":34}},{"path":"src/main/java/seedu/wife/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jnjy":3,"-":20}},{"path":"src/main/java/seedu/wife/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":82}},{"path":"src/main/java/seedu/wife/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":3,"-":140}},{"path":"src/main/java/seedu/wife/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"     * Returns {@code true} if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"     * Case-insensitive and does not require the whole word to match","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"ghi\") \u003d\u003d false","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"                .anyMatch(name -\u003e name.contains(preppedWord));","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"     * @throws NumberFormatException if {@code s} is not an integer.","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"     * Returns string with first letter of each word capitalized","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"     * e.g. capitalized name -\u003e Capitalized Name","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    public static String capitalizeString(String s) {","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        String capitalizedString \u003d s;","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        String[] words \u003d capitalizedString.split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"            words[i] \u003d words[i].substring(0, 1).toUpperCase() + words[i].substring(1);","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"        capitalizedString \u003d String.join(\" \", words);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"        return capitalizedString;","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //@@author jnjy-reused","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //Reused from","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //https://github.com/AY2223S1-CS2103T-W16-2/tp/blob/master/src/main/java/seedu/foodrem/commons/util/StringUtil.java","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //with minor modification","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns index obtained from command keyed in by users.","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Index getIndexFromCommand(String args, String commandHelpMessage) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireAllNonNull(args, commandHelpMessage);","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isBlank()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    commandHelpMessage));","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!StringUtil.isInteger(trimmedArgs)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    commandHelpMessage));","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedArgs)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, commandHelpMessage));","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":42,"Bisceto":28,"-":100}},{"path":"src/main/java/seedu/wife/commons/util/TagUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":" * Helper functions for handling tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"public class TagUtil {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns the match status of condition tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param foodlist","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param conditionTags","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param matchMessage","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param noMatchMessage","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"     * @return a string representation of the condition tag\u0027s match status","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    public static String getMatchStatus(","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"        ObservableList\u003cFood\u003e foodlist,","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"        Set\u003cTag\u003e conditionTags,","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"        String matchMessage,","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"        String noMatchMessage","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        // Collects all unique tags in the filtered food list","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        Set\u003cTag\u003e filteredFoodTags \u003d foodlist","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"            .stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"            .map(food -\u003e food.getTags())","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"            .reduce((tagX, tagY) -\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"                HashSet\u003cTag\u003e result \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"                result.addAll(tagX);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"                result.addAll(tagY);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"                return result;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"            }).orElse(new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"        // Constructs string representation of the match status","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"        HashSet\u003cTag\u003e matchTag \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"        HashSet\u003cTag\u003e noMatchTag \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : conditionTags) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            if (filteredFoodTags.contains(tag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"                matchTag.add(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"            } else if (!filteredFoodTags.contains(tag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"                noMatchTag.add(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        if (matchTag.size() \u003e 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"            result +\u003d matchMessage + \"\\n\" + tagsToString(matchTag) + \"\\n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"        if (noMatchTag.size() \u003e 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"            result +\u003d noMatchMessage + \"\\n\" + tagsToString(noMatchTag);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"        return result;","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns a string representation for a set of tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param tags","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"     * @return a string representation for a set of tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"    public static String tagsToString(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        String setString \u003d \"\";","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"            setString +\u003d tag + \"\\n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        return setString;","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":4,"ScorpiusSigma":73}},{"path":"src/main/java/seedu/wife/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     * Returns Wife.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * @see seedu.wife.model.Model#getWife()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    ReadOnlyWife getWife();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    /** Returns an unmodifiable view of the filtered list of food */","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    ObservableList\u003cFood\u003e getFilteredFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * Returns the user prefs\u0027 wife file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    Path getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jnjy":14,"-":36}},{"path":"src/main/java/seedu/wife/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.WifeParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private final WifeParser wifeParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        wifeParser \u003d new WifeParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        Command command \u003d wifeParser.parseCommand(commandText);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"            storage.saveWife(model.getWife());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    public ReadOnlyWife getWife() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        return model.getWife();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        return model.getFilteredFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    public Path getWifeFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        return model.getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jnjy":22,"-":59}},{"path":"src/main/java/seedu/wife/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":3,"-":17}},{"path":"src/main/java/seedu/wife/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    private final String helpMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    public CommandResult(String feedbackToUser, String helpMessage, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        this.helpMessage \u003d requireNonNull(helpMessage);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        this(feedbackToUser, \"\", false, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        return helpMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"                \u0026\u0026 helpMessage.equals(otherCommandResult.helpMessage)","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"        return Objects.hash(feedbackToUser, helpMessage, showHelp, exit);","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":1,"rmj1405":11,"-":67}},{"path":"src/main/java/seedu/wife/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Represents an error which occurs during execution of a {@link seedu.wife.logic.commands.Command}.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jnjy":2,"-":15}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" * Adds a food to the Wife.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a food to WIFE. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"            + PREFIX_UNIT + \"UNIT \"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"            + PREFIX_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"            + PREFIX_EXPIRY_DATE + \"EXPIRY DATE \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            + PREFIX_NAME + \"Broccoli \"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            + PREFIX_UNIT + \"STALK \"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"            + PREFIX_QUANTITY + \"2 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"            + PREFIX_EXPIRY_DATE + \"03-03-2033 \";","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New food added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DUPLICATE_FOOD \u003d \"This food item already exists in WIFE\";","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    private final Food toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Creates an AddCommand to add the specified {@code Food}","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    public AddCommand(Food food) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        requireNonNull(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        toAdd \u003d food;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        if (model.hasFood(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FOOD);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        model.addFood(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":63,"nigelteosw":1,"Bisceto":1}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/DecreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":" * Decreases the quantity of a food item by a specified amount or 1 by default.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"public class DecreaseCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    public static final String COMMAND_WORD \u003d \"dec\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Decreases the quantity of the food item\"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            + \" at the given index. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            + \"If no specific quantity is mentioned, it decreases by 1 by default\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"            + \"Parameters: INDEX [q/quantity to decrease by]...\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 q/10\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_DECREASE_FOOD_SUCCESS \u003d \"Decreased Food: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    public final Index index;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    public final DecreaseFoodDescriptor decreaseFoodDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"     * @param index of the food item in the filtered food list to edit","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * @param decreaseFoodDescriptor quantity descriptor to decrease the food item with","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    public DecreaseCommand(Index index, DecreaseFoodDescriptor decreaseFoodDescriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(decreaseFoodDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        this.decreaseFoodDescriptor \u003d new DecreaseFoodDescriptor(decreaseFoodDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        Food foodToDecrease \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        Food decreasedFood \u003d createDecreasedFood(foodToDecrease, decreaseFoodDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        model.setFood(foodToDecrease, decreasedFood);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        String feedbackToUser \u003d String.format(MESSAGE_DECREASE_FOOD_SUCCESS, decreasedFood)","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"                + \" by \" + decreaseFoodDescriptor.getQuantity();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"     * Creates and returns a {@code Food} with the details of {@code foodToEdit}","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"     * edited with {@code editFoodDescriptor}.","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"    private static Food createDecreasedFood(Food foodToDecrease, DecreaseFoodDescriptor decreaseFoodDescriptor)","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        assert foodToDecrease !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        Quantity updatedQuantity \u003d foodToDecrease.getQuantity()","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"                .decreaseQuantity(decreaseFoodDescriptor.getQuantity());","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"        return new Food(foodToDecrease.getName(), foodToDecrease.getUnit(), updatedQuantity,","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"                foodToDecrease.getExpiryDate(), foodToDecrease.getTags());","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"        // short circuit if same object","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"        if (!(other instanceof DecreaseCommand)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"        // state check","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand e \u003d (DecreaseCommand) other;","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"Bisceto"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"Bisceto"},"content":"                \u0026\u0026 decreaseFoodDescriptor.equals(e.decreaseFoodDescriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Bisceto"},"content":"     * Stores the quantity to decrease the quantity of the food item with. A non-negative value will decrease the","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Bisceto"},"content":"     * corresponding quantity of the food item by that value.","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Bisceto"},"content":"    public static class DecreaseFoodDescriptor {","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Bisceto"},"content":"        private Quantity quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Bisceto"},"content":"        public DecreaseFoodDescriptor() {","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"Bisceto"},"content":"            this.quantity \u003d new Quantity(\"1\");","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Bisceto"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Bisceto"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Bisceto"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Bisceto"},"content":"        public DecreaseFoodDescriptor(DecreaseCommand.DecreaseFoodDescriptor toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Bisceto"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Bisceto"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Bisceto"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Bisceto"},"content":"        public Quantity getQuantity() {","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"Bisceto"},"content":"            return this.quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Bisceto"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Bisceto"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Bisceto"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Bisceto"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Bisceto"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"Bisceto"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"Bisceto"},"content":"            if (!(other instanceof DecreaseCommand.DecreaseFoodDescriptor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"Bisceto"},"content":"                return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"Bisceto"},"content":"            // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"Bisceto"},"content":"            DecreaseCommand.DecreaseFoodDescriptor e \u003d (DecreaseCommand.DecreaseFoodDescriptor) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"Bisceto"},"content":"            return getQuantity().equals(e.getQuantity());","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Bisceto":141}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/DeleteByTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.commons.util.TagUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":" * Deletes a food identified using it\u0027s displayed index from WIFE.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteByTagCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String COMMAND_WORD \u003d \"delbytag\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"            + \": Deletes food that has specified tags.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"Example: \\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/vegetable\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/vegetable n/dairy n/grains\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_DELETE_FOOD_SUCCESS \u003d \"Deleted Food:\";","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    private final Set\u003cTag\u003e targetTags;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new DeleteByTag object.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteByTagCommand(Tag targetTag) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags.add(targetTag);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new DeleteByTag object.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteByTagCommand(Set\u003cTag\u003e targetTag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags \u003d targetTag;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"        List\u003cFood\u003e foodList \u003d List.copyOf(model.getFilteredFoodList());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"        String deletedFoodSuccessMessage \u003d MESSAGE_DELETE_FOOD_SUCCESS;","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : this.targetTags) {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"            for (Food food : foodList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"                Set\u003cTag\u003e foodTags \u003d food.getTags();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"                if (foodTags.contains(tag)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"                    deletedFoodSuccessMessage \u003d deletedFoodSuccessMessage + \"\\n\" + food;","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"                    model.deleteFood(food);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"        if (deletedFoodSuccessMessage.equals(MESSAGE_DELETE_FOOD_SUCCESS)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"            deletedFoodSuccessMessage \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"                \"Nothing to delete with the following tag:\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"                + TagUtil.tagsToString(targetTags);","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CommandResult(deletedFoodSuccessMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"                || (other instanceof DeleteByTagCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"                \u0026\u0026 targetTags.equals(((DeleteByTagCommand) other).targetTags)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"ScorpiusSigma":82}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" * Deletes a food identified using it\u0027s displayed index from WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            + \": Deletes the food identified by the index number used in the displayed food list.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DELETE_FOOD_SUCCESS \u003d \"Deleted Food: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        Food foodToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        model.deleteFood(foodToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FOOD_SUCCESS, foodToDelete));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":16,"-":39}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":" * Edits the details of an existing food item in WIFE.","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the food identified \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            + \"by the index number used in the displayed food list. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"            + \"[\" + PREFIX_UNIT + \"UNIT] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"            + \"[\" + PREFIX_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"            + \"[\" + PREFIX_EXPIRY_DATE + \"EXPIRY DATE] \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"            + PREFIX_NAME + \"Broccoli \"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"            + PREFIX_QUANTITY + \"10\";","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_EDIT_FOOD_SUCCESS \u003d \"Edited food item: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided! \\n%s\";","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DUPLICATE_FOOD \u003d \"This food already exists in WIFE.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    private final Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    private final EditFoodDescriptor editFoodDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"     * @param index of the food in the filtered food list to edit","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"     * @param editFoodDescriptor details to edit the food item with","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    public EditCommand(Index index, EditFoodDescriptor editFoodDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        requireNonNull(editFoodDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        this.editFoodDescriptor \u003d new EditFoodDescriptor(editFoodDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        Food foodToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        Food editedFood \u003d createEditedFood(foodToEdit, editFoodDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        if (!foodToEdit.isSameFood(editedFood) \u0026\u0026 model.hasFood(editedFood)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FOOD);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        model.setFood(foodToEdit, editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FOOD_SUCCESS, editedFood));","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"     * Creates and returns a {@code food} with the details of {@code foodToEdit}","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"     * edited with {@code editFoodDescriptor}.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"    private static Food createEditedFood(Food foodToEdit, EditFoodDescriptor editFoodDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        assert foodToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        Name updatedName \u003d editFoodDescriptor.getName().orElse(foodToEdit.getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        Unit updatedUnit \u003d editFoodDescriptor.getUnit().orElse(foodToEdit.getUnit());","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        Quantity updatedQuantity \u003d editFoodDescriptor.getQuantity().orElse(foodToEdit.getQuantity());","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"        ExpiryDate updatedExpiryDate \u003d editFoodDescriptor.getExpiryDate().orElse(foodToEdit.getExpiryDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Bisceto"},"content":"        return new Food(updatedName, updatedUnit, updatedQuantity, updatedExpiryDate, foodToEdit.getTags());","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 editFoodDescriptor.equals(e.editFoodDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Bisceto"},"content":"     * Stores the details to edit the food item with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Bisceto"},"content":"     * corresponding field value of the food. Note that tags cannot be changed in EditFoodDescriptor and EditCommand.","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"    public static class EditFoodDescriptor {","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"        private Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"        private Unit unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        private Quantity quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        private ExpiryDate expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"        public EditFoodDescriptor() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"        public EditFoodDescriptor(EditFoodDescriptor toCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"            setUnit(toCopy.unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"            setExpiryDate(toCopy.expiryDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"Bisceto"},"content":"            return CollectionUtil.isAnyNonNull(name, unit, quantity, expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"jnjy"},"content":"        public void setUnit(Unit unit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"jnjy"},"content":"            this.unit \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"        public Optional\u003cUnit\u003e getUnit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"            return Optional.ofNullable(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":"        public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"jnjy"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"jnjy"},"content":"        public void setExpiryDate(ExpiryDate expiryDate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"            this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"jnjy"},"content":"        public Optional\u003cExpiryDate\u003e getExpiryDate() {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"jnjy"},"content":"            return Optional.ofNullable(expiryDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"jnjy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"jnjy"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"jnjy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"jnjy"},"content":"                return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"jnjy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"jnjy"},"content":"            if (!(other instanceof EditFoodDescriptor)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"jnjy"},"content":"                return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"jnjy"},"content":"            // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"jnjy"},"content":"            EditFoodDescriptor e \u003d (EditFoodDescriptor) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"jnjy"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"jnjy"},"content":"                    \u0026\u0026 getUnit().equals(e.getUnit())","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"jnjy"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"rmj1405"},"content":"                    \u0026\u0026 getExpiryDate().equals(e.getExpiryDate());","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":186,"rmj1405":1,"Bisceto":14}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_FOODS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all food items which names contain any of \"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" broccoli milk\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredFoodList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"                String.format(MESSAGE_FOODS_LISTED_OVERVIEW, model.getFilteredFoodList().size()));","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jnjy":7,"Bisceto":3,"-":34}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/IncreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":" * Increases the quantity of a food item by a specified amount or 1 by default.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"public class IncreaseCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    public static final String COMMAND_WORD \u003d \"inc\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Increases the quantity of the food item\"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            + \" at the given index. \"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            + \"If no specific quantity is mentioned, it increases by 1 by default\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"            + \"Parameters: INDEX [q/quantity to increase by]...\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 q/100\";","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_INCREASE_FOOD_SUCCESS \u003d \"Increased Food: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    public final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    public final IncreaseFoodDescriptor increaseFoodDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"     * @param index of the food item in the filtered food list to edit","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * @param increaseFoodDescriptor quantity descriptor to increase the food item with","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    public IncreaseCommand(Index index, IncreaseFoodDescriptor increaseFoodDescriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(increaseFoodDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        this.increaseFoodDescriptor \u003d new IncreaseFoodDescriptor(increaseFoodDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        Food foodToIncrease \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        Food increasedFood \u003d createIncreasedFood(foodToIncrease, increaseFoodDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        model.setFood(foodToIncrease, increasedFood);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        String feedbackToUser \u003d String.format(MESSAGE_INCREASE_FOOD_SUCCESS, increasedFood)","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"                + \" by \" + increaseFoodDescriptor.getQuantity();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"     * Creates and returns a {@code Food} with the details of {@code foodToEdit}","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"     * edited with {@code editFoodDescriptor}.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"    private static Food createIncreasedFood(Food foodToIncrease, IncreaseFoodDescriptor increaseFoodDescriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"        assert foodToIncrease !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        Quantity updatedQuantity \u003d foodToIncrease.getQuantity().increaseQuantity(increaseFoodDescriptor.getQuantity());","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        return new Food(foodToIncrease.getName(), foodToIncrease.getUnit(), updatedQuantity,","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"                foodToIncrease.getExpiryDate(), foodToIncrease.getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"        // short circuit if same object","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"        if (!(other instanceof IncreaseCommand)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"        // state check","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"        IncreaseCommand e \u003d (IncreaseCommand) other;","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"Bisceto"},"content":"                \u0026\u0026 increaseFoodDescriptor.equals(e.increaseFoodDescriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"Bisceto"},"content":"     * Stores the quantity to increase the quantity of the food item with. A non-negative value will increase the","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"Bisceto"},"content":"     * corresponding quantity of the food item by that value.","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"Bisceto"},"content":"    public static class IncreaseFoodDescriptor {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"Bisceto"},"content":"        private Quantity quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"Bisceto"},"content":"        public IncreaseFoodDescriptor() {","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"Bisceto"},"content":"            this.quantity \u003d new Quantity(\"1\");","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"Bisceto"},"content":"        /**","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"Bisceto"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"Bisceto"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"Bisceto"},"content":"        public IncreaseFoodDescriptor(IncreaseFoodDescriptor toCopy) {","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"Bisceto"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"Bisceto"},"content":"        public void setQuantity(Quantity quantity) {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"Bisceto"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"Bisceto"},"content":"        public Quantity getQuantity() {","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"Bisceto"},"content":"            return this.quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"Bisceto"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"Bisceto"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"Bisceto"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"Bisceto"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"Bisceto"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"Bisceto"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"Bisceto"},"content":"            if (!(other instanceof IncreaseCommand.IncreaseFoodDescriptor)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"Bisceto"},"content":"                return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"Bisceto"},"content":"            // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"Bisceto"},"content":"            IncreaseCommand.IncreaseFoodDescriptor e \u003d (IncreaseCommand.IncreaseFoodDescriptor) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"Bisceto"},"content":"            return getQuantity().equals(e.getQuantity());","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Bisceto":139}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/ListByTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.commons.util.TagUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":" * Lists all food in the WIFE to the user by specified tags.","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"public class ListByTagCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String COMMAND_WORD \u003d \"listbytag\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all food with the following tags:\";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_NO_FOOD_WITH_FOLLOWING_TAGS \u003d \"There are no food with the following tags:\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"            + \": Shows all food with the specified tag.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"Example: \" + \"\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/Dairy\" + \"\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/Dairy n/Healthy\";","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"    private final Set\u003cTag\u003e targetTags;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new ListByTag object.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"    public ListByTagCommand(Tag targetTag) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(targetTag);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags.add(targetTag);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new ListByTag object.","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"    public ListByTagCommand(Set\u003cTag\u003e targetTag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(targetTag);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        this.targetTags \u003d targetTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        model.updateFilteredFoodList(","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"            food -\u003e food.getTags().stream().anyMatch(tag -\u003e this.targetTags.contains(tag))","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"            TagUtil.getMatchStatus(","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"                model.getFilteredFoodList(),","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"                targetTags,","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"                MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"                MESSAGE_NO_FOOD_WITH_FOLLOWING_TAGS","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"            )","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jnjy":2,"ScorpiusSigma":63}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * Lists all food in the wife to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all food items!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":7,"Bisceto":1,"-":17}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/SortByExpiryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":" * Sorts food in the WIFE by their expiry date.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"public class SortByExpiryCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String COMMAND_WORD \u003d \"expiry\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Food items are being sorted by their expiry dates.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"            + \": Shows food sorted by their expiry date.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"        model.sortFilteredFoodListByExpiryDate();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ScorpiusSigma":28}},{"path":"src/main/java/seedu/wife/logic/commands/foodcommands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":" * Views the food identified by the index number used in the displayed food list.","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"            + \": Views the food identified by the index number used in the displayed food list.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    public static final String MESSAGE_VIEW_FOOD_SUCCESS \u003d \"Viewed Food: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * Creates a ViewCommand to view the specified {@code targetIndex}","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"        Food foodToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"        model.viewFood(foodToView);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_FOOD_SUCCESS, foodToView));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"nigelteosw":59}},{"path":"src/main/java/seedu/wife/logic/commands/generalcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":" * Clears WIFE.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"WIFE has been cleared!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        model.setWife(new Wife());","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":7,"Bisceto":1,"-":17}},{"path":"src/main/java/seedu/wife/logic/commands/generalcommands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting WIFE as requested ...\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, \"\", false, true);","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jnjy":5,"rmj1405":1,"-":15}},{"path":"src/main/java/seedu/wife/logic/commands/generalcommands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" *","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * Dynamic help functionality inspired by AY2223 S1 Team W16-2","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    private final String helpMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Creates a new HelpCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @param helpMessage String to be passed to the MainWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     *      via CommandResult which will be displayed on help window.","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    public HelpCommand(String helpMessage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        this.helpMessage \u003d helpMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, helpMessage, true, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        HelpCommand otherHelpCommand \u003d (HelpCommand) other;","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"        return helpMessage.equals(otherHelpCommand.helpMessage);","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":4,"rmj1405":30,"-":18}},{"path":"src/main/java/seedu/wife/logic/commands/tagcommands/CreateTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_DUPLICATE_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_TAG_CREATE_SUCCESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.exceptions.TagStorageFullException;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Create a new pre-defined tag.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class CreateTagCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String COMMAND_WORD \u003d \"createtag\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"            + \": Create a new pre-defined tag\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/vegetable\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"            + COMMAND_WORD + \" n/vegetable n/dairy n/grains\\n\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    private Set\u003cTag\u003e toCreate;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new CreateTagCommand object.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    public CreateTagCommand(Tag tags) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        this.toCreate \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"        this.toCreate.add(tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new CreateTagCommand object.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"     * @param tags","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"    public CreateTagCommand(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        this.toCreate \u003d tags;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"        String messageString \u003d MESSAGE_TAG_CREATE_SUCCESS;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag: this.toCreate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"            if (model.hasTag(tag)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"                continue;","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"            try {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"                model.createTag(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"                messageString +\u003d \"\\n\" + tag.getTagName();","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"            } catch (TagStorageFullException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"        if (messageString.equals(MESSAGE_TAG_CREATE_SUCCESS)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CommandResult(messageString);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"                || (other instanceof CreateTagCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"                \u0026\u0026 toCreate.equals(((CreateTagCommand) other).toCreate)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":4,"ScorpiusSigma":75}},{"path":"src/main/java/seedu/wife/logic/commands/tagcommands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_NO_FOODS;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" * Delete a pre-defined tag.","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String COMMAND_WORD \u003d \"deltag\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"            + \": Deletes a pre-defined tag\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/vegetable\";","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_TAG_DELETE_SUCCESS \u003d \"Tag successfully deleted:\";","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_TAG_DELETE_UNSUCCESS \u003d \"The tag you are trying to delete does not exist.\";","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    private Set\u003cTag\u003e toDelete;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new DeleteTagCommand object.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteTagCommand(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        HashSet\u003cTag\u003e taglist \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"        taglist.add(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"        this.toDelete \u003d taglist;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor to create a new DeleteTagCommand object.","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteTagCommand(Set\u003cTag\u003e tag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        this.toDelete \u003d tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"        List\u003cFood\u003e lastShownFoodList \u003d List.copyOf(model.getFoodList());","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        String deletedTagSuccessMessage \u003d MESSAGE_TAG_DELETE_SUCCESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"        // Deletes tag from food","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : toDelete) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"            for (Food food : lastShownFoodList) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"                food.removeTag(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"        // Deletes tag from WIFE","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : toDelete) {","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"            if (model.hasTag(tag)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"                model.deleteTag(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"                deletedTagSuccessMessage +\u003d \"\\n\" + tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        // Refreshes the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_NO_FOODS);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        model.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        if (deletedTagSuccessMessage.equals(MESSAGE_TAG_DELETE_SUCCESS)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new CommandException(MESSAGE_TAG_DELETE_UNSUCCESS);","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CommandResult(deletedTagSuccessMessage);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"ScorpiusSigma"},"content":"                || (other instanceof DeleteTagCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"ScorpiusSigma"},"content":"                \u0026\u0026 toDelete.equals(((DeleteTagCommand) other).toDelete)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"ScorpiusSigma":86}},{"path":"src/main/java/seedu/wife/logic/commands/tagcommands/ListTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * List all pre-defined tags.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class ListTagCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String COMMAND_WORD \u003d \"listtag\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Here are your existing tags: \";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    private static final String MESSAGE_EMPTY_TAGS \u003d \"You have not created any tags! \"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"            + \"You may do so with the createtag command.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredTagList(Model.PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        Object[] tags \u003d model.getFilteredTagList().toArray();","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        if (tags.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"            sb.append(MESSAGE_EMPTY_TAGS).append(System.lineSeparator());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"            String emptyTags \u003d sb.toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"            return new CommandResult(emptyTags);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        sb.append(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        for (Object tag : tags) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            Tag thisTag \u003d (Tag) tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"            sb.append(thisTag.getTagName());","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        String allTags \u003d sb.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"        return new CommandResult(allTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":26,"rmj1405":20}},{"path":"src/main/java/seedu/wife/logic/commands/tagcommands/TagFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_DOUBLE_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_MAXIMUM_TAG_FOOD;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_SUCCESSFUL_FOOD_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":" * Command to tag food.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"public class TagFoodCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_USAGE \u003d \"Tag a food with any of your tags in the list.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"            + \"tag \u003cindex\u003e n/\u003ctag name\u003e\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"            + \"example: tag 1 n/Vege\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private Tag tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    private Index index;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a new TagFoodCommand object.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public TagFoodCommand(String tagName, Index index) {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(tagName, index);","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        this.tag \u003d new Tag(tagName);","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //@@author jnjy-reused","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/AY2223S1-CS2103T-W16-2/tp/blob/master/src/main/java/seedu","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // /foodrem/logic/commands/tagcommands/TagCommandUtil.java","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Validates the tag and index before returning the food to be tagged.","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param model the model in-use.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param tag the tag that wished to be used.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param index the index of the food in WIFE.","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return The food that needs to be tagged.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws CommandException Error if tag is not found or food index is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Food getFoodToTag(Model model, Tag tag, Index index) throws CommandException {","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireAllNonNull(model, tag, index);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!model.hasTag(tag)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_TAG_NOT_FOUND, tag.getTagName()));","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cFood\u003e foodList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d foodList.size()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return foodList.get(index.getZeroBased());","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        Food foodToTag \u003d TagFoodCommand.getFoodToTag(model, tag, index);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        Set\u003cTag\u003e foodTags \u003d foodToTag.getCurrentTags();","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        if (foodTags.size() \u003e\u003d 4) {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(String.format(MESSAGE_MAXIMUM_TAG_FOOD,","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"                    foodToTag.getName(), tag.getTagName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        if (foodTags.contains(tag)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"            throw new CommandException(String.format(MESSAGE_DOUBLE_TAG,","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"                    foodToTag.getName(), tag.getTagName()));","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        foodTags.add(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        Food editedFood \u003d foodToTag.createNewFoodWithNewTags(foodToTag, foodTags);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        model.setFood(foodToTag, editedFood);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESSFUL_FOOD_TAG,","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"                editedFood.getName(), tag.getTagName()));","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"                || (other instanceof TagFoodCommand // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 tag.equals(((TagFoodCommand) other).tag))","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 index.equals(((TagFoodCommand) other).index); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jnjy":72,"-":29}},{"path":"src/main/java/seedu/wife/logic/commands/tagcommands/UntagFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":" * Command to untag a food item.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"public class UntagFoodCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public static final String MESSAGE_USAGE \u003d \"Remove a tag from a food item in your list.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"            + \"Format:\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"            + \"untag \u003cindex\u003e n/\u003ctag name\u003e\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"            + \"example: untag 1 n/Vege\";","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    private Tag tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    private Index index;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * Constructor to create a new UntagFoodCommand object.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    public UntagFoodCommand(String tagName, Index index) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        this.tag \u003d new Tag(tagName);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        Food foodToUntag \u003d UntagFoodCommand.getFoodToUntag(model, tag, index);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        Set\u003cTag\u003e foodTags \u003d foodToUntag.getCurrentTags();","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        if (!foodTags.contains(tag)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_TAG_NOT_FOUND, tag.getTagName()));","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        foodTags.remove(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"        Food editedFood \u003d foodToUntag.createNewFoodWithNewTags(foodToUntag, foodTags);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"        model.setFood(foodToUntag, editedFood);","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_SUCCESSFUL_FOOD_UNTAG,","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"                 tag.getTagName(), editedFood.getName()));","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"                || (other instanceof UntagFoodCommand// instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"                \u0026\u0026 tag.equals(((UntagFoodCommand) other).tag))","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"                \u0026\u0026 index.equals(((UntagFoodCommand) other).index); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"    // Tag utils","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"    public static Food getFoodToUntag(Model model, Tag tag, Index index) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"        if (!model.hasTag(tag)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_TAG_NOT_FOUND, tag.getTagName()));","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"        List\u003cFood\u003e foodList \u003d model.getFilteredFoodList();","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"        if (index.getZeroBased() \u003e\u003d foodList.size()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"        return foodList.get(index.getZeroBased());","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"rmj1405":84}},{"path":"src/main/java/seedu/wife/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"jnjy":1,"-":59}},{"path":"src/main/java/seedu/wife/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jnjy":1,"-":147}},{"path":"src/main/java/seedu/wife/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public static final Prefix PREFIX_UNIT \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public static final Prefix PREFIX_EXPIRY_DATE \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jnjy":4,"-":11}},{"path":"src/main/java/seedu/wife/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.HelpMenu;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" *","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * Dynamic help functionality inspired by AY2223 S1 Team W16-2","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        assert !args.equals(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"            return new HelpCommand(HelpMenu.getGeneralHelp());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        HelpMenu helpCommand \u003d HelpMenu.parseCommand(trimmedArgs);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        return new HelpCommand(HelpMenu.getCommandHelp(helpCommand));","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"rmj1405":29}},{"path":"src/main/java/seedu/wife/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jnjy":3,"-":13}},{"path":"src/main/java/seedu/wife/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.TagName;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        if (!Name.isValidFoodName(trimmedName)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     * Parses a {@code String unit} into a {@code Unit}.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     * @throws ParseException if the given {@code unit} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    public static Unit parseUnit(String unit) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        requireNonNull(unit);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        String trimmedUnit \u003d unit.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"            return new Unit(trimmedUnit);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        } catch (IllegalArgumentException ie) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(ie.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"     * Parses a {@code String quantity} into an {@code Quantity}.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"        if (!Quantity.isNotChar(trimmedQuantity)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"            throw new ParseException(Quantity.MESSAGE_CHAR_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        if (!Quantity.isValidQuantity(trimmedQuantity)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        return new Quantity(trimmedQuantity);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    public static ExpiryDate parseExpiryDate(String date) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"            return new ExpiryDate(trimmedDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"        } catch (IllegalArgumentException ie) {","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(ie.getMessage());","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        if (!TagName.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(TagName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"    public static TagName parseTagName(String tagName) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"        String trimmedTag \u003d tagName.trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        if (!TagName.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(TagName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"        return new TagName(trimmedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"     * Returns true if none of the prefix contains empty value in the given {@code ArgumentMultiMap}","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jnjy":62,"nigelteosw":3,"-":88}},{"path":"src/main/java/seedu/wife/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jnjy":1,"-":38}},{"path":"src/main/java/seedu/wife/logic/parser/WifeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.DecreaseCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteByTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.FindCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.ListByTagCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.ListCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.SortByExpiryCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.commands.foodcommands.ViewCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.CreateTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.DeleteTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.ListTagCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.tagcommands.TagFoodCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.tagcommands.UntagFoodCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.foodcommandparser.AddCommandParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.foodcommandparser.DecreaseCommandParser;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.foodcommandparser.DeleteByTagCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.foodcommandparser.DeleteCommandParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.foodcommandparser.EditCommandParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.foodcommandparser.FindCommandParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.foodcommandparser.IncreaseCommandParser;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.foodcommandparser.ListByTagCommandParser;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.parser.foodcommandparser.ViewCommandParser;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.tagcommandparser.CreateTagCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.tagcommandparser.DeleteTagCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.tagcommandparser.TagFoodCommandParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.tagcommandparser.UntagFoodCommandParser;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"public class WifeParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        \"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"    );","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"            );","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        case CreateTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"            return new CreateTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"        case DeleteByTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"            return new DeleteByTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"ScorpiusSigma"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"ScorpiusSigma"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        case ListTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"            return new ListTagCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"ScorpiusSigma"},"content":"        case ListByTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"ScorpiusSigma"},"content":"            return new ListByTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"        case SortByExpiryCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"ScorpiusSigma"},"content":"            return new SortByExpiryCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        case TagFoodCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"            return new TagFoodCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"        case UntagFoodCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"            return new UntagFoodCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"Bisceto"},"content":"        case IncreaseCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"Bisceto"},"content":"            return new IncreaseCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"Bisceto"},"content":"        case DecreaseCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"            return new DecreaseCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"rmj1405"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":25,"nigelteosw":4,"rmj1405":5,"Bisceto":8,"-":47,"ScorpiusSigma":26}},{"path":"src/main/java/seedu/wife/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jnjy":2,"-":15}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Prefix;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_UNIT, PREFIX_QUANTITY, PREFIX_EXPIRY_DATE);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_UNIT, PREFIX_QUANTITY, PREFIX_EXPIRY_DATE)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        Unit unit \u003d ParserUtil.parseUnit(argMultimap.getValue(PREFIX_UNIT).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        Quantity quantity \u003d ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        ExpiryDate expiryDate \u003d ParserUtil.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        Food food \u003d new Food(name, unit, quantity, expiryDate, tagList);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        return new AddCommand(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jnjy":26,"nigelteosw":1,"-":38}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/DecreaseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.DecreaseCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.DecreaseCommand.DecreaseFoodDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":" * Parses input arguments and creates a new DecreaseCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"public class DecreaseCommandParser implements Parser\u003cDecreaseCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     * Parses the given {@code String} of arguments in the context of the DecreaseCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"     * and returns an DecreaseCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    public DecreaseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUANTITY);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        Index index;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        index \u003d StringUtil.getIndexFromCommand(argMultimap.getPreamble().trim(), DecreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        DecreaseFoodDescriptor decreaseFoodDescriptor \u003d new DecreaseFoodDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"        //quantity needs to be \u003e 0","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"            decreaseFoodDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"            decreaseFoodDescriptor.setQuantity(new Quantity(\"1\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"        return new DecreaseCommand(index, decreaseFoodDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Bisceto":47}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/DeleteByTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteByTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteByTagCommandParser implements Parser\u003cDeleteByTagCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteByTagCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"     * and returns a DeleteByTagCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteByTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteByTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        return new DeleteByTagCommand(tagList);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jnjy":2,"ScorpiusSigma":39}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"                String.format(","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"                DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"                ),","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"                pe","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"            );","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jnjy":7,"-":22,"ScorpiusSigma":6}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.foodcommands.EditCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_UNIT, PREFIX_QUANTITY,","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"                        PREFIX_EXPIRY_DATE, PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        index \u003d StringUtil.getIndexFromCommand(argMultimap.getPreamble().trim(), EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor editFoodDescriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"            editFoodDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        if (argMultimap.getValue(PREFIX_UNIT).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"            editFoodDescriptor.setUnit(ParserUtil.parseUnit(argMultimap.getValue(PREFIX_UNIT).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"            editFoodDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        if (argMultimap.getValue(PREFIX_EXPIRY_DATE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"            editFoodDescriptor.setExpiryDate(ParserUtil.parseExpiryDate(","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"                    argMultimap.getValue(PREFIX_EXPIRY_DATE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        if (!editFoodDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"            throw new ParseException(String.format(MESSAGE_NOT_EDITED, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        return new EditCommand(index, editFoodDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jnjy":27,"Bisceto":4,"-":32}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.FindCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jnjy":6,"-":28}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/IncreaseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand.IncreaseFoodDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":" * Parses input arguments and creates a new IncreaseCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"public class IncreaseCommandParser implements Parser\u003cIncreaseCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     * Parses the given {@code String} of arguments in the context of the IncreaseCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"     * and returns an IncreaseCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    public IncreaseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUANTITY);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        index \u003d StringUtil.getIndexFromCommand(argMultimap.getPreamble().trim(), IncreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        IncreaseFoodDescriptor increaseFoodDescriptor \u003d new IncreaseFoodDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"        //quantity needs to be \u003e 0","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"            increaseFoodDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"            increaseFoodDescriptor.setQuantity(new Quantity(\"1\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"        return new IncreaseCommand(index, increaseFoodDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Bisceto":47}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/ListByTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.ListByTagCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Parses input arguments and creates a new ListByTagCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class ListByTagCommandParser implements Parser\u003cListByTagCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"     * Parses the given {@code String} of arguments in the context of the ListByTagCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"     * and returns a ListByTagCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    public ListByTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        if (","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"            !ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListByTagCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"            );","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"        return new ListByTagCommand(tagList);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jnjy":2,"ScorpiusSigma":44}},{"path":"src/main/java/seedu/wife/logic/parser/foodcommandparser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.commands.foodcommands.ViewCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"                String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"                ViewCommand.MESSAGE_USAGE","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"                ),","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"                pe","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"nigelteosw":33}},{"path":"src/main/java/seedu/wife/logic/parser/tagcommandparser/CreateTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.CreateTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Parses input arguments and create a new CreateTagCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class CreateTagCommandParser implements Parser\u003cCreateTagCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public CreateTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        return new CreateTagCommand(tagList);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jnjy":27,"ScorpiusSigma":9}},{"path":"src/main/java/seedu/wife/logic/parser/tagcommandparser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.DeleteTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Parses input arguments and create a new DeleteTagCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        return new DeleteTagCommand(tagList);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"ScorpiusSigma":36}},{"path":"src/main/java/seedu/wife/logic/parser/tagcommandparser/TagFoodCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.tagcommands.TagFoodCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":" * Parses input arguments and create a new TagFoodCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"public class TagFoodCommandParser implements Parser\u003cTagFoodCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public TagFoodCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        Index idx \u003d StringUtil.getIndexFromCommand(argMultimap.getPreamble().trim(), TagFoodCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagFoodCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        String tagName \u003d ParserUtil.parseTagName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        return new TagFoodCommand(tagName, idx);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":37}},{"path":"src/main/java/seedu/wife/logic/parser/tagcommandparser/UntagFoodCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.tagcommands.UntagFoodCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.Parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":" * Parses input arguments and creates a new UntagFoodCommand object","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"public class UntagFoodCommandParser implements Parser\u003cUntagFoodCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public UntagFoodCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        Index idx \u003d StringUtil.getIndexFromCommand(argMultimap.getPreamble().trim(), UntagFoodCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagFoodCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        String tagName \u003d ParserUtil.parseTagName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        return new UntagFoodCommand(tagName, idx);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"rmj1405":37}},{"path":"src/main/java/seedu/wife/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"public interface Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    Predicate\u003cFood\u003e PREDICATE_SHOW_ALL_FOODS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    Predicate\u003cFood\u003e PREDICATE_SHOW_NO_FOODS \u003d unused -\u003e false;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    Predicate\u003cTag\u003e PREDICATE_SHOW_ALL_TAGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     * Returns the user prefs\u0027 WIFE file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    Path getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"     * Sets the user prefs\u0027 WIFE file path.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    void setWifeFilePath(Path wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * Replaces WIFE data with the data in {@code WIFE}.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    void setWife(ReadOnlyWife wife);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    /** Returns the Wife */","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    ReadOnlyWife getWife();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     * Deletes the given tag.","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     * The tag must exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    void deleteTag(Tag target);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"     * Creates the given tag.","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"     * {@code tag} must not already exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"    void createTag(Tag tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"     * Replaces the given tag {@code target} with {@code editedTag}.","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"     * {@code target} must exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"     * The tag of {@code editedTag} must not be the same as another existing tag in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"    void setTag(Tag target, Tag editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    /** Returns an unmodifiable view of the filtered tag list */","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"ScorpiusSigma"},"content":"    /** Returns an unmodifiable view of the tag list */","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"     * Updates the filter of the filtered food list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"    void updateFilteredTagList(Predicate\u003cTag\u003e predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the Wife.","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    boolean hasFood(Food food);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"     * Deletes the given food.","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"     * The food must exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"    void deleteFood(Food target);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"     * Adds the given food.","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"     * {@code food} must not already exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"    void addFood(Food food);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"     * Replaces the given food {@code target} with {@code editedFood}.","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"     * {@code target} must exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"     * The food of {@code editedfood} must not be the same as another existing food in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"    void setFood(Food target, Food editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"    /** Returns an unmodifiable view of the filtered food list */","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    ObservableList\u003cFood\u003e getFilteredFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"ScorpiusSigma"},"content":"    /** Sorts food list by its expiry date */","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ScorpiusSigma"},"content":"    void sortFilteredFoodListByExpiryDate();","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"ScorpiusSigma"},"content":"    /** Returns an unmodifiable view of the food list */","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"ScorpiusSigma"},"content":"    ObservableList\u003cFood\u003e getFoodList();","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"     * Updates the filter of the filtered food list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"    void updateFilteredFoodList(Predicate\u003cFood\u003e predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"nigelteosw"},"content":"     * Returns a unmodifiable view of the food description if {@code target} exists in the Wife.","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"nigelteosw"},"content":"    void viewFood(Food target);","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":122,"nigelteosw":6,"ScorpiusSigma":14}},{"path":"src/main/java/seedu/wife/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Represents the in-memory model of the WIFE data.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    private final Wife wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private final FilteredList\u003cFood\u003e filteredFoods;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private final FilteredList\u003cTag\u003e filteredTags;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"     * Initializes a ModelManager with the given WIFE and userPrefs.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public ModelManager(ReadOnlyWife wife, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(wife, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        logger.fine(\"Initializing with Wife: \" + wife + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        this.wife \u003d new Wife(wife);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        filteredFoods \u003d new FilteredList\u003c\u003e(this.wife.getFoodList());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        filteredTags \u003d new FilteredList\u003c\u003e(this.wife.getTagList());","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"        sortFilteredFoodListByExpiryDate();","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        this(new Wife(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    public Path getWifeFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        return userPrefs.getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    public void setWifeFilePath(Path wifeFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        requireNonNull(wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        userPrefs.setWifeFilePath(wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    public void setWife(ReadOnlyWife wife) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        this.wife.resetData(wife);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    public ReadOnlyWife getWife() {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        return wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Food \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    public boolean hasFood(Food food) {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        requireNonNull(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        return wife.hasFood(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    public void deleteFood(Food target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        wife.removeFood(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    public void addFood(Food food) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        wife.addFood(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"        updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(target, editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"        wife.setFood(target, editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"nigelteosw"},"content":"    public void viewFood(Food target) {","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"nigelteosw"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"nigelteosw"},"content":"        wife.viewFood(target);","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"     * Returns an unmodifiable view of the list of {@code Food} backed by the internal list of","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"     * {@code versionedWife}","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"    public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        return filteredFoods;","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"ScorpiusSigma"},"content":"    /** Sorts food list by its expiry date */","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"ScorpiusSigma"},"content":"    public void sortFilteredFoodListByExpiryDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"ScorpiusSigma"},"content":"        wife.sortFood(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"ScorpiusSigma"},"content":"    };","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns an unmodifiable view of the list of {@code Food} backed by {@code versionedWife}","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"ScorpiusSigma"},"content":"    public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"ScorpiusSigma"},"content":"        return this.wife.getFoodList();","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"    public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"        filteredFoods.setPredicate(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tags \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"jnjy"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"jnjy"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"        return wife.hasTag(tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"    public void deleteTag(Tag target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"        wife.removeTag(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"ScorpiusSigma"},"content":"    public void createTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"ScorpiusSigma"},"content":"        wife.createTag(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"rmj1405"},"content":"        updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"jnjy"},"content":"        wife.setTag(target, editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"jnjy"},"content":"     * Returns an unmodifiable view of the list of {@code Tag} backed by the internal list of","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"jnjy"},"content":"     * {@code versionedWife}","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"jnjy"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"jnjy"},"content":"        return filteredTags;","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns an unmodifiable view of the list of {@code Tag} backed by {@code versionedWife}","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"ScorpiusSigma"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"ScorpiusSigma"},"content":"        return this.wife.getTagList();","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"jnjy"},"content":"    public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"jnjy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"jnjy"},"content":"        filteredTags.setPredicate(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"jnjy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"jnjy"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"jnjy"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"jnjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"jnjy"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"jnjy"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"jnjy"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"jnjy"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"jnjy"},"content":"        return wife.equals(other.wife)","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 filteredFoods.equals(other.filteredFoods)","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 filteredTags.equals(other.filteredTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":188,"nigelteosw":6,"rmj1405":1,"ScorpiusSigma":27}},{"path":"src/main/java/seedu/wife/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    Path getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jnjy":3,"-":13}},{"path":"src/main/java/seedu/wife/model/ReadOnlyWife.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"public interface ReadOnlyWife {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns an unmodifiable view of the foods list.","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"     * This list will not contain any duplicate foods.","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    ObservableList\u003cFood\u003e getFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns an unmodifiable view of the tags list.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":4,"-":11,"ScorpiusSigma":9}},{"path":"src/main/java/seedu/wife/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private Path wifeFilePath \u003d Paths.get(\"data\" , \"wife.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        setWifeFilePath(newUserPrefs.getWifeFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    public Path getWifeFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        return wifeFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public void setWifeFilePath(Path wifeFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        requireNonNull(wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        this.wifeFilePath \u003d wifeFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 wifeFilePath.equals(o.wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        return Objects.hash(guiSettings, wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        sb.append(\"\\nLocal data file location : \" + wifeFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":12,"-":75}},{"path":"src/main/java/seedu/wife/model/Wife.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.UniqueFoodList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.UniqueTagList;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" * Wraps all data at the WIFE level","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" * Duplicates are not allowed (by .isSameFood comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"public class Wife implements ReadOnlyWife {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    private final UniqueFoodList foods;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        foods \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public Wife() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"     * Creates WIFE using the Foods and Tags in the {@code toBeCopied}","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public Wife(ReadOnlyWife toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        this();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"     * Replaces the contents of the food list with {@code foods}.","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code foods} must not contain duplicate foods.","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    public void setFoods(List\u003cFood\u003e foods) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        this.foods.setFoods(foods);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"     * Replaces the contents of the tag list with {@code tags}.","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setTags(List\u003cTag\u003e foods) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"        this.tags.setTags(foods);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"     * Resets the existing data of this {@code WIFE} with {@code newData}.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    public void resetData(ReadOnlyWife newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        setFoods(newData.getFoodList());","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"        setTags(newData.getTagList());","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"    //// tag-level operations","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns true if tag with the same name and expiry date as another {@code tag} exists in the WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"        return tags.contains(tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"ScorpiusSigma"},"content":"     * Creates tag to WIFE.","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"ScorpiusSigma"},"content":"     * The tag must not already exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"ScorpiusSigma"},"content":"    public void createTag(Tag t) {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"ScorpiusSigma"},"content":"        tags.add(t);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"ScorpiusSigma"},"content":"     * Replaces the given tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code target} must exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"ScorpiusSigma"},"content":"     * The tag of {@code editedTag} must not be the same as another existing tag in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"ScorpiusSigma"},"content":"        tags.setTag(target, editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"ScorpiusSigma"},"content":"     * Removes {@code key} from {@code WIFE}.","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code key} must exist in WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"ScorpiusSigma"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"ScorpiusSigma"},"content":"        tags.remove(key);","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"ScorpiusSigma"},"content":"    //// food-level operations","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"     * Returns true if food with the same name and expiry date as another {@code food} exists in the WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"    public boolean hasFood(Food food) {","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        requireNonNull(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"        return foods.contains(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"     * Adds food to WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"     * The food must not already exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"    public void addFood(Food p) {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        foods.add(p);","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"     * Replaces the given food {@code target} in the list with {@code editedFood}.","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"     * {@code target} must exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"ScorpiusSigma"},"content":"     * The food of {@code editedFood} must not be the same as another existing food in the WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"        requireNonNull(editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"        foods.setFood(target, editedFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"     * Removes {@code key} from {@code WIFE}.","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"     * {@code key} must exist in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"    public void removeFood(Food key) {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        foods.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"nigelteosw"},"content":"     * View {@code key} from {@code WIFE}.","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"nigelteosw"},"content":"     * {@code key} must exist in WIFE.","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"nigelteosw"},"content":"    public void viewFood(Food key) {","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"nigelteosw"},"content":"        foods.view(key);","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"ScorpiusSigma"},"content":"     * Sort {@code Food} in {@code WIFE}.","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"ScorpiusSigma"},"content":"     * Sorts by expiry date by default.","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"ScorpiusSigma"},"content":"    public void sortFood(Comparator\u003cFood\u003e cmp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"ScorpiusSigma"},"content":"        foods.sort(cmp);","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"    //// util methods","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"ScorpiusSigma"},"content":"        return foods.asUnmodifiableObservableList().size()","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"ScorpiusSigma"},"content":"            + \" foods \\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"ScorpiusSigma"},"content":"            + tags.asUnmodifiableObservableList().size()","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"ScorpiusSigma"},"content":"            + \" available tags\";","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"jnjy"},"content":"    public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"        return foods.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"ScorpiusSigma"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"ScorpiusSigma"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"jnjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"ScorpiusSigma"},"content":"                || (","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"ScorpiusSigma"},"content":"                    other instanceof Wife // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"ScorpiusSigma"},"content":"                    \u0026\u0026 foods.equals(((Wife) other).foods)","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"ScorpiusSigma"},"content":"                    \u0026\u0026 tags.equals(((Wife) other).tags)","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"ScorpiusSigma"},"content":"                );","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"jnjy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"ScorpiusSigma"},"content":"        return foods.hashCode() + tags.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":110,"nigelteosw":8,"ScorpiusSigma":79}},{"path":"src/main/java/seedu/wife/model/food/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.foodvalidator.ExpiryDateValidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * Represents a Food\u0027s expiry date.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" * Guarantees: Immutable; expiry date is validated in {@link ExpiryDateValidator#validate(String)}","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"public class ExpiryDate implements Comparable\u003cExpiryDate\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public static final DateTimeFormatter VALID_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    private final LocalDate expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"     * Constructs an {@code ExpiryDate} from String","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * @param date Expiry date of the food item wish to add in the fridge.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public ExpiryDate(String date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        ExpiryDateValidator.validate(date);","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        this.expiryDate \u003d LocalDate.parse(date, VALID_DATE_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * Constructs an {@code ExpiryDate} from formatted date.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     * Only used for loading food item upon startup.","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * @param date Expiry date of the food item wish to add in the fridge.","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    private ExpiryDate(LocalDate date) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        this.expiryDate \u003d date;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Produces an expiry date object for loading food item upon start up.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * @param date Expiry date of the food item wish to add in the fridge.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     * @return ExpiryDate object.","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    public static ExpiryDate of(String date) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        ExpiryDateValidator.validateOnLoad(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        return new ExpiryDate(LocalDate.parse(date, VALID_DATE_FORMAT));","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object otherDate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        return otherDate \u003d\u003d this","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"                || (otherDate instanceof ExpiryDate","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 expiryDate.equals(((ExpiryDate) otherDate).expiryDate));","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        return this.expiryDate.format(VALID_DATE_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"    public int compareTo(ExpiryDate ed) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"        if (this.expiryDate.isBefore(ed.expiryDate)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"            return -1;","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        if (this.expiryDate.isEqual(ed.expiryDate)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"            return 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        return 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":61,"ScorpiusSigma":14}},{"path":"src/main/java/seedu/wife/model/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * Represents Food stored in Well Informed Fridge Environment.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" * Guarantees: details are present and not null, field values are validated; immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"public class Food implements Comparable\u003cFood\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private Name foodName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    private Unit unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    private Quantity quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    private ExpiryDate expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * Constructs a {@code Food}","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * All field must be not null.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public Food(Name foodName, Unit unit, Quantity quantity, ExpiryDate expiryDate, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(foodName, unit, quantity, expiryDate, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        return this.foodName;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public Unit getUnit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        return this.unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        return this.quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        return this.expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     * **may need to be mutable in future implementation","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        return Collections.unmodifiableSet(this.tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"     * Removes the specified element from tags if it is present (optional operation).","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean removeTag(Tag tag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"        return this.tags.remove(tag);","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     * Returns a new tag set for edit, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    public Set\u003cTag\u003e getCurrentTags() {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        return new HashSet\u003cTag\u003e(this.tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"     * Creates a new food item with an updated tag list.","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    public Food createNewFoodWithNewTags(Food food, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        return new Food(food.getName(), food.getUnit(), food.getQuantity(), food.getExpiryDate(), tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"     * Returns True if two food items are the same.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"     * This uses a weaker equivalence relation as it checks only if two food items have the same name.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    public boolean isSameFood(Food otherFood) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        if (otherFood \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        return otherFood !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 foodName.equals(otherFood.getName())","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 expiryDate.equals(otherFood.getExpiryDate());","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        if (!(other instanceof Food)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        Food otherFood \u003d (Food) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"Bisceto"},"content":"        boolean equalsName \u003d otherFood.getName().equals(getName());","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"Bisceto"},"content":"        boolean equalsUnit \u003d otherFood.getUnit().equals((getUnit()));","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"Bisceto"},"content":"        boolean equalsQuantity \u003d otherFood.getQuantity().equals((getQuantity()));","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"Bisceto"},"content":"        boolean equalsExpiryDate \u003d otherFood.getExpiryDate().equals(getExpiryDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"Bisceto"},"content":"        boolean equalsTags \u003d otherFood.getTags().equals(getTags());","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"Bisceto"},"content":"        return equalsName \u0026\u0026 equalsUnit \u0026\u0026 equalsQuantity \u0026\u0026 equalsExpiryDate \u0026\u0026 equalsTags;","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Bisceto"},"content":"        return String.format(\"%s (expires on: %s)\", foodName, expiryDate);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ScorpiusSigma"},"content":"    public int compareTo(Food food) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"ScorpiusSigma"},"content":"        return this.expiryDate.compareTo(food.expiryDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":105,"Bisceto":9,"ScorpiusSigma":13}},{"path":"src/main/java/seedu/wife/model/food/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.StringUtil.capitalizeString;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Represent a food\u0027s name stored in WIFE.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Name once created is immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class Name {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Food name should not be blank and it should only contain \"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"            + \"alphanumeric characters and spaces\";","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public final String foodName;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"     * Construct a {@code foodName}","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"     * @param foodName A non-null name for the food item.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public Name(String foodName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        requireNonNull(foodName);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidFoodName(foodName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        this.foodName \u003d capitalizeString(foodName.toLowerCase());","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * Returns true if food name is an alphanumeric character.","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * @param foodName Name of the food given by user.","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * @return True if food name is valid, else false.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public static boolean isValidFoodName(String foodName) {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        return foodName.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        return this.foodName;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object otherName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        return otherName \u003d\u003d this","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"                || (otherName instanceof Name","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 foodName.equals(((Name) otherName).foodName));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        return this.foodName.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":52}},{"path":"src/main/java/seedu/wife/model/food/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Tests that a {@code Food}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cFood\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public boolean test(Food food) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSubstringIgnoreCase(food.getName().toString(), keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jnjy":5,"Bisceto":1,"-":25}},{"path":"src/main/java/seedu/wife/model/food/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Represents a Food\u0027s quantity in the fridge.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" * Guarantees: mutable with {@link #increaseQuantity(Quantity)} and {@link #decreaseQuantity(Quantity)};","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * quantity is validated in {@link #isValidQuantity(String)}","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class Quantity {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Quantity must be a value larger than 0\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public static final String MESSAGE_CHAR_CONSTRAINTS \u003d \"Quantity must be a number\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    public static final String DECREASE_CONSTRAINTS \u003d \"Quantity to decrease cannot be greater than or equal to the \"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"            + \"current quantity!\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final String VALIDATION_REGEX \u003d \"-?\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    private Integer quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     * Construct a {@code Quantity}","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * @param quantity Number of food item in the fridge.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public Quantity(String quantity) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        this.quantity \u003d Integer.parseInt(quantity);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * Returns the quantity value of food.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * @return The quantity value.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public Integer getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        return this.quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * Returns true if the quantity is of value more than 0.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     * @param quantity Number of item user wish to add into the fridge.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     * @return True if quantity is a valid quantity, else False.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public static boolean isValidQuantity(String quantity) {","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        return quantity.matches(VALIDATION_REGEX) \u0026\u0026 Integer.parseInt(quantity) \u003e 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     * Returns true if the quantity is not a character.","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"     * @param quantity","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"     * @return True if quantity is a valid quantity, else False.","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"    public static boolean isNotChar(String quantity) {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"            Integer.parseInt(quantity);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"            return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"     * Increases the current quantity by a valid integer.","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"     * @param increasedQuantity Value of the quantity to increase by.","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"     * @return The new quantity value.","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"    public Quantity increaseQuantity(Quantity increasedQuantity) {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"        assert increasedQuantity !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"        return new Quantity(String.valueOf(this.quantity + increasedQuantity.getValue()));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"     * Decreases the current quantity by a valid integer.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"     * @param decreasedQuantity Value of the quantity to decrease by.","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"     * @return The new quantity value.","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"    public Quantity decreaseQuantity(Quantity decreasedQuantity) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"        assert decreasedQuantity !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"        if (decreasedQuantity.quantity \u003e\u003d this.quantity) {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"            throw new CommandException(DECREASE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"        return new Quantity(String.valueOf(this.quantity - decreasedQuantity.getValue()));","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"Bisceto"},"content":"    public boolean equals(Object otherQuantity) {","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"Bisceto"},"content":"        return otherQuantity \u003d\u003d this","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"Bisceto"},"content":"                || (otherQuantity instanceof Quantity","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"Bisceto"},"content":"                \u0026\u0026 quantity.equals(((Quantity) otherQuantity).quantity));","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        return this.quantity.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":53,"nigelteosw":14,"Bisceto":34}},{"path":"src/main/java/seedu/wife/model/food/UniqueFoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.exceptions.DuplicateFoodException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.exceptions.FoodNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" * A list of food that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":" * A food is considered unique by comparing using {@code Food#isSameFood(Food)}. As such, adding and updating of","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":" * foods uses Food#isSameFood(Food) for equality so as to ensure that the food being added or updated is","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" * unique in terms of identity in the UniqueFoodList. However, the removal of a person uses Food#equals(Object) so","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":" * as to ensure that the food with exactly the same fields will be removed.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":" * @see Food#isSameFood(Food)","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"public class UniqueFoodList implements Iterable\u003cFood\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private final ObservableList\u003cFood\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private final ObservableList\u003cFood\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"     * Returns true if the list contains an equivalent food as the given argument.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public boolean contains(Food toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * Adds a food item to the food list.","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * The food must not already exist in the food list.","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    public void add(Food toAdd) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"            throw new DuplicateFoodException();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     * Replaces the food {@code target} in the list with {@code editedFood}.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     * The food of {@code editedFood} must not be the same as another existing food in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        requireAllNonNull(target, editedFood);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"            throw new FoodNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"        if (!target.isSameFood(editedFood) \u0026\u0026 contains(editedFood)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"            throw new DuplicateFoodException();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        internalList.set(index, editedFood);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"     * Removes the equivalent food from the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"     * The food must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    public void remove(Food toRemove) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"            throw new FoodNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"     * Views the equivalent food from the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"     * The food must exist in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"    public void view(Food toView) {","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"        requireNonNull(toView);","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"        if (!internalList.contains(toView)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"            throw new FoodNotFoundException();","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"     * Replaces the old food list with a new food list.","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"     * @param replacement The new food list for replacement.","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    public void setFoods(UniqueFoodList replacement) {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"     * Replaces the contents of this list with {@code foods}.","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"     * {@code foods} must not contain duplicate food.","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"    public void setFoods(List\u003cFood\u003e foods) {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"        requireAllNonNull(foods);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        if (!foodsAreUnique(foods)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"            throw new DuplicateFoodException();","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        internalList.setAll(foods);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"ScorpiusSigma"},"content":"     * Sorts food items of this list with {@code Comparator}.","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"ScorpiusSigma"},"content":"    public void sort(Comparator\u003cFood\u003e cmp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"ScorpiusSigma"},"content":"        internalList.sort(cmp);","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"    public ObservableList\u003cFood\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"    public Iterator\u003cFood\u003e iterator() {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"                || (other instanceof UniqueFoodList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 internalList.equals(((UniqueFoodList) other).internalList));","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"     * Returns true if {@code foods} contains only unique foods.","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"    private boolean foodsAreUnique(List\u003cFood\u003e foods) {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"        for (int i \u003d 0; i \u003c foods.size() - 1; i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":"            for (int j \u003d i + 1; j \u003c foods.size(); j++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"jnjy"},"content":"                if (foods.get(i).isSameFood(foods.get(j))) {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"jnjy"},"content":"                    return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"        return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":139,"nigelteosw":11,"Bisceto":5,"ScorpiusSigma":8}},{"path":"src/main/java/seedu/wife/model/food/Unit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.StringUtil.capitalizeString;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * Represents the unit representation of the food item in WIFE","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"public class Unit {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public static final Integer UNIT_NAME_MAX_LENGTH \u003d 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]+\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Unit should only contain letters and cannot be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String UNIT_NAME_LENGTHY \u003d \"Unit should have maximum 10 characters.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public static final String UNIT_NOT_PRESENT \u003d \"Unit should not be empty. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"            + \"Please insert a unit for your food.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private String unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a {@code Unit}","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     * @param unit Unit representation user wish to classify their food item with.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public Unit(String unit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        requireNonNull(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        checkArgument(isUnitPresent(unit), UNIT_NOT_PRESENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        checkArgument(isUnitNotLengthy(unit), UNIT_NAME_LENGTHY);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidUnit(unit), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        this.unit \u003d capitalizeString(unit.toLowerCase());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * Returns true if the unit representation keyed in by the user only contains letters.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public static boolean isValidUnit(String unit) {","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return unit.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Returns true if the given name is not blank.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    public static Boolean isUnitPresent(String unit) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        return !unit.isBlank();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"     * Returns true if the given name has length not more than 10.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    public static Boolean isUnitNotLengthy(String unit) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        return unit.length() \u003c\u003d UNIT_NAME_MAX_LENGTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"    public boolean equals(Object otherUnit) {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        return otherUnit \u003d\u003d this","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"                || (otherUnit instanceof Unit","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"                \u0026\u0026 unit.equals(((Unit) otherUnit).unit));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        return this.unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":57,"Bisceto":7}},{"path":"src/main/java/seedu/wife/model/food/exceptions/DuplicateFoodException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Signals that the operation will result in duplicate Food (Food are considered duplicates if they have the same","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" * name and expiry date).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"public class DuplicateFoodException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"    public DuplicateFoodException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"        super(\"Operation would result in duplicate food, choose to update the quantity instead?\");","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":11}},{"path":"src/main/java/seedu/wife/model/food/exceptions/FoodNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Signals that the operation is unable to find the specified food.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public class FoodNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":6}},{"path":"src/main/java/seedu/wife/model/food/foodvalidator/ExpiryDateValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food.foodvalidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.model.food.ExpiryDate.VALID_DATE_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * Validator class to validate Expiry Date.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class ExpiryDateValidator implements FoodValidator {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_FORMAT_CONSTRAINTS \u003d \"Format of your date is incorrect. \"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"            + \"Please insert using the format DD-MM-YYYY\";","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DATE_NOT_EXIST \u003d \"The date you entered does not exist.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DATE_NOT_AFTER \u003d \"The date you entered should not be before today.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Checks if the date format is valid.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     * @param date Date entered by the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * @return True if format is valid.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public static boolean isValidDateFormat(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        return date.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     * Checks if the date is an actual calendar date.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * @param date Date entered by the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     * @return True if the date exists, else false.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public static boolean isDateExist(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"            LocalDate.parse(date, VALID_DATE_FORMAT.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        } catch (DateTimeException de) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     * Checks if the date is on or after the date of insertion of the food item.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"     * @param date Date entered by the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"     * @return True if the date is after the date of insertion, else false.","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    public static boolean isDateOnOrAfter(String date) {","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        LocalDate expiryDate \u003d LocalDate.parse(date, VALID_DATE_FORMAT);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        return !expiryDate.isBefore(dateNow);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"     * Validates the date before adding it into expiry date.","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"     * @param date Date input by the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    public static void validate(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidDateFormat(date), MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        checkArgument(isDateExist(date), MESSAGE_DATE_NOT_EXIST);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        checkArgument(isDateOnOrAfter(date), MESSAGE_DATE_NOT_AFTER);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     * Validates the expiry date before adding it into wife.","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"     * @param date Expiry date obtained from storage.","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    public static void validateOnLoad(String date) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidDateFormat(date), MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        checkArgument(isDateExist(date), MESSAGE_DATE_NOT_EXIST);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":77}},{"path":"src/main/java/seedu/wife/model/food/foodvalidator/FoodValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food.foodvalidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":" * Interface to validate string parsed to create food.","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"public interface FoodValidator {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"     * Validates the string input.","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"     * @param string String input by the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    static void validate(String string) {};","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":12}},{"path":"src/main/java/seedu/wife/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":" * Represents a Tag in the WIFE.","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" * Guarantees: immutable; name is valid as declared in {@link seedu.wife.model.tag.TagName#isValidTagName(String)}","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public final TagName tagName;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        this.tagName \u003d new TagName(tagName);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     * Returns the tag name of the {@code Tag}","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * @return","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        return this.tagName.toString();","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        return \u0027[\u0027 + tagName.toString() + \u0027]\u0027;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jnjy":10,"-":39}},{"path":"src/main/java/seedu/wife/model/tag/TagName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.StringUtil.capitalizeString;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * A class to store the name for every {@code Tag}","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"public class TagName {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public static final Integer TAG_NAME_MAX_LENGTH \u003d 15;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Your tag name violates the tag name convention. Please follow \"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"            + \"the below formats: \\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"            + \"1. Tag Name should not be empty\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"            + \"2. Tag name should only contain letters\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"            + \"3. Tag name should not be longer than 15 characters\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"^[a-zA-Z\\\\s]*$\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final String TAG_NAME_NOT_PRESENT \u003d \"Tag name should not be empty. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"            + \"Please insert a name for your tag.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public static final String TAG_NAME_LENGTHY \u003d \"Tag name should have maximum 15 characters.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_TAG_NAME \u003d \"Tags names should contain only letters.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    private final String tagName;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * Constructor to create a {@code TagName} object with validation checks on the input string.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     * @param tagName","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public TagName(String tagName) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        checkArgument(isNamePresent(tagName), TAG_NAME_NOT_PRESENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        checkArgument(isNameNotLengthy(tagName), TAG_NAME_LENGTHY);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        checkArgument(isValidString(tagName), INVALID_TAG_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        this.tagName \u003d capitalizeString(tagName.toLowerCase());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public static boolean isValidString(String test) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        return test.matches(NAME_VALIDATION_REGEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     * Returns true if the given name is not blank.","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    public static Boolean isNamePresent(String tagName) {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        return !tagName.isBlank();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"     * Returns true if the given name has length not more than 15.","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    public static Boolean isNameNotLengthy(String tagName) {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        return tagName.length() \u003c\u003d TAG_NAME_MAX_LENGTH;","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"     * Returns true is tag name satisfies the tag naming convention.","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    public static Boolean isValidTagName(String tagName) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        return isNameNotLengthy(tagName) \u0026\u0026 isNamePresent(tagName) \u0026\u0026 isValidString(tagName);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        return this.tagName;","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"                || (other instanceof TagName","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 tagName.equals(((TagName) other).toString()));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        return tagName.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jnjy":80}},{"path":"src/main/java/seedu/wife/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.model.tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.exceptions.TagStorageEmptyException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.exceptions.TagStorageFullException;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" * A tag is considered unique by comparing using {@code Tag#isSameTag(Tag)}. As such, adding and updating of","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":" * tags uses Tag#isSameTag(Tag) for equality so as to ensure that the tag being added or updated is","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":" * unique in terms of identity in the UniqueTagList. However, the removal of a tag uses Tag#equals(Object) so","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":" * as to ensure that the tag with exactly the same fields will be removed.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":" * @see Tag#equals(Object)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final Integer TAG_LIST_MAX_SIZE \u003d 50;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        if (isStorageFull()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"            throw new TagStorageFullException();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"     * Returns true if the storage is full, else false.","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    public boolean isStorageFull() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        return internalList.size() \u003d\u003d TAG_LIST_MAX_SIZE;","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"     * The tag of {@code editedTag} must not be the same as another existing tag in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        if (!target.equals(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"ScorpiusSigma"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"ScorpiusSigma"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"ScorpiusSigma"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"ScorpiusSigma"},"content":"        if (internalList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new TagStorageEmptyException();","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"ScorpiusSigma"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"     * Replace the content of this list with new {@code UniqueTagList}","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"ScorpiusSigma"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"ScorpiusSigma"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"ScorpiusSigma"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"ScorpiusSigma"},"content":"     * {@code tags} must not contain duplicate tag.","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"ScorpiusSigma"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"ScorpiusSigma"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"ScorpiusSigma"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"ScorpiusSigma"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"ScorpiusSigma"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"ScorpiusSigma"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"ScorpiusSigma"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"ScorpiusSigma"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"ScorpiusSigma"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"ScorpiusSigma"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"ScorpiusSigma"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"ScorpiusSigma"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"ScorpiusSigma"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"ScorpiusSigma"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"ScorpiusSigma"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"ScorpiusSigma"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        HashSet\u003cTag\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"            if (set.contains(tag)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"ScorpiusSigma"},"content":"                return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"jnjy"},"content":"            set.add(tag);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"ScorpiusSigma"},"content":"        return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jnjy":23,"ScorpiusSigma":138}},{"path":"src/main/java/seedu/wife/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.model.tag.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":" * Signals that the operation will result in duplicate Tag (Tag are considered duplicates if they have the same","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":" * name).","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"        super(","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"            \"Operation would result in duplicate tag, try adding tags that are not in the list?\"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"ScorpiusSigma":17}},{"path":"src/main/java/seedu/wife/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.model.tag.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"ScorpiusSigma":6}},{"path":"src/main/java/seedu/wife/model/tag/exceptions/TagStorageEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.model.tag.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":" * Signals that the operation is unable to execute on empty tag storage.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"public class TagStorageEmptyException extends RuntimeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"    public TagStorageEmptyException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"        super(\"Tag storage is empty.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"ScorpiusSigma":14}},{"path":"src/main/java/seedu/wife/model/tag/exceptions/TagStorageFullException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.model.tag.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":" * Signals that the operation cannot add new tags to full tag storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"public class TagStorageFullException extends RuntimeException {","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"     * Constructor","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"    public TagStorageFullException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"        super(","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"            \"Tag storage is full, please remove at existing tags in storage.\"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"ScorpiusSigma":16}},{"path":"src/main/java/seedu/wife/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":" * Contains utility methods for populating {@code WIFE} with sample data.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public static Food[] getSampleFood() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        return new Food[] {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            new Food(new Name(\"Meiji Milk\"), new Unit(\"Carton\"), new Quantity(\"2\"),","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"                new ExpiryDate(\"13-11-2024\"),","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"                getTagSet(\"dairy\")),","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        };","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    public static Tag[] getSampleTags() {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"        return new Tag[] {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"            new Tag(\"New\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"            new Tag(\"Used\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"            new Tag(\"Dairy\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"        };","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public static ReadOnlyWife getSampleWife() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        Wife sampleWife \u003d new Wife();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        for (Food sampleFood : getSampleFood()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"            sampleWife.addFood(sampleFood);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag sampleTag : getSampleTags()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"            sampleWife.createTag(sampleTag);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        return sampleWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":45,"ScorpiusSigma":13}},{"path":"src/main/java/seedu/wife/storage/JsonAdaptedFood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.foodvalidator.ExpiryDateValidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":" * Jackson-friendly version of {@link Food}.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"class JsonAdaptedFood {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Food\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private final String unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    private final String quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    private final String expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * Constructs a {@code JsonAdaptedFood} with the given food details.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    public JsonAdaptedFood(","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"unit\") String unit,","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"quantity\") String quantity,","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"expiryDate\") String expiryDate,","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     * Converts a given {@code Food} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    public JsonAdaptedFood(Food source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        unit \u003d source.getUnit().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        quantity \u003d source.getQuantity().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        expiryDate \u003d source.getExpiryDate().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     * Converts this Jackson-friendly adapted food object into the model\u0027s {@code Food} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted food.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    public Food toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"        final List\u003cTag\u003e foodTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"            foodTags.add(tag.toModelType());","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        if (!Name.isValidFoodName(name)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        if (unit \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Unit.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        if (!Unit.isValidUnit(unit)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        final Unit modelUnit \u003d new Unit(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"                    Quantity.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"                    ExpiryDate.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        if (!ExpiryDateValidator.isValidDateFormat(expiryDate)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(ExpiryDateValidator.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        final ExpiryDate modelExpiryDate \u003d ExpiryDate.of(expiryDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"ScorpiusSigma"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(foodTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        return new Food(modelName, modelUnit, modelQuantity, modelExpiryDate, modelTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":104,"ScorpiusSigma":11}},{"path":"src/main/java/seedu/wife/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.TagName;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        if (!TagName.isValidTagName(tagName)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            throw new IllegalValueException(TagName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jnjy":7,"-":42}},{"path":"src/main/java/seedu/wife/storage/JsonSerializableWife.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * An Immutable Wife that is serializable to JSON format.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"@JsonRootName(value \u003d \"wife\")","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"class JsonSerializableWife {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public static final String MESSAGE_DUPLICATE_FOODS \u003d \"Food list contains duplicate food(s).\";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"    public static final String MESSAGE_DUPLICATE_TAGS \u003d \"Tag list contains duplicate tag(s).\";","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private final List\u003cJsonAdaptedFood\u003e foods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * Constructs a {@code JsonSerializableFood} with the given foods.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    public JsonSerializableWife(","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"foods\") List\u003cJsonAdaptedFood\u003e foods,","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"    ) {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        this.foods.addAll(foods);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * Converts a given {@code ReadOnlyFood} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFood}.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    public JsonSerializableWife(ReadOnlyWife source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        foods.addAll(source.getFoodList().stream().map(JsonAdaptedFood::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        tags.addAll(source.getTagList().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"     * Converts Wife into the model\u0027s {@code Wife} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    public Wife toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        Wife wife \u003d new Wife();","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"        // Add food to WIFE","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        for (JsonAdaptedFood jsonAdaptedFood : foods) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"            Food food \u003d jsonAdaptedFood.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"            if (wife.hasFood(food)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FOODS);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"            wife.addFood(food);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"        // Creates Tags to WIFE","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        for (JsonAdaptedTag jsonAdaptedTag : tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"            Tag tag \u003d jsonAdaptedTag.toModelType();","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"            if (wife.hasTag(tag)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"ScorpiusSigma"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ScorpiusSigma"},"content":"            wife.createTag(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        return wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":58,"ScorpiusSigma":22}},{"path":"src/main/java/seedu/wife/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jnjy":5,"-":42}},{"path":"src/main/java/seedu/wife/storage/JsonWifeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.FileUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * A class to access Wife data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"public class JsonWifeStorage implements WifeStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonWifeStorage.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public JsonWifeStorage(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public Path getWifeFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        return filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public Optional\u003cReadOnlyWife\u003e readWife() throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return readWife(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"     * Similar to {@link #readWife()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    public Optional\u003cReadOnlyWife\u003e readWife(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"            Optional\u003cJsonSerializableWife\u003e jsonWife \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                    filePath, JsonSerializableWife.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"            if (!jsonWife.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"            return Optional.of(jsonWife.get().toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"        } catch (NumberFormatException | IllegalValueException ive) {","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public void saveWife(ReadOnlyWife wife) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        saveWife(wife, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"     * Similar to {@link #saveWife(ReadOnlyWife)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    public void saveWife(ReadOnlyWife wife, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        requireNonNull(wife);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableWife(wife), filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":77,"ScorpiusSigma":3}},{"path":"src/main/java/seedu/wife/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public interface Storage extends WifeStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    Path getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    Optional\u003cReadOnlyWife\u003e readWife() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    void saveWife(ReadOnlyWife wife) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":32}},{"path":"src/main/java/seedu/wife/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":" * Manages storage of Wife data in local storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    private WifeStorage wifeStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"     * Creates a {@code StorageManager} with the given {@code WifeStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public StorageManager(WifeStorage wifeStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        this.wifeStorage \u003d wifeStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wife methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    public Path getWifeFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        return wifeStorage.getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    public Optional\u003cReadOnlyWife\u003e readWife() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        return readWife(wifeStorage.getWifeFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    public Optional\u003cReadOnlyWife\u003e readWife(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        return wifeStorage.readWife(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"    public void saveWife(ReadOnlyWife wife) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        saveWife(wife, wifeStorage.getWifeFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ScorpiusSigma"},"content":"    public void saveWife(ReadOnlyWife wife, Path filePath) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        wifeStorage.saveWife(wife, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":72,"ScorpiusSigma":6}},{"path":"src/main/java/seedu/wife/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" * Represents a storage for {@link seedu.wife.model.UserPrefs}.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * Saves the given {@link seedu.wife.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jnjy":6,"-":30}},{"path":"src/main/java/seedu/wife/storage/WifeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * Represents a storage for {@link seedu.wife.model.Wife}.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public interface WifeStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    Path getWifeFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     * Returns Wife data as a {@link ReadOnlyWife}.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    Optional\u003cReadOnlyWife\u003e readWife() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * @see #getWifeFilePath()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    Optional\u003cReadOnlyWife\u003e readWife(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     * Saves the given {@link ReadOnlyWife} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"     * @param wife cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    void saveWife(ReadOnlyWife wife) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * @see #saveWife(ReadOnlyWife)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    void saveWife(ReadOnlyWife wife, Path filePath) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":45}},{"path":"src/main/java/seedu/wife/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    public void handleUserInput() {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        this.handleCommandEntered();","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"         * @see seedu.wife.logic.Logic#execute(String)","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jnjy":5,"rmj1405":4,"-":80}},{"path":"src/main/java/seedu/wife/ui/FoodCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"public class FoodCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private static final String FXML \u003d \"FoodListCard.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public final Food food;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    private Label unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    private Label quantity;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    private Label expiryDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"     * Creates a {@code FoodCode} with the given {@code Food} and index to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public FoodCard(Food food, int displayedIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        this.food \u003d food;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        name.setText(food.getName().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        unit.setText(food.getUnit().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        quantity.setText(food.getQuantity().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        expiryDate.setText(food.getExpiryDate().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        food.getTags().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.getTagName()))","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getTagName())));","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        if (!(other instanceof FoodCard)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        FoodCard card \u003d (FoodCard) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"                \u0026\u0026 food.equals(card.food);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jnjy":21,"-":56}},{"path":"src/main/java/seedu/wife/ui/FoodListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" * Panel containing the list of food.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"public class FoodListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    private static final String FXML \u003d \"FoodListPanel.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FoodListPanel.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    private ListView\u003cFood\u003e foodListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"     * Creates a {@code FoodListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public FoodListPanel(ObservableList\u003cFood\u003e foodList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        foodListView.setItems(foodList);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        foodListView.setCellFactory(listView -\u003e new FoodListViewCell());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Food} using a {@code FoodCard}.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    class FoodListViewCell extends ListCell\u003cFood\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        protected void updateItem(Food food, boolean empty) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"            super.updateItem(food, empty);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"            if (empty || food \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"                setText(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"                setGraphic(new FoodCard(food, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":49}},{"path":"src/main/java/seedu/wife/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.HelpMenu;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    public static final String HELP_MESSAGE \u003d \"For more information refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    private Label helpMenu;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        helpMenu.setText(HelpMenu.getGeneralHelp());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"     * Sets the message to be displayed on the help window","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"     *      specific to the command.","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"    public void setHelpMessage(String messageToSet) {","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"        assert !messageToSet.isEmpty() || !messageToSet.equals(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"        helpMenu.setText(messageToSet);","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":2,"rmj1405":16,"-":98}},{"path":"src/main/java/seedu/wife/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    private FoodListPanel foodListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    private Button enterButton;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"    private StackPane foodListPanelPlaceholder;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        foodListPanel \u003d new FoodListPanel(logic.getFilteredFoodList());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"        foodListPanelPlaceholder.getChildren().add(foodListPanel.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"rmj1405"},"content":"        foodListPanelPlaceholder.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"rmj1405"},"content":"                Color.valueOf(\"D9D9D9\"), new CornerRadii(5), null)));","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"rmj1405"},"content":"        resultDisplayPlaceholder.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"rmj1405"},"content":"                Color.valueOf(\"D9D9D9\"), new CornerRadii(5), null)));","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"rmj1405"},"content":"        this.commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"rmj1405"},"content":"        commandBoxPlaceholder.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"rmj1405"},"content":"                Color.valueOf(\"D9D9D9\"), new CornerRadii(5), null)));","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"rmj1405"},"content":"            helpWindow.getRoot().setAlwaysOnTop(true);","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"rmj1405"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"rmj1405"},"content":"        this.commandBox.handleUserInput();","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"jnjy"},"content":"    public FoodListPanel getFoodListPanel() {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"jnjy"},"content":"        return foodListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"jnjy"},"content":"     * @see seedu.wife.logic.Logic#execute(String)","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"rmj1405"},"content":"                helpWindow.setHelpMessage(commandResult.getHelpMessage());","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":13,"rmj1405":24,"-":176}},{"path":"src/main/java/seedu/wife/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":1,"-":27}},{"path":"src/main/java/seedu/wife/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":27}},{"path":"src/main/java/seedu/wife/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jnjy":1,"-":12}},{"path":"src/main/java/seedu/wife/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/wife_32.jpg\";","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":5,"rmj1405":1,"-":82}},{"path":"src/main/java/seedu/wife/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jnjy":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"\u003cStackPane minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"25.0\" prefWidth\u003d\"600.0\" promptText\u003d\"Enter command here...\" styleClass\u003d\"text-field\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"         \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"   \u003c/TextField\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"nigelteosw":5,"rmj1405":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 0px, 0, 3px, 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"    -fx-padding: 2px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: transparent, -fx-background ;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-insets: 5px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #D9D9D9;","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"rmj1405"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"rmj1405"},"content":".list-cell:filled:selected .cell_big_label {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"rmj1405"},"content":".list-cell:filled:selected .cell_small_label {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"rmj1405"},"content":".cell_small_label_constants {","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"rmj1405"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: #7e7e7e;","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"rmj1405"},"content":".list-cell:filled:selected .cell_small_label_constants {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: #c4bebe;","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":152,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"rmj1405"},"content":"     -fx-background-color: #D9D9D9;","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"rmj1405"},"content":"     -fx-border-color: #757d77;","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"nigelteosw"},"content":"     -fx-border-radius: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"nigelteosw"},"content":"     -fx-background-radius: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":171,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":203,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: derive(#D9D9D9, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"rmj1405"},"content":".menu .context-menu {","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":225,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"rmj1405"},"content":".enterButton {","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"rmj1405"},"content":"    -fx-border-color: #006994;","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"rmj1405"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"rmj1405"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"rmj1405"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #006994;","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-radius: 7px ;","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #006994;","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":253,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"nigelteosw"},"content":"    -fx-background-color: #005c80;","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"nigelteosw"},"content":"    /* -fx-border-color: white, white;","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-insets: 1 1 1 1, 0; */","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: derive(#1d1d1d, 80%);","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"rmj1405"},"content":"    -fx-background-insets: 4;","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 1 7 1 7;","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"nigelteosw"},"content":"/* .card_border {","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"nigelteosw"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"nigelteosw"},"content":"} */","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"nigelteosw"},"content":"    -fx-font-family: \"Overpass\";","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"nigelteosw"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"rmj1405"},"content":"#filterField, #wifeListPanel, #wifeWebpage {","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #D9D9D9, #D9D9D9, #D9D9D9, #D9D9D9;","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"rmj1405"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-03-13"},{"lineNumber":375,"author":{"gitId":"rmj1405"},"content":"    -fx-vgap: 10;","lastModifiedDate":"2023-03-13"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":380,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #ffe872;","lastModifiedDate":"2023-03-12"},{"lineNumber":381,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":382,"author":{"gitId":"rmj1405"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":383,"author":{"gitId":"rmj1405"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":384,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"rmj1405"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-12"},{"lineNumber":386,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":387,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":388,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":389,"author":{"gitId":"rmj1405"},"content":"#tags .veg {","lastModifiedDate":"2023-03-12"},{"lineNumber":390,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":391,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #bdf5aa;","lastModifiedDate":"2023-03-12"},{"lineNumber":392,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":393,"author":{"gitId":"rmj1405"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":394,"author":{"gitId":"rmj1405"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":395,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-12"},{"lineNumber":396,"author":{"gitId":"rmj1405"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-12"},{"lineNumber":397,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":398,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":399,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":400,"author":{"gitId":"rmj1405"},"content":"#tags .meat {","lastModifiedDate":"2023-03-12"},{"lineNumber":401,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":402,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #ee9d9d;","lastModifiedDate":"2023-03-12"},{"lineNumber":403,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":404,"author":{"gitId":"rmj1405"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":405,"author":{"gitId":"rmj1405"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":406,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-12"},{"lineNumber":407,"author":{"gitId":"rmj1405"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-12"},{"lineNumber":408,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":409,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":410,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":411,"author":{"gitId":"rmj1405"},"content":"#tags .dairy {","lastModifiedDate":"2023-03-12"},{"lineNumber":412,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":413,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #aed6ed;","lastModifiedDate":"2023-03-12"},{"lineNumber":414,"author":{"gitId":"rmj1405"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":415,"author":{"gitId":"rmj1405"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":416,"author":{"gitId":"rmj1405"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":417,"author":{"gitId":"rmj1405"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-12"},{"lineNumber":418,"author":{"gitId":"rmj1405"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-12"},{"lineNumber":419,"author":{"gitId":"rmj1405"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":420,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"nigelteosw":29,"rmj1405":99,"-":292}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    -fx-background: #d9d9d9;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rmj1405":1,"-":19}},{"path":"src/main/resources/view/FoodListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"\u003cStackPane minWidth\u003d\"0.0\" prefHeight\u003d\"105.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"card_border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"      \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER\" minHeight\u003d\"95.0\" prefHeight\u003d\"95.0\" styleClass\u003d\"card_border_inner\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"         \u003cVBox prefHeight\u003d\"200.0\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"                \u003cGridPane prefHeight\u003d\"70.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"                     \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"                    \u003cVBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"105.0\" prefWidth\u003d\"80.0\" spacing\u003d\"3.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"                        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"                            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"                                \u003cminWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"                                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"                                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"                                \u003c/minWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"                            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"                     \u003cHBox alignment\u003d\"CENTER_LEFT\" layoutX\u003d\"25.0\" layoutY\u003d\"88.0\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"                           \u003cLabel fx:id\u003d\"id111\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Expiry: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"                              \u003cminWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"                                 \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"                              \u003c/minWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"                           \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"                        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"                        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"                           \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"                        \u003cInsets left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"                  \u003cVBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"                        \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"                              \u003cLabel fx:id\u003d\"id11\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Qty: \"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"                                 \u003cminWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"                                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"                                 \u003c/minWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"                                 \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$quantity\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"                                 \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"                                    \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"                                 \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"                        \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"                              \u003cLabel fx:id\u003d\"id1\" styleClass\u003d\"cell_small_label_constants\" text\u003d\"Unit: \"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"                                 \u003cminWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"                                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"                                 \u003c/minWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"                                 \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"                                    \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"                                 \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"                                 \u003cLabel fx:id\u003d\"unit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$unit\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"                     \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"                     \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"                  \u003crowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"                     \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"                  \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"250.0\" prefWidth\u003d\"400.0\" prefWrapLength\u003d\"10000.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"                     \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"               \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"nigelteosw"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jnjy":23,"nigelteosw":8,"rmj1405":79}},{"path":"src/main/resources/view/FoodListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    \u003cListView fx:id\u003d\"foodListView\" VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"   \u003c/ListView\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jnjy":6,"nigelteosw":2,"rmj1405":5}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"#copyButton, #helpMessage, #helpMenu {","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"rmj1405":7,"-":14}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"               \u003cVBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"7.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"                     \u003cLabel fx:id\u003d\"helpMenu\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"                     \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"                      \u003cLabel fx:id\u003d\"helpMessage\" alignment\u003d\"BOTTOM_LEFT\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"                      \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"BOTTOM_RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"rmj1405":15,"-":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"\u003cfx:root alwaysOnTop\u003d\"true\" height\u003d\"150.0\" maxHeight\u003d\"900.0\" maxWidth\u003d\"1200.0\" minHeight\u003d\"650.0\" minWidth\u003d\"730.0\" onCloseRequest\u003d\"#handleExit\" resizable\u003d\"false\" title\u003d\"WIFE\" type\u003d\"javafx.stage.Stage\" width\u003d\"730.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\" minWidth\u003d\"680.0\" styleClass\u003d\"background\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" stylesheets\u003d\"@DarkTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"680.0\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"              \u003cVBox fx:id\u003d\"foodList\" maxWidth\u003d\"450.0\" minWidth\u003d\"450.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"                \u003cStackPane fx:id\u003d\"foodListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"CENTER_RIGHT\" minWidth\u003d\"280.0\" prefWidth\u003d\"280.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"            \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"550.0\" prefHeight\u003d\"33.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"                \u003cButton fx:id\u003d\"addFoodButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"33.0\" prefWidth\u003d\"90.0\" styleClass\u003d\"enterButton\" stylesheets\u003d\"@DarkTheme.css\" text\u003d\"Enter\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nigelteosw":15,"rmj1405":15,"-":42}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_RIGHT\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"rmj1405":2,"-":6}},{"path":"src/test/java/seedu/wife/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"jnjy":1,"-":57}},{"path":"src/test/java/seedu/wife/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jnjy":1,"-":26}},{"path":"src/test/java/seedu/wife/commons/core/HelpMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"public class HelpMenuTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    void parseCommand_invalidArg_returnsInvalidSuccess() {","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"        //non-existent command","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"        String invalidArg \u003d \"abcdef\";","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"        assertEquals(HelpMenu.INVALID, HelpMenu.parseCommand(invalidArg));","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"        //empty string","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        String emptyArg \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"        assertEquals(HelpMenu.INVALID, HelpMenu.parseCommand(emptyArg));","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        //null input","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        assertEquals(HelpMenu.INVALID, HelpMenu.parseCommand(null));","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    void parseCommand_validArg_returnsCommandSuccess() {","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        //valid command","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"        String validArgAdd \u003d \"add\";","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        assertEquals(HelpMenu.ADD, HelpMenu.parseCommand(validArgAdd));","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    void getCommandUsage_checkCorrectResult_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        String expected \u003d \"Add food item - add n/NAME u/UNIT q/QUANTITY e/EXPIRY DATE\";","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        assertEquals(expected, HelpMenu.ADD.getCommandUsage());","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    void displayHelpMenu_checkCorrectOutput_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        String expected \u003d \"Type \u0027help COMMAND\u0027 to see specific help for a command.\"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"                + System.lineSeparator()","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"                + \"Commands Available: add, edit, dec, inc, delete, find, list, expiry, view, \"","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"                + \"tag, untag, delbytag, listbytag, createtag, deltag, listtag, clear, help, exit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        String actual \u003d HelpMenu.displayHelpMenu();","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nigelteosw":1,"rmj1405":42}},{"path":"src/test/java/seedu/wife/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":2,"-":133}},{"path":"src/test/java/seedu/wife/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.core.index;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jnjy":2,"-":58}},{"path":"src/test/java/seedu/wife/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jnjy":2,"-":34}},{"path":"src/test/java/seedu/wife/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"jnjy":3,"-":105}},{"path":"src/test/java/seedu/wife/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Config;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jnjy":4,"-":112}},{"path":"src/test/java/seedu/wife/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":2,"-":21}},{"path":"src/test/java/seedu/wife/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.TestUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":3,"-":42}},{"path":"src/test/java/seedu/wife/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.commons.util;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"    //---------------- Tests for capitalizeString --------------------------------------","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"    public void capitalizeString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"        assertEquals(\"Testtest\", StringUtil.capitalizeString(\"testtest\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"        assertEquals(\"Test Test\", StringUtil.capitalizeString(\"test test\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"        assertEquals(\"Can Food\", StringUtil.capitalizeString(\"can Food\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        assertEquals(\"Can Food\", StringUtil.capitalizeString(\"Can food\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jnjy":12,"-":141}},{"path":"src/test/java/seedu/wife/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.ListCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.JsonWifeStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.storage.StorageManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        JsonWifeStorage wifeStorage \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"                new JsonWifeStorage(temporaryFolder.resolve(\"wife.json\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        StorageManager storage \u003d new StorageManager(wifeStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    public void getFilteredFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFoodList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"    private static class JsonWifeIoExceptionThrowingStub extends JsonWifeStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        private JsonWifeIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        public void saveWife(ReadOnlyWife wife, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jnjy":25,"-":109}},{"path":"src/test/java/seedu/wife/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", \"\", false, false)));","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", \"\", true, false)));","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", \"\", false, true)));","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", \"\", true, false).hashCode());","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", \"\", false, true).hashCode());","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"jnjy":1,"rmj1405":5,"-":48}},{"path":"src/test/java/seedu/wife/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_TAG_NEW \u003d \"NEW\";","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_TAG_USED \u003d \"USED\";","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_TAG_TEST \u003d \"TEST\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_NAME_MEIJI \u003d \"MEIJI\";","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_UNIT_MEIJI \u003d \"Carton\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_QUANTITY_MEIJI \u003d \"2\";","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_EXPIRY_DATE_MEIJI \u003d \"13-11-2024\";","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_TAG_DAIRY \u003d \"DAIRY\";","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_NAME_CHOCOLATE \u003d \"Chocolate\";","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_UNIT_CHOCOLATE \u003d \"Bar\";","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"    public static final String VALID_QUANTITY_CHOCOLATE \u003d \"3\";","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_EXPIRY_DATE_CHOCOLATE \u003d \"14-11-2024\";","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_TAG_CHOCOLATE \u003d \"CHOCOLATE\";","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    public static final String VALID_QUANTITY_INCREASE \u003d \"10\";","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"    public static final String VALID_QUANTITY_DECREASE \u003d \"1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    public static final String INVALID_QUANTITY_DECREASE \u003d \"100\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    public static final String VALID_QUANTITY_DEC_MEIJI \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_DECREASE;","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    public static final String INVALID_QUANTITY_DEC_MEIJI \u003d \" \" + PREFIX_QUANTITY + INVALID_QUANTITY_DECREASE;","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public static final String NAME_DESC_MEIJI \u003d \" \" + PREFIX_NAME + VALID_NAME_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public static final String UNIT_DESC_MEIJI \u003d \" \" + PREFIX_UNIT + VALID_UNIT_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    public static final String QUANTITY_DESC_MEIJI \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    public static final String EXPIRY_DATE_DESC_MEIJI \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    public static final String TAG_DESC_MEIJI \u003d \" \" + PREFIX_TAG + VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    public static final String NAME_DESC_CHOCOLATE \u003d \" \" + PREFIX_NAME + VALID_NAME_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public static final String UNIT_DESC_CHOCOLATE \u003d \" \" + PREFIX_UNIT + VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    public static final String QUANTITY_DESC_CHOCOLATE \u003d \" \" + PREFIX_QUANTITY + VALID_QUANTITY_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    public static final String EXPIRY_DATE_DESC_CHOCOLATE \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    public static final String TAG_DESC_CHOCOLATE \u003d \" \" + PREFIX_TAG + VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Meiji\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_UNIT_DESC \u003d \" \" + PREFIX_UNIT + \"C@rton\"; // \u0027@\u0027 not allowed in phones","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \" + PREFIX_QUANTITY + \"-1\"; // value \u003c 0","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"    public static final String INVALID_QUANTITY_STRING \u003d \" \" + PREFIX_QUANTITY + \"s\"; // value not integer","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_EXPIRY_DATE_DESC \u003d \" \" + PREFIX_EXPIRY_DATE + \"13112024\"; // date not formatted","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"dairy*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    public static final String VALID_FIRST_INDEX_ID \u003d \"1\";","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public static final String TAG_DESCRIPTION_DAIRY \u003d PREFIX_NAME + VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    // test util for Tag\\","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_TAG_NAME_EMPTY_NAME \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_TAG_NAME_CONTAIN_SYMBOL \u003d \"Cre@m\";","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    public static final String INVALID_TAG_NAME_TOO_LENGTHY \u003d \"VegetablesHealthy\";","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    public static final EditCommand.EditFoodDescriptor DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    public static final EditCommand.EditFoodDescriptor DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        DESC_MEIJI \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"                .withName(VALID_NAME_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        DESC_CHOCOLATE \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"                .withName(VALID_NAME_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"     * - the address book, filtered Food list and selected Food in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        Wife expectedWife \u003d new Wife(actualModel.getWife());","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFoodList());","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedWife, actualModel.getWife());","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFoodList());","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Food at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"    public static void showFoodAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"        Food food \u003d model.getFilteredFoodList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"        final String[] splitName \u003d food.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredFoodList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        assertEquals(1, model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jnjy":74,"nigelteosw":1,"Bisceto":7,"-":65}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public void execute_newFood_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        Food validFood \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        expectedModel.addFood(validFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        assertCommandSuccess(new AddCommand(validFood), model,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validFood), expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateFood_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        Food foodInList \u003d model.getWife().getFoodList().get(0);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(new AddCommand(foodInList), model, AddCommand.MESSAGE_DUPLICATE_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jnjy":19,"-":26}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_SUCCESS_MESSAGE \u003d \"New food added: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_FAILURE_DUPLICATE_FOOD \u003d \"This food item already exists in WIFE\";","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public void constructor_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public void execute_foodAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        ModelStubAcceptingFoodAdded modelStub \u003d new ModelStubAcceptingFoodAdded();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        Food validFood \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        CommandResult commandResult \u003d new AddCommand(validFood).execute(modelStub);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        assertEquals(String.format(EXPECTED_SUCCESS_MESSAGE, validFood), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        assertEquals(Arrays.asList(validFood), modelStub.foodAdded);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateFood_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        Food validFood \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        AddCommand addCommand \u003d new AddCommand(validFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        ModelStub modelStub \u003d new ModelStubWithFood(validFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        assertThrows(CommandException.class, EXPECTED_FAILURE_DUPLICATE_FOOD, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        Food meiji \u003d new FoodBuilder().withName(\"Meiji\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        Food chocolate \u003d new FoodBuilder().withName(\"Chocolate\").build();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        AddCommand addMeijiCommand \u003d new AddCommand(meiji);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        AddCommand addChocolateCommand \u003d new AddCommand(chocolate);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        assertTrue(addMeijiCommand.equals(addMeijiCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        AddCommand addMeijiCommandCopy \u003d new AddCommand(meiji);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        assertTrue(addMeijiCommand.equals(addMeijiCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        assertFalse(addMeijiCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        assertFalse(addMeijiCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        // different Food -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        assertFalse(addMeijiCommand.equals(addChocolateCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    public static class ModelStub implements Model {","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        public Path getWifeFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        public void setWifeFilePath(Path wifeFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"ScorpiusSigma"},"content":"        public void createTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        public void setWife(ReadOnlyWife newData) {","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        public ReadOnlyWife getWife() {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"        public void deleteTag(Tag tag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"        public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"ScorpiusSigma"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"ScorpiusSigma"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"        public void deleteFood(Food target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"        public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"ScorpiusSigma"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"ScorpiusSigma"},"content":"        public void sortFilteredFoodListByExpiryDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"jnjy"},"content":"        public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"ScorpiusSigma"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"ScorpiusSigma"},"content":"        public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"ScorpiusSigma"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"jnjy"},"content":"        public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"nigelteosw"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"nigelteosw"},"content":"        public void viewFood(Food food) {","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"nigelteosw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"jnjy"},"content":"     * A Model stub that contains a single Food.","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"jnjy"},"content":"    private class ModelStubWithFood extends ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"jnjy"},"content":"        private final Food food;","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"jnjy"},"content":"        ModelStubWithFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"jnjy"},"content":"            requireNonNull(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"jnjy"},"content":"            this.food \u003d food;","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"jnjy"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"jnjy"},"content":"            requireNonNull(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"jnjy"},"content":"            return this.food.isSameFood(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"jnjy"},"content":"     * A Model stub that always accept the Food being added.","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"jnjy"},"content":"    private class ModelStubAcceptingFoodAdded extends ModelStub {","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"jnjy"},"content":"        final ArrayList\u003cFood\u003e foodAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"jnjy"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"jnjy"},"content":"            requireNonNull(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"jnjy"},"content":"            return foodAdded.stream().anyMatch(food::isSameFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"jnjy"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"jnjy"},"content":"            requireNonNull(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"jnjy"},"content":"            foodAdded.add(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"jnjy"},"content":"        public ReadOnlyWife getWife() {","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"jnjy"},"content":"            return new Wife();","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jnjy":97,"nigelteosw":5,"-":128,"ScorpiusSigma":16}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/DecreaseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_QUANTITY_DECREASE;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_DECREASE;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.DecreaseFoodDescriptorBuilder;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"public class DecreaseCommandTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    public void execute_quantitySpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        Integer newQuantity \u003d lastFood.getQuantity().getValue() - Integer.parseInt(VALID_QUANTITY_DECREASE);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"        String newQuantityString \u003d newQuantity.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        Food decreasedFood \u003d foodInList.withQuantity(newQuantityString).build();","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand.DecreaseFoodDescriptor descriptor \u003d new DecreaseFoodDescriptorBuilder()","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"                .withQuantity(VALID_QUANTITY_DECREASE)","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand decreaseCommand \u003d new DecreaseCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(DecreaseCommand.MESSAGE_DECREASE_FOOD_SUCCESS, decreasedFood) + \" by \"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"                + descriptor.getQuantity();","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        expectedModel.setFood(lastFood, decreasedFood);","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        assertCommandSuccess(decreaseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"    public void execute_quantityUnspecifiedUnfilteredList_success() {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"        Integer newQuantity \u003d lastFood.getQuantity().getValue() - 1;","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        String newQuantityString \u003d newQuantity.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        Food decreasedFood \u003d foodInList.withQuantity(newQuantityString).build();","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        expectedModel.setFood(lastFood, decreasedFood);","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand.DecreaseFoodDescriptor descriptor \u003d new DecreaseCommand.DecreaseFoodDescriptor();","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand decreaseCommand \u003d new DecreaseCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(DecreaseCommand.MESSAGE_DECREASE_FOOD_SUCCESS, decreasedFood) + \" by \"","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"                + descriptor.getQuantity();","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"        assertCommandSuccess(decreaseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"    public void execute_quantityExcessUnfilteredList_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand.DecreaseFoodDescriptor descriptor \u003d new DecreaseFoodDescriptorBuilder()","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"                .withQuantity(INVALID_QUANTITY_DECREASE)","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand decreaseCommand \u003d new DecreaseCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"        String failureMessage \u003d Quantity.DECREASE_CONSTRAINTS;","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"        assertCommandFailure(decreaseCommand, model, failureMessage);","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"Bisceto":79}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/DeleteByTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWifeWithoutFoodTag;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * {@code DeleteByTagCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteByTagCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model model;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"        expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_validTag_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"        DeleteByTagCommand deleteByTagCommand \u003d new DeleteByTagCommand(new Tag(VALID_TAG_CHOCOLATE));","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(deleteByTagCommand.execute(expectedModel), deleteByTagCommand.execute(model));","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_invalidTag_deletesNothing() {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"        this.model \u003d new ModelManager(getTypicalWifeWithoutFoodTag(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"        this.expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        DeleteByTagCommand deleteByTagCommand \u003d new DeleteByTagCommand(new Tag(VALID_TAG_CHOCOLATE));","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(deleteByTagCommand.execute(expectedModel), deleteByTagCommand.execute(model));","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ScorpiusSigma":49}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        Food foodToDelete \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FOOD_SUCCESS, foodToDelete);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        expectedModel.deleteFood(foodToDelete);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFoodList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(deleteCommand, model, MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        Food foodToDelete \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FOOD_SUCCESS, foodToDelete);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        expectedModel.deleteFood(foodToDelete);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        showNoFood(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"ScorpiusSigma"},"content":"        // ensures that outOfBoundIndex is still in bounds of wife list","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getWife().getFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"        // different food -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"     * Updates {@code model}\u0027s filtered list to show no food.","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"    private void showNoFood(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        model.updateFilteredFoodList(p -\u003e false);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        assertTrue(model.getFilteredFoodList().isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jnjy":41,"-":65,"ScorpiusSigma":2}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        Food editedFood \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder(editedFood).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FOOD, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        expectedModel.setFood(model.getFilteredFoodList().get(0), editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        Food editedFood \u003d foodInList.withName(VALID_NAME_CHOCOLATE).withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_NAME_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE).build();","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        expectedModel.setFood(lastFood, editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FOOD, new EditFoodDescriptor());","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        Food editedFood \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        Food foodInFilteredList \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        Food editedFood \u003d new FoodBuilder(foodInFilteredList).withName(VALID_NAME_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FOOD,","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"                new EditFoodDescriptorBuilder().withName(VALID_NAME_CHOCOLATE).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        expectedModel.setFood(model.getFilteredFoodList().get(0), editedFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateFoodUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        Food firstFood \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder(firstFood).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_FOOD, descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateFoodFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"Bisceto"},"content":"        // edit Food in filtered list into a duplicate in WIFE","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        Food foodInList \u003d model.getWife().getFoodList().get(INDEX_SECOND_FOOD.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FOOD,","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"                new EditFoodDescriptorBuilder(foodInList).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"    public void execute_invalidFoodIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFoodList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_NAME_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"Bisceto"},"content":"     * but smaller than size of food list.","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"    public void execute_invalidFoodIndexFilteredList_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getWife().getFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"                new EditFoodDescriptorBuilder().withName(VALID_NAME_CHOCOLATE).build());","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_FOOD, DESC_MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor copyDescriptor \u003d new EditFoodDescriptor(DESC_MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_FOOD, copyDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_FOOD, DESC_MEIJI)));","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_FOOD, DESC_CHOCOLATE)));","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jnjy":73,"Bisceto":9,"-":92}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/EditFoodDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"public class EditFoodDescriptorTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptorWithSameValues \u003d new EditFoodDescriptor(DESC_MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        assertTrue(DESC_MEIJI.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        assertTrue(DESC_MEIJI.equals(DESC_MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(DESC_CHOCOLATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor editedChocolate \u003d new EditFoodDescriptorBuilder(DESC_MEIJI)","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"                .withName(VALID_NAME_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(editedChocolate));","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        // different unit -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        editedChocolate \u003d new EditFoodDescriptorBuilder(DESC_MEIJI)","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(editedChocolate));","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        editedChocolate \u003d new EditFoodDescriptorBuilder(DESC_MEIJI)","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(editedChocolate));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        // different expiry date -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        editedChocolate \u003d new EditFoodDescriptorBuilder(DESC_MEIJI)","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        assertFalse(DESC_MEIJI.equals(editedChocolate));","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":61}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_FOODS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalFood.CHOCOLATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"    public void execute_zeroKeywords_noFoodFound() {","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FOODS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        expectedModel.updateFilteredFoodList(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFoodList());","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"    public void execute_multipleKeywords_multipleFoodsFound() {","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FOODS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Meij Brey\");","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        expectedModel.updateFilteredFoodList(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        assertEquals(Arrays.asList(MEIJI, CHOCOLATE), model.getFilteredFoodList());","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jnjy":14,"Bisceto":9,"-":61}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/IncreaseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_INCREASE;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand.IncreaseFoodDescriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.IncreaseFoodDescriptorBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code IncreaseCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"public class IncreaseCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    public void execute_quantitySpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        Integer newQuantity \u003d lastFood.getQuantity().getValue() + Integer.parseInt(VALID_QUANTITY_INCREASE);","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"        String newQuantityString \u003d newQuantity.toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        Food increasedFood \u003d foodInList.withQuantity(newQuantityString).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        IncreaseFoodDescriptor descriptor \u003d new IncreaseFoodDescriptorBuilder().withQuantity(VALID_QUANTITY_INCREASE)","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(IncreaseCommand.MESSAGE_INCREASE_FOOD_SUCCESS, increasedFood) + \" by \"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"                + descriptor.getQuantity();","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        expectedModel.setFood(lastFood, increasedFood);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        assertCommandSuccess(increaseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"    public void execute_quantityUnspecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        Integer newQuantity \u003d lastFood.getQuantity().getValue() + 1;","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        String newQuantityString \u003d newQuantity.toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        Food increasedFood \u003d foodInList.withQuantity(newQuantityString).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        expectedModel.setFood(lastFood, increasedFood);","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"        IncreaseFoodDescriptor descriptor \u003d new IncreaseFoodDescriptor();","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"        IncreaseCommand increaseCommand \u003d new IncreaseCommand(indexLastFood, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"        String expectedMessage \u003d String.format(IncreaseCommand.MESSAGE_INCREASE_FOOD_SUCCESS, increasedFood) + \" by \"","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"                + descriptor.getQuantity();","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"        assertCommandSuccess(increaseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Bisceto":68}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/ListByTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListByTagCommand.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"public class ListByTagCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model model;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"        expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_listIsNotFiltered_showsFoodThatMatchesTagDairy() {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"        ListByTagCommand command \u003d new ListByTagCommand(new Tag(VALID_TAG_DAIRY));","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(command.execute(expectedModel), command.execute(model));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_listIsNotFiltered_showsFoodThatMatchesTagDairyAndNotWithTest() {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"        HashSet\u003cTag\u003e testHashSet \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"        testHashSet.add(new Tag(VALID_TAG_DAIRY));","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"        testHashSet.add(new Tag(\"Test\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"        ListByTagCommand command \u003d new ListByTagCommand(testHashSet);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(command.execute(expectedModel), command.execute(model));","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ScorpiusSigma":48}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jnjy":11,"-":28}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/SortByExpiryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortByExpiryCommandTest.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"public class SortByExpiryCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model model;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"        expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"        assertCommandSuccess(new SortByExpiryCommand(), model, SortByExpiryCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ScorpiusSigma":31}},{"path":"src/test/java/seedu/wife/logic/commands/foodcommands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package seedu.wife.logic.commands.foodcommands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    private Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        Food foodToView \u003d model.getFilteredFoodList().get(INDEX_FIRST_FOOD.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_FOOD_SUCCESS, foodToView);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getWife(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        expectedModel.viewFood(foodToView);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFoodList().size() + 1);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        showFoodAtIndex(model, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"        // ensures that outOfBoundIndex is still in bounds of wife book list","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getWife().getFoodList().size());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_FOOD_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_FOOD);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"        // different food -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"nigelteosw":84,"ScorpiusSigma":3}},{"path":"src/test/java/seedu/wife/logic/commands/generalcommands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public void execute_emptyWife_success() {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public void execute_nonEmptyWife_success() {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        Model model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        expectedModel.setWife(new Wife());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jnjy":12,"-":20}},{"path":"src/test/java/seedu/wife/logic/commands/generalcommands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.generalcommands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"                \"\", false, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jnjy":6,"rmj1405":2,"-":14}},{"path":"src/test/java/seedu/wife/logic/commands/generalcommands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.generalcommands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.generalcommands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, \"help message\", true, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        assertCommandSuccess(new HelpCommand(\"help message\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jnjy":6,"rmj1405":2,"-":13}},{"path":"src/test/java/seedu/wife/logic/commands/tagcommands/CreateTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.foodcommands.AddCommandTest.ModelStub;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.TagBuilder;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":" * A class to test the CreateTagCommand.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"public class CreateTagCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_ERROR_DUPLICATE \u003d \"The tag you are trying to create has been created before.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_SUCCESS_MESSAGE \u003d \"Tag(s) successfully created:\\n%s\";","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public void constructor_nullTag_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateTagCommand((Tag) null));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    public void execute_tagAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        ModelStubAcceptingTagAdded modelStub \u003d new ModelStubAcceptingTagAdded();","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        Tag validTag \u003d new TagBuilder().build();","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        CommandResult commandResult \u003d new CreateTagCommand(validTag).execute(modelStub);","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        String expectedOutput \u003d String.format(EXPECTED_SUCCESS_MESSAGE, validTag.getTagName());","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedOutput, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        assertEquals(List.of(validTag), modelStub.tagsAdded);","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        Tag validTag \u003d new TagBuilder().build();","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        CreateTagCommand newTagCommand \u003d new CreateTagCommand(validTag);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        ModelStub modelStub \u003d new ModelStubWithTag(validTag);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                EXPECTED_ERROR_DUPLICATE, () -\u003e newTagCommand.execute(modelStub));","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    public void equals() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        Tag dairyTag \u003d new TagBuilder().withTagName(\"dairy\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        Tag dairyTagDifferentCase \u003d new TagBuilder().withTagName(\"daIRy\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        Tag vegetableTag \u003d new TagBuilder().withTagName(\"vegetable\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        CreateTagCommand addDairyTag \u003d new CreateTagCommand(dairyTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        CreateTagCommand addDairyTagDifferentCase \u003d new CreateTagCommand(dairyTagDifferentCase);","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ScorpiusSigma"},"content":"        CreateTagCommand addVegetableTag \u003d new CreateTagCommand(vegetableTag);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        // same tag name values -\u003e return true","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        assertEquals(addDairyTag, addDairyTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        assertEquals(addDairyTag, addDairyTagDifferentCase);","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        // same tag name but different command object -\u003e returns true","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        CreateTagCommand addDairyTagCopy \u003d new CreateTagCommand(dairyTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        assertEquals(addDairyTag, addDairyTagCopy);","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(\"dairy\", addDairyTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(null, addDairyTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(addDairyTag, addVegetableTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"     * A Model stub that contains a single item.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    private static class ModelStubWithTag extends ModelStub {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        private final Tag tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        ModelStubWithTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"            requireNonNull(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"            requireNonNull(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"            return this.tag.equals(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"     * A Model stub that always accept the item being added.","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    private static class ModelStubAcceptingTagAdded extends ModelStub {","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        final ArrayList\u003cTag\u003e tagsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"            requireNonNull(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"            return tagsAdded.stream().anyMatch(tag::equals);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"ScorpiusSigma"},"content":"        public void createTag(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"            requireNonNull(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"            tagsAdded.add(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        public ReadOnlyWife getWife() {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"            return new Wife();","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":119,"ScorpiusSigma":4}},{"path":"src/test/java/seedu/wife/logic/commands/tagcommands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.CommandResult;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.testutil.TypicalTag;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":" * A class to test the DeleteTagCommand.","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    private Model model;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"        model \u003d new ModelManager(getTypicalWife(), new UserPrefs());","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_deleteTagNotInPredefined_showError() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(new Tag(\"Test\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTagCommand.execute(model));","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"    public void execute_deleteTagInPredefined_showSuccess() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ScorpiusSigma"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(TypicalTag.CHOCOLATE_TAG);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        CommandResult commandResult \u003d new CommandResult(","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"ScorpiusSigma"},"content":"            DeleteTagCommand.MESSAGE_TAG_DELETE_SUCCESS","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ScorpiusSigma"},"content":"            + \"\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"ScorpiusSigma"},"content":"            + TypicalTag.CHOCOLATE_TAG","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(commandResult, deleteTagCommand.execute(model));","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ScorpiusSigma":48}},{"path":"src/test/java/seedu/wife/logic/commands/tagcommands/TagFoodCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_NEW;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_USED;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_THIRD_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWifeWithoutFoodTag;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.TagBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.TypicalTag;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":" * A class to test the TagFoodCommandTest.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"public class TagFoodCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_SUCCESS_MESSAGE \u003d \"%s successfully tagged with %s\";","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_ERROR_DUPLICATE_TAG \u003d \"You have already tagged %s with %s.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_ERROR_TAG_NOT_FOUND \u003d \"There is no %s Tag!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_ERROR_FOOD_NOT_FOUND \u003d \"The food item index provided is invalid\";","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    private static final String EXPECTED_ERROR_MAXIMUM_TAG \u003d \"You have reached the maximum tag limit for %s.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    private final Model model \u003d new ModelManager(getTypicalWifeWithoutFoodTag(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    private final Tag tagToUse \u003d new TagBuilder().withTagName(VALID_TAG_DAIRY).build();","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    public void execute_tagFood_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        Food foodToTag \u003d new FoodBuilder(model.getFilteredFoodList().get(0))","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"                .withTags(VALID_TAG_DAIRY)","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        Model expectedModel \u003d new ModelManager(new Wife(model.getWife()), new UserPrefs());","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        expectedModel.createTag(tagToUse);","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        expectedModel.setFood(expectedModel.getFilteredFoodList().get(0), foodToTag);","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        model.createTag(tagToUse);","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodCommand \u003d new TagFoodCommand(tagToUse.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EXPECTED_SUCCESS_MESSAGE, foodToTag.getName(), tagToUse.getTagName());","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        assertCommandSuccess(tagFoodCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        assertTrue(model.getFilteredFoodList().get(0).getTags().contains(tagToUse));","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public void execute_tagFoodWithoutExistingTag_throwsCommandException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodCommand \u003d new TagFoodCommand(tagToUse.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EXPECTED_ERROR_TAG_NOT_FOUND, tagToUse.getTagName());","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(tagFoodCommand, model, expectedMessage);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    public void execute_foodIndexNotFound_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        model.createTag(tagToUse);","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodCommand \u003d new TagFoodCommand(tagToUse.getTagName(), INDEX_THIRD_FOOD);","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(tagFoodCommand, model, EXPECTED_ERROR_FOOD_NOT_FOUND);","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    public void execute_maxTagInFood_throwsCommandException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        ArrayList\u003cTag\u003e testTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        ArrayList\u003cString\u003e validTags \u003d new ArrayList\u003c\u003e(Arrays.asList(VALID_TAG_CHOCOLATE,","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"                VALID_TAG_DAIRY, VALID_TAG_NEW, VALID_TAG_USED));","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        for (String validTag : validTags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"            testTags.add(new TagBuilder().withTagName(validTag).build());","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        Food food \u003d model.getFilteredFoodList().get(0);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        Set\u003cTag\u003e tagSet \u003d food.getCurrentTags();","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        for (Tag testTag : testTags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"            model.createTag(testTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"            tagSet.add(testTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        Tag lastTag \u003d new TagBuilder().withTagName(VALID_TAG_TEST).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        model.createTag(lastTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"        model.setFood(food, food.createNewFoodWithNewTags(food, tagSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodCommand \u003d new TagFoodCommand(lastTag.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EXPECTED_ERROR_MAXIMUM_TAG, food.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(tagFoodCommand, model, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"    public void execute_duplicateTagInFood_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        model.createTag(tagToUse);","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        Food food \u003d model.getFilteredFoodList().get(0);","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        Set\u003cTag\u003e tagSet \u003d food.getCurrentTags();","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        tagSet.add(tagToUse);","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"        model.setFood(food, food.createNewFoodWithNewTags(food, tagSet));","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodCommand \u003d new TagFoodCommand(tagToUse.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(EXPECTED_ERROR_DUPLICATE_TAG, food.getName(), tagToUse.getTagName());","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        assertCommandFailure(tagFoodCommand, model, expectedMessage);","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        Tag dairyTag \u003d TypicalTag.DAIRY_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        Tag dairyTagCopy \u003d new TagBuilder().withTagName(VALID_TAG_DAIRY).build();","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"        Tag chocolateTag \u003d TypicalTag.CHOCOLATE_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodWithDairyCommand \u003d new TagFoodCommand(dairyTag.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodWithDairyCommandCopy \u003d new TagFoodCommand(dairyTagCopy.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand tagFoodWithChocolateCommand \u003d new TagFoodCommand(chocolateTag.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"        // same command object -\u003e returns true","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"        assertEquals(tagFoodWithDairyCommand, tagFoodWithDairyCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"        // same tags and same food -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"        assertEquals(tagFoodWithDairyCommand, tagFoodWithDairyCommandCopy);","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(tagFoodWithDairyCommand, new ExitCommand());","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(tagFoodWithDairyCommand, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"        // different tag command -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(tagFoodWithDairyCommand, tagFoodWithChocolateCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jnjy":148}},{"path":"src/test/java/seedu/wife/logic/commands/tagcommands/UntagFoodCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.commands.tagcommands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_THIRD_FOOD;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWifeWithoutFoodTag;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.ModelManager;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.testutil.TagBuilder;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.testutil.TypicalTag;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"public class UntagFoodCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    private static final String EXPECTED_SUCCESS_MESSAGE \u003d \"%s successfully untagged from %s\";","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    private static final String EXPECTED_ERROR_TAG_NOT_FOUND \u003d \"There is no %s Tag!\";","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    private static final String EXPECTED_ERROR_FOOD_NOT_FOUND \u003d \"The food item index provided is invalid\";","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private Model model \u003d new ModelManager(getTypicalWifeWithoutFoodTag(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    public void execute_untagFoodWithoutExistingTag_throwsCommandException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        Tag dairyTag \u003d new TagBuilder().withTagName(VALID_TAG_DAIRY).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand untagFoodCommand \u003d new UntagFoodCommand(dairyTag.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        //tag does not exist in model","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        String expectedMessage \u003d String.format(EXPECTED_ERROR_TAG_NOT_FOUND, dairyTag.getTagName());","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        assertCommandFailure(untagFoodCommand, model, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        //tag name is not currently tagged to item(does not exist in food item tag set)","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        //but tag does exist in model","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        model.createTag(dairyTag);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"        String expectedMessageToo \u003d String.format(EXPECTED_ERROR_TAG_NOT_FOUND, dairyTag.getTagName());","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        assertCommandFailure(untagFoodCommand, model, expectedMessageToo);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    public void execute_foodIndexNotFound_throwsCommandException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"        Tag tag \u003d new TagBuilder().withTagName(VALID_TAG_DAIRY).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        model.createTag(tag);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand untagFoodCommand \u003d new UntagFoodCommand(tag.getTagName(), INDEX_THIRD_FOOD);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        assertCommandFailure(untagFoodCommand, model, EXPECTED_ERROR_FOOD_NOT_FOUND);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    public void equals() {","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"        Tag dairyTag \u003d TypicalTag.DAIRY_TAG;","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        Tag chocolateTag \u003d TypicalTag.CHOCOLATE_TAG;","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand untagFoodDairy \u003d new UntagFoodCommand(dairyTag.getTagName(), INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand untagFoodChocolate \u003d new UntagFoodCommand(chocolateTag.getTagName(),","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"            INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"        assertEquals(untagFoodDairy, untagFoodDairy);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"        // same tags and same food -\u003e returns true","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"        Tag dairyTagCopy \u003d new TagBuilder().withTagName(VALID_TAG_DAIRY).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand untagFoodDairyCopy \u003d new UntagFoodCommand(dairyTagCopy.getTagName(),","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"            INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"        assertEquals(untagFoodDairy, untagFoodDairyCopy);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"        assertNotEquals(untagFoodDairy, new ExitCommand());","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"        assertNotEquals(untagFoodDairy, null);","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"        // different tag command -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"        assertNotEquals(untagFoodDairy, untagFoodChocolate);","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":1,"rmj1405":77}},{"path":"src/test/java/seedu/wife/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jnjy":1,"-":149}},{"path":"src/test/java/seedu/wife/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jnjy":3,"-":36}},{"path":"src/test/java/seedu/wife/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_NAME \u003d \"Me!j!\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_UNIT \u003d \"C@rton\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_QUANTITY \u003d \"-1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_EXPIRY_DATE \u003d \"11122023\";","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_TAG \u003d \"#dairy\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_NAME \u003d \"Meiji\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_UNIT \u003d \"Carton\";","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_QUANTITY \u003d \"2\";","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_EXPIRY_DATE \u003d \"13-11-2024\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_TAG_1 \u003d \"DAIRY\";","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_TAG_2 \u003d \"CHOCOLATE\";","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        assertEquals(INDEX_FIRST_FOOD, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        assertEquals(INDEX_FIRST_FOOD, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    public void parseUnit_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUnit((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    public void parseUnit_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUnit(INVALID_UNIT));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"    public void parseUnit_validValueWithoutWhitespace_returnsUnit() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        Unit expectedUnit \u003d new Unit(VALID_UNIT);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUnit, ParserUtil.parseUnit(VALID_UNIT));","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    public void parseUnit_validValueWithWhitespace_returnsTrimmedUnit() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"        String unitWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        Unit expectedUnit \u003d new Unit(VALID_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUnit, ParserUtil.parseUnit(unitWithWhitespace));","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    public void parseQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantity((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"    public void parseQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuantity(INVALID_QUANTITY));","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"    public void parseQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(VALID_QUANTITY));","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    public void parseQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY + WHITESPACE;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(quantityWithWhitespace));","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"    public void parseExpiryDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExpiryDate((String) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"    public void parseExpiryDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExpiryDate(INVALID_EXPIRY_DATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"    public void parseExpiryDate_validValueWithoutWhitespace_returnsExpiryDate() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRY_DATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(VALID_EXPIRY_DATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"    public void parseExpiryDate_validValueWithWhitespace_returnsTrimmedExpiryDate() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"        String expiryDateWithWhitespace \u003d WHITESPACE + VALID_EXPIRY_DATE + WHITESPACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"        ExpiryDate expectedExpiryDate \u003d new ExpiryDate(VALID_EXPIRY_DATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedExpiryDate, ParserUtil.parseExpiryDate(expiryDateWithWhitespace));","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jnjy":58,"-":139}},{"path":"src/test/java/seedu/wife/logic/parser/WifeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.AddCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.FindCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.ListCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.SortByExpiryCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ClearCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.ExitCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"public class WifeParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    private final WifeParser parser \u003d new WifeParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(FoodUtil.getAddCommand(food));","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertEquals(new AddCommand(food), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"                ClearCommand.COMMAND_WORD + \" 3\"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"            ) instanceof ClearCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_FOOD.getOneBased()","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_FOOD), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        EditCommand.EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder(food).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"                + INDEX_FIRST_FOOD.getOneBased() + \" \" + FoodUtil.getEditFoodDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_FOOD, descriptor), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"ScorpiusSigma"},"content":"                ExitCommand.COMMAND_WORD + \" 3\"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"ScorpiusSigma"},"content":"            ) instanceof ExitCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"ScorpiusSigma"},"content":"            FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"ScorpiusSigma"},"content":"            + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"ScorpiusSigma"},"content":"            + keywords.stream().collect(Collectors.joining(\" \"))","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"ScorpiusSigma"},"content":"            new FindCommand(new NameContainsKeywordsPredicate(keywords)),","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"ScorpiusSigma"},"content":"            command","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"ScorpiusSigma"},"content":"                HelpCommand.COMMAND_WORD + \" 3\"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"ScorpiusSigma"},"content":"            ) instanceof HelpCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"ScorpiusSigma"},"content":"                ListCommand.COMMAND_WORD + \" 3\"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"ScorpiusSigma"},"content":"            ) instanceof ListCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parseCommand_sortByExpiry() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(SortByExpiryCommand.COMMAND_WORD) instanceof SortByExpiryCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"ScorpiusSigma"},"content":"        assertTrue(","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"ScorpiusSigma"},"content":"            parser.parseCommand(","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"ScorpiusSigma"},"content":"                SortByExpiryCommand.COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"ScorpiusSigma"},"content":"            ) instanceof SortByExpiryCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"ScorpiusSigma"},"content":"            ParseException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"ScorpiusSigma"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\")","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"ScorpiusSigma"},"content":"            ParseException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"ScorpiusSigma"},"content":"            MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\")","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jnjy":30,"-":57,"ScorpiusSigma":63}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_EXPIRY_DATE_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_QUANTITY_STRING;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.NAME_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.QUANTITY_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.TAG_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.UNIT_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.UNIT_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.foodvalidator.ExpiryDateValidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        Food expectedFood \u003d new FoodBuilder(MEIJI).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, NAME_DESC_MEIJI + UNIT_DESC_MEIJI","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"                + QUANTITY_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI, new AddCommand(expectedFood));","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, NAME_DESC_CHOCOLATE + NAME_DESC_MEIJI + UNIT_DESC_MEIJI","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                + QUANTITY_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI,","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                new AddCommand(expectedFood));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        // multiple units - last unit accepted","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, NAME_DESC_MEIJI + UNIT_DESC_CHOCOLATE + UNIT_DESC_MEIJI","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"                + QUANTITY_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI,","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"                new AddCommand(expectedFood));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        // multiple quantities - last quantity accepted","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, NAME_DESC_MEIJI + UNIT_DESC_MEIJI + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"                + QUANTITY_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI, new AddCommand(expectedFood));","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"        // multiple expiry dates - last expiry date accepted","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, NAME_DESC_MEIJI + UNIT_DESC_MEIJI + QUANTITY_DESC_MEIJI","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + EXPIRY_DATE_DESC_MEIJI, new AddCommand(expectedFood));","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, VALID_NAME_CHOCOLATE + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"                        + EXPIRY_DATE_DESC_CHOCOLATE, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        // missing unit prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + VALID_UNIT_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"                        + EXPIRY_DATE_DESC_CHOCOLATE, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        // missing quantity prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE + VALID_QUANTITY_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"                        + EXPIRY_DATE_DESC_CHOCOLATE, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        // missing expiry date prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"                        + VALID_EXPIRY_DATE_CHOCOLATE, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, VALID_NAME_CHOCOLATE + VALID_UNIT_CHOCOLATE + VALID_QUANTITY_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"                        + VALID_EXPIRY_DATE_CHOCOLATE, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        // invalid unit","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + INVALID_UNIT_DESC + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE, Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        // invalid quantity","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE + INVALID_QUANTITY_DESC","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE + INVALID_QUANTITY_STRING","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE,","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"                Quantity.MESSAGE_CHAR_CONSTRAINTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        // invalid expiry date","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"                + INVALID_EXPIRY_DATE_DESC + TAG_DESC_CHOCOLATE + TAG_DESC_CHOCOLATE,","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"                ExpiryDateValidator.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"                        + INVALID_EXPIRY_DATE_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"                        + QUANTITY_DESC_CHOCOLATE + EXPIRY_DATE_DESC_CHOCOLATE,","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jnjy":76,"nigelteosw":5,"-":43}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/DecreaseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_DECREASE;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_DEC_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.DecreaseCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.DecreaseFoodDescriptorBuilder;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"public class DecreaseCommandParserTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DecreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    private DecreaseCommandParser parser \u003d new DecreaseCommandParser();","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        // no index specified","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, VALID_NAME_MEIJI, MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"        // no index and no field specified","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        // negative index","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"-5\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        // zero index","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"0\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 i/100\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    public void parse_negativeQuantitySpecifiedUnfilteredList_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        String failureMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        //quantity specified is 0","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 q/0\", failureMessage);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        //quantity specified is a negative number","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 q/-2\", failureMessage);","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"        Index targetIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_QUANTITY_DEC_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand.DecreaseFoodDescriptor descriptor \u003d new DecreaseFoodDescriptorBuilder()","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"                .withQuantity(VALID_QUANTITY_DECREASE)","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"        DecreaseCommand expectedCommand \u003d new DecreaseCommand(targetIndex, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"Bisceto":73}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/DeleteByTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteByTagCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteByTagCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"    private DeleteByTagCommandParser parser \u003d new DeleteByTagCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parse_validArgs_returnsDeleteByTagCommand() {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"            parser,","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"            \" \" + PREFIX_NAME + VALID_TAG_CHOCOLATE,","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"            new DeleteByTagCommand(new Tag(VALID_TAG_CHOCOLATE))","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"            parser,","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"            \"a\",","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteByTagCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ScorpiusSigma":35}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_FOOD));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"            parser,","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"            \"a\",","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jnjy":7,"-":24,"ScorpiusSigma":5}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_EXPIRY_DATE_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.QUANTITY_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.UNIT_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.UNIT_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.foodcommands.EditCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_THIRD_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.foodvalidator.ExpiryDateValidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, VALID_NAME_MEIJI, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_NOT_EDITED, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_MEIJI, String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_MEIJI, String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        // invalid name","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        // invalid unit","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_UNIT_DESC, Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        // invalid quantity","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC, Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        // invalid expiry date","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPIRY_DATE_DESC, ExpiryDateValidator.MESSAGE_FORMAT_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        // invalid unit followed by valid quantity","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_UNIT_DESC + QUANTITY_DESC_MEIJI, Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        // valid unit followed by invalid unit. The test case for invalid unit followed by valid unit","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + UNIT_DESC_CHOCOLATE + INVALID_UNIT_DESC, Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_QUANTITY_DESC","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"                        + VALID_EXPIRY_DATE_MEIJI + VALID_UNIT_MEIJI, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        Index targetIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        String userInput \u003d targetIndex.getOneBased() + UNIT_DESC_CHOCOLATE","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"                + QUANTITY_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI + NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_NAME_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"        Index targetIndex \u003d INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        String userInput \u003d targetIndex.getOneBased() + UNIT_DESC_CHOCOLATE + QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        Index targetIndex \u003d INDEX_THIRD_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_NAME_MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"        // unit","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"        userInput \u003d targetIndex.getOneBased() + UNIT_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder().withUnit(VALID_UNIT_MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"        // quantity","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder().withQuantity(VALID_QUANTITY_MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"        // expiry date","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPIRY_DATE_DESC_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder().withExpiryDate(VALID_EXPIRY_DATE_MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"        Index targetIndex \u003d INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"        String userInput \u003d targetIndex.getOneBased() + UNIT_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI + QUANTITY_DESC_MEIJI","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"                + UNIT_DESC_MEIJI + EXPIRY_DATE_DESC_MEIJI + QUANTITY_DESC_MEIJI","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"                + UNIT_DESC_CHOCOLATE + EXPIRY_DATE_DESC_CHOCOLATE + QUANTITY_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"jnjy"},"content":"        Index targetIndex \u003d INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"jnjy"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_UNIT_DESC + UNIT_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"jnjy"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"jnjy"},"content":"        userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_CHOCOLATE + INVALID_UNIT_DESC","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"jnjy"},"content":"                + EXPIRY_DATE_DESC_CHOCOLATE + UNIT_DESC_CHOCOLATE;","lastModifiedDate":"2023-03-25"},{"lineNumber":188,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2023-03-25"},{"lineNumber":189,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE)","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jnjy":96,"Bisceto":7,"-":93}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.FindCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Meiji\", \"Chocolate\")));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, \"Meiji Chocolate\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, \" \\n Meiji \\n \\t Chocolate  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jnjy":9,"-":25}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.commons.core.HelpMenu;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.generalcommands.HelpCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.parser.HelpCommandParser;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    public void parse_emptyArgs_returnsGeneralHelpCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"        //empty string","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        HelpCommand expectedCommand \u003d new HelpCommand(HelpMenu.getGeneralHelp());","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        assertParseSuccess(parser, \"\", expectedCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        //string with whitespace","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        assertParseSuccess(parser, \"        \", expectedCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    public void parse_validCommand_returnsCommandSpecificHelpCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        //normal input","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        HelpCommand expectedCommand \u003d new HelpCommand(HelpMenu.ADD.getCommandUsage());","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        assertParseSuccess(parser, \"add\", expectedCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        //input with whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        assertParseSuccess(parser, \"    add     \", expectedCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    public void parse_invalidArg_returnsInvalidArgMessage() {","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        //invalid string","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"        HelpCommand expectedCommand \u003d new HelpCommand(HelpMenu.INVALID.getCommandUsage());","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        assertParseSuccess(parser, \"abcdef\", expectedCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"rmj1405":41}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/IncreaseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_SECOND_FOOD;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand.IncreaseFoodDescriptor;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.testutil.IncreaseFoodDescriptorBuilder;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"public class IncreaseCommandParserTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncreaseCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    private IncreaseCommandParser parser \u003d new IncreaseCommandParser();","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        // no index specified","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, VALID_NAME_MEIJI, MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        // no index and no field specified","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"        // negative index","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"-5\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        // zero index","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"0\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"                Messages.MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 i/100\", MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"    public void parse_negativeQuantitySpecifiedUnfilteredList_failure() {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        String failureMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        //quantity specified is 0","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 q/0\", failureMessage);","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        //quantity specified is a negative number","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        assertParseFailure(parser, \"1 q/-2\", failureMessage);","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"        Index targetIndex \u003d INDEX_SECOND_FOOD;","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_MEIJI;","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"        IncreaseFoodDescriptor descriptor \u003d new IncreaseFoodDescriptorBuilder()","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"                .withQuantity(VALID_QUANTITY_MEIJI)","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"                .build();","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"        IncreaseCommand expectedCommand \u003d new IncreaseCommand(targetIndex, descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"Bisceto":73}},{"path":"src/test/java/seedu/wife/logic/parser/foodcommandparser/ListByTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.foodcommandparser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.foodcommands.ListByTagCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"public class ListByTagCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"    private ListByTagCommandParser parser \u003d new ListByTagCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListByTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"        // empty name","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" \", expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"        // valid and empty name","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(parser, PREFIX_NAME + VALID_TAG_DAIRY + \" \" + PREFIX_NAME + \" \", expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ScorpiusSigma":29}},{"path":"src/test/java/seedu/wife/logic/parser/tagcommandparser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ScorpiusSigma"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.DeleteTagCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":" * A class to test the DeleteTagCommand.","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ScorpiusSigma"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parse_validArgs_returnsDeleteTagCommand() {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + VALID_TAG_DAIRY, new DeleteTagCommand(new Tag(VALID_TAG_DAIRY)));","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"            parser,","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"            \"a\",","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ScorpiusSigma"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ScorpiusSigma":34}},{"path":"src/test/java/seedu/wife/logic/parser/tagcommandparser/TagFoodCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_MEIJI;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.TAG_DESCRIPTION_DAIRY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_FIRST_INDEX_ID;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalTag.DAIRY_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.tagcommands.TagFoodCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.TagBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":" * A class to test the TagFoodCommandParser.","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"public class TagFoodCommandParserTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"            TagFoodCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    private final TagFoodCommandParser parser \u003d new TagFoodCommandParser();","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private final Tag dairyTag \u003d new TagBuilder(DAIRY_TAG).build();","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        String dairyTagName \u003d dairyTag.getTagName();","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        TagFoodCommand expectedCommand \u003d new TagFoodCommand(dairyTagName, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        String mockInput \u003d String.format(\"%s %s\", VALID_FIRST_INDEX_ID, TAG_DESCRIPTION_DAIRY);","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, mockInput, expectedCommand);","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        String mockInput \u003d String.format(\"%s %s %s\", VALID_FIRST_INDEX_ID, EXPIRY_DATE_DESC_MEIJI,","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"                TAG_DESCRIPTION_DAIRY);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, mockInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public void parse_missingArgs_failure() {","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, NAME_DESC_MEIJI, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        String invalidIndexMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"0 \" + TAG_DESCRIPTION_DAIRY, invalidIndexMessage);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"just to test things out \" + VALID_TAG_DAIRY","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"                + VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"u/unit \" + TAG_DESCRIPTION_DAIRY","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"                + VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jnjy":62}},{"path":"src/test/java/seedu/wife/logic/parser/tagcommandparser/UntagFoodCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package seedu.wife.logic.parser.tagcommandparser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.EXPIRY_DATE_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.NAME_DESC_MEIJI;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.TAG_DESCRIPTION_DAIRY;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_FIRST_INDEX_ID;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.testutil.TypicalIndex.INDEX_FIRST_FOOD;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import static seedu.wife.testutil.TypicalTag.DAIRY_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.logic.commands.tagcommands.UntagFoodCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"import seedu.wife.testutil.TagBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"public class UntagFoodCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"            UntagFoodCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    private final UntagFoodCommandParser parser \u003d new UntagFoodCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private final Tag dairyTag \u003d new TagBuilder(DAIRY_TAG).build();","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        String dairyTagName \u003d dairyTag.getTagName();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        UntagFoodCommand expectedCommand \u003d new UntagFoodCommand(dairyTagName, INDEX_FIRST_FOOD);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        String mockInput \u003d String.format(\"%s %s\", VALID_FIRST_INDEX_ID, TAG_DESCRIPTION_DAIRY);","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        assertParseSuccess(parser, mockInput, expectedCommand);","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        String mockInput \u003d String.format(\"%s %s %s\", VALID_FIRST_INDEX_ID, EXPIRY_DATE_DESC_MEIJI,","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"                TAG_DESCRIPTION_DAIRY);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, mockInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    public void parse_missingArgs_failure() {","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        assertParseFailure(parser, VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        assertParseFailure(parser, NAME_DESC_MEIJI, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"        // Number preamble","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        String invalidIndexMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"0 \" + TAG_DESCRIPTION_DAIRY, invalidIndexMessage);","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        // invalid arguments (String) being parsed as preamble","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"just to test things out \" + VALID_TAG_DAIRY","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"                + VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        assertParseFailure(parser, \"u/unit \" + TAG_DESCRIPTION_DAIRY","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"                + VALID_FIRST_INDEX_ID, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":11,"rmj1405":53}},{"path":"src/test/java/seedu/wife/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.WifeBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertEquals(new Wife(), new Wife(modelManager.getWife()));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        userPrefs.setWifeFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        userPrefs.setWifeFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    public void setWifeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setWifeFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    public void setWifePath_validPath_setsWifeFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        modelManager.setWifeFilePath(path);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        assertEquals(path, modelManager.getWifeFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    public void hasFood_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFood(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    public void hasFood_foodNotInWife_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        assertFalse(modelManager.hasFood(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    public void hasFood_foodInWife_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        modelManager.addFood(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        assertTrue(modelManager.hasFood(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    public void getFilteredFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFoodList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        Wife wife \u003d new WifeBuilder().withFood(MEIJI).withFood(CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        Wife differentWife \u003d new Wife();","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        modelManager \u003d new ModelManager(wife, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(wife, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentWife, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"        String[] keywords \u003d MEIJI.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"        modelManager.updateFilteredFoodList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"        assertFalse(modelManager.equals(new ModelManager(wife, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"        modelManager.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        differentUserPrefs.setWifeFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        assertFalse(modelManager.equals(new ModelManager(wife, differentUserPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jnjy":36,"-":96}},{"path":"src/test/java/seedu/wife/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    public void setWifeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setWifeFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jnjy":3,"rmj1405":1,"-":17}},{"path":"src/test/java/seedu/wife/model/WifeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.exceptions.DuplicateFoodException;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"public class WifeTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private final Wife wife \u003d new Wife();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        assertEquals(Collections.emptyList(), wife.getFoodList());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e wife.resetData(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    public void resetData_withValidReadOnlyWife_replacesData() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        Wife newData \u003d getTypicalWife();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        wife.resetData(newData);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        assertEquals(newData, wife);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public void resetData_withDuplicateFood_throwsDuplicateFoodException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"        // Two foods with the same identity fields","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI).withUnit(VALID_UNIT_MEIJI).withTags(VALID_TAG_DAIRY)","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e newFood \u003d Arrays.asList(MEIJI, editedMeiji);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"        WifeStub newData \u003d new WifeStub(newFood);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        assertThrows(DuplicateFoodException.class, () -\u003e wife.resetData(newData));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    public void hasFood_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e wife.hasFood(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    public void hasFood_foodNotInWife_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        assertFalse(wife.hasFood(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    public void hasFood_foodInWife_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        wife.addFood(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        assertTrue(wife.hasFood(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    public void hasFood_foodWithSameIdentityFieldsInWife_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        wife.addFood(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI).withUnit(VALID_UNIT_MEIJI).withTags(VALID_TAG_DAIRY)","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        assertTrue(wife.hasFood(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    public void getFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e wife.getFoodList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"ScorpiusSigma"},"content":"     * A stub ReadOnlyWife whose foods list can violate interface constraints.","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"    private static class WifeStub implements ReadOnlyWife {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        private final ObservableList\u003cFood\u003e foods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"ScorpiusSigma"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        WifeStub(Collection\u003cFood\u003e foods) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"            this.foods.setAll(foods);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"            return foods;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"ScorpiusSigma"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"ScorpiusSigma"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"ScorpiusSigma"},"content":"            return tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":100,"ScorpiusSigma":9}},{"path":"src/test/java/seedu/wife/model/food/ExpiryDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.model.food.foodvalidator.ExpiryDateValidator.isValidDateFormat;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class ExpiryDateTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ExpiryDate(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public void constructor_invalidExpiryDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        String invalidExpiryDate \u003d \"1234123\";","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ExpiryDate(invalidExpiryDate));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        String currentDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd-MM-uuuu\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        // null ExpiryDate","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e isValidDateFormat(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        // invalid ExpiryDates","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertFalse(isValidDateFormat(\"\")); // empty string","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        assertFalse(isValidDateFormat(\"1234123\")); // numbers only","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        // valid ExpiryDates","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        assertTrue(isValidDateFormat(currentDate));","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        assertTrue(isValidDateFormat(\"13-11-2026\")); // long ExpiryDate","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":41}},{"path":"src/test/java/seedu/wife/model/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"public class FoodTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e food.getTags().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public void isSameFood() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertTrue(MEIJI.isSameFood(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.isSameFood(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        // same name and expiry date, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI)","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"                .withUnit(VALID_UNIT_CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"                .withQuantity(VALID_QUANTITY_CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"                .withTags(VALID_TAG_CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertTrue(MEIJI.isSameFood(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        editedMeiji \u003d new FoodBuilder(MEIJI)","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"                .withName(VALID_NAME_CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.isSameFood(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        Food editedChocolate \u003d new FoodBuilder(CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                .withName(VALID_NAME_CHOCOLATE.toLowerCase())","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        assertFalse(CHOCOLATE.isSameFood(editedChocolate));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_CHOCOLATE + \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        editedChocolate \u003d new FoodBuilder(CHOCOLATE)","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"                .withName(nameWithTrailingSpaces)","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        assertFalse(CHOCOLATE.isSameFood(editedChocolate));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        Food meijiCopy \u003d new FoodBuilder(MEIJI).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        assertTrue(MEIJI.equals(meijiCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        assertTrue(MEIJI.equals(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(5));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(CHOCOLATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI).withName(VALID_NAME_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        // different unit -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        editedMeiji \u003d new FoodBuilder(MEIJI).withUnit(VALID_UNIT_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"        editedMeiji \u003d new FoodBuilder(MEIJI).withQuantity(VALID_QUANTITY_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        // different expiry date -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        editedMeiji \u003d new FoodBuilder(MEIJI).withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        editedMeiji \u003d new FoodBuilder(MEIJI).withTags(VALID_TAG_CHOCOLATE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        assertFalse(MEIJI.equals(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":100}},{"path":"src/test/java/seedu/wife/model/food/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Meiji\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        assertTrue(predicate.test(new FoodBuilder().withName(\"Meiji Chocolate\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Meiji\", \"Chocolate\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        assertTrue(predicate.test(new FoodBuilder().withName(\"Meiji Chocolate\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Chocolate\", \"Broccoli\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        assertTrue(predicate.test(new FoodBuilder().withName(\"Meiji Broccoli\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Meiji\", \"Chocolate\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        assertTrue(predicate.test(new FoodBuilder().withName(\"Meiji Chocolate\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        assertFalse(predicate.test(new FoodBuilder().withName(\"Meiji\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Broccoli\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"        assertFalse(predicate.test(new FoodBuilder().withName(\"Meiji Chocolate\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carton\", \"2\", \"13-11-2024\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        assertFalse(predicate.test(new FoodBuilder().withName(\"Meiji\").withUnit(\"Carton\")","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"                .withQuantity(\"2\").withExpiryDate(\"13-11-2024\").build()));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jnjy":16,"-":58}},{"path":"src/test/java/seedu/wife/model/food/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class NameTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        // null name","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidFoodName(null));","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // invalid name","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        assertFalse(Name.isValidFoodName(\"\")); // empty string","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertFalse(Name.isValidFoodName(\" \")); // spaces only","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        assertFalse(Name.isValidFoodName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        assertFalse(Name.isValidFoodName(\"Meiji*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        // valid name","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertTrue(Name.isValidFoodName(\"chocolate milk\")); // alphabets only","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        assertTrue(Name.isValidFoodName(\"12345\")); // numbers only","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        assertTrue(Name.isValidFoodName(\"m3iji\")); // alphanumeric characters","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        assertTrue(Name.isValidFoodName(\"Chocolate Milk\")); // with capital letters","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        assertTrue(Name.isValidFoodName(\"There is no restriction on length of food name\")); // long names","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jnjy":40}},{"path":"src/test/java/seedu/wife/model/food/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class QuantityTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Quantity(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        String invalidQuantity \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(invalidQuantity));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        // null Quantity","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Quantity.isValidQuantity(null));","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        // blank Quantity","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        assertFalse(Quantity.isValidQuantity(\"\")); // empty string","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertFalse(Quantity.isValidQuantity(\" \")); // spaces only","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        // invalid parts","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        assertFalse(Quantity.isValidQuantity(\"0\")); // 0 item should not be recorded","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        assertFalse(Quantity.isValidQuantity(\"-1\")); // negative value","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertFalse(Quantity.isValidQuantity(\"-13\")); // negative value","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        // valid Quantity","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        assertTrue(Quantity.isValidQuantity(\"1\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        assertTrue(Quantity.isValidQuantity(\"3\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        assertTrue(Quantity.isValidQuantity(\"69\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":41}},{"path":"src/test/java/seedu/wife/model/food/UniqueFoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_MEIJI;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.CHOCOLATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.exceptions.DuplicateFoodException;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.exceptions.FoodNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"import seedu.wife.testutil.FoodBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"public class UniqueFoodListTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private final UniqueFoodList uniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public void contains_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.contains(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    public void contains_foodNotInList_returnsFalse() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertFalse(uniqueFoodList.contains(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    public void contains_foodInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertTrue(uniqueFoodList.contains(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    public void contains_foodWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_MEIJI)","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"                .withTags(VALID_TAG_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        assertTrue(uniqueFoodList.contains(editedMeiji));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public void add_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.add(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    public void add_duplicateFood_throwsDuplicateFoodException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"        assertThrows(DuplicateFoodException.class, () -\u003e uniqueFoodList.add(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public void setFood_nullTargetFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.setFood(null, MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    public void setFood_nullEditedFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.setFood(MEIJI, null));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    public void setFood_targetFoodNotInList_throwsFoodNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        assertThrows(FoodNotFoundException.class, () -\u003e uniqueFoodList.setFood(MEIJI, MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    public void setFood_editedFoodIsSameFood_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.setFood(MEIJI, MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        expectedUniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"    public void setFood_editedFoodHasSameIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"        Food editedMeiji \u003d new FoodBuilder(MEIJI)","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"                .withExpiryDate(VALID_EXPIRY_DATE_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"                .withTags(VALID_TAG_CHOCOLATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.setFood(MEIJI, editedMeiji);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"        expectedUniqueFoodList.add(editedMeiji);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"    public void setFood_editedFoodHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.setFood(MEIJI, CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"        expectedUniqueFoodList.add(CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"    public void setFood_editedFoodHasNonUniqueIdentity_throwsDuplicateFoodException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        assertThrows(DuplicateFoodException.class, () -\u003e uniqueFoodList.setFood(MEIJI, CHOCOLATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"    public void remove_nullFood_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.remove(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"jnjy"},"content":"    public void remove_foodDoesNotExist_throwsFoodNotFoundException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"jnjy"},"content":"        assertThrows(FoodNotFoundException.class, () -\u003e uniqueFoodList.remove(MEIJI));","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"jnjy"},"content":"    public void remove_existingFood_removesFood() {","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.remove(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"jnjy"},"content":"    public void setFoods_nullUniqueFoodList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.setFoods((UniqueFoodList) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"jnjy"},"content":"    public void setFoods_uniqueFoodList_replacesOwnListWithProvidedUniqueFoodList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"jnjy"},"content":"        expectedUniqueFoodList.add(CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.setFoods(expectedUniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"jnjy"},"content":"    public void setFoods_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFoodList.setFoods((List\u003cFood\u003e) null));","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"jnjy"},"content":"    public void setFoods_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.add(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e foodList \u003d Collections.singletonList(CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"jnjy"},"content":"        uniqueFoodList.setFoods(foodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"jnjy"},"content":"        UniqueFoodList expectedUniqueFoodList \u003d new UniqueFoodList();","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"jnjy"},"content":"        expectedUniqueFoodList.add(CHOCOLATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"jnjy"},"content":"        assertEquals(expectedUniqueFoodList, uniqueFoodList);","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"jnjy"},"content":"    public void setFoods_listWithDuplicateFoods_throwsDuplicateFoodException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"jnjy"},"content":"        List\u003cFood\u003e listWithDuplicateFoods \u003d Arrays.asList(MEIJI, MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"jnjy"},"content":"        assertThrows(DuplicateFoodException.class, () -\u003e uniqueFoodList.setFoods(listWithDuplicateFoods));","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"jnjy"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"jnjy"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"jnjy"},"content":"            -\u003e uniqueFoodList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":175}},{"path":"src/test/java/seedu/wife/model/food/UnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.food;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class UnitTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Unit(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public void constructor_invalidUnit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        String invalidUnit \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Unit(invalidUnit));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public void isUnitNotLengthy() {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        assertFalse(Unit.isUnitNotLengthy(\"abcdefghijklm\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        assertTrue(Unit.isUnitNotLengthy(\"abcd\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        // null Unit number","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Unit.isValidUnit(null));","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        // invalid Unit numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertFalse(Unit.isValidUnit(\"\")); // empty string","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        assertFalse(Unit.isValidUnit(\" \")); // spaces only","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        assertFalse(Unit.isValidUnit(\"u2312nit\")); // digits within alphabets","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        // valid Unit numbers","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        assertTrue(Unit.isValidUnit(\"Unit\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertTrue(Unit.isValidUnit(\"unit\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":42}},{"path":"src/test/java/seedu/wife/model/tag/TagNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class TagNameTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private static final String name \u003d \"test\";","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    private final TagName tagName \u003d new TagName(name);","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TagName(","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"                CommandTestUtil.INVALID_TAG_NAME_EMPTY_NAME","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TagName(","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"                CommandTestUtil.INVALID_TAG_NAME_CONTAIN_SYMBOL","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TagName(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"                CommandTestUtil.INVALID_TAG_NAME_TOO_LENGTHY","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public void isValidTagName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        // null tag name","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e TagName.isValidTagName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        assertTrue(TagName.isValidTagName(\"notlengthy\")); // not lengthy name","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        assertTrue(TagName.isValidTagName(\"abcdefghijklmno\")); // upper bound length","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"        assertFalse(TagName.isValidTagName(\"thistagnameiswaytoolong\")); // lengthy name","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        assertFalse(TagName.isValidTagName(\"symb@l\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        assertFalse(TagName.isValidTagName(\"\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    public void equals() {","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        final TagName validTagNameCopy \u003d new TagName(name);","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"        final TagName invalidTagNameCopy \u003d new TagName(\"anotherTag\");","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        assertEquals(validTagNameCopy, tagName);","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        assertNotEquals(invalidTagNameCopy, tagName);","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jnjy":54}},{"path":"src/test/java/seedu/wife/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.model.tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e TagName.isValidTagName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public void isValidStringRepresentation() {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        Tag testTag \u003d new Tag(\"test\");","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        assertEquals(\"[Test]\", testTag.toString());","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jnjy":9,"-":23}},{"path":"src/test/java/seedu/wife/storage/JsonAdaptedFoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.storage.JsonAdaptedFood.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.foodvalidator.ExpiryDateValidator;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"public class JsonAdaptedFoodTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_NAME \u003d \"M@iji\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_UNIT \u003d \"+651234\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_QUANTITY \u003d \"-1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_EXPIRY_DATE \u003d \"11122022\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private static final String INVALID_TAG \u003d \"#food\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_NAME \u003d MEIJI.getName().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_UNIT \u003d MEIJI.getUnit().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_QUANTITY \u003d MEIJI.getQuantity().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    private static final String VALID_EXPIRY_DATE \u003d MEIJI.getExpiryDate().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MEIJI.getTags().stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    public void toModelType_validFoodDetails_returnsFood() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"        assertEquals(MEIJI, food.toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"            INVALID_NAME,","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_UNIT,","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_QUANTITY,","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_TAGS","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(null, VALID_UNIT, VALID_QUANTITY, VALID_EXPIRY_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public void toModelType_invalidUnit_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"ScorpiusSigma"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_NAME,","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ScorpiusSigma"},"content":"            INVALID_UNIT,","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_QUANTITY,","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"            VALID_TAGS","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d Unit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"    public void toModelType_nullUnit_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(VALID_NAME, null, VALID_UNIT, VALID_EXPIRY_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Unit.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    public void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"                new JsonAdaptedFood(VALID_NAME, VALID_UNIT, INVALID_QUANTITY, VALID_EXPIRY_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(VALID_NAME, VALID_UNIT, null, VALID_EXPIRY_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"    public void toModelType_invalidExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"                new JsonAdaptedFood(VALID_NAME, VALID_UNIT, VALID_QUANTITY, INVALID_EXPIRY_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d ExpiryDateValidator.MESSAGE_FORMAT_CONSTRAINTS;","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    public void toModelType_nullExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(VALID_NAME, VALID_UNIT, VALID_QUANTITY, null, VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ExpiryDate.class.getSimpleName());","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"jnjy"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"jnjy"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"jnjy"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"jnjy"},"content":"        JsonAdaptedFood food \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"jnjy"},"content":"                new JsonAdaptedFood(VALID_NAME, VALID_UNIT, VALID_QUANTITY, VALID_EXPIRY_DATE, invalidTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"jnjy"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":106,"ScorpiusSigma":15}},{"path":"src/test/java/seedu/wife/storage/JsonSerializableWifeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.commons.util.JsonUtil;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.testutil.TypicalWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"public class JsonSerializableWifeTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableWifeTest\");","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Path TYPICAL_FOODS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFoodWife.json\");","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Path INVALID_FOOD_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFoodWife.json\");","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Path DUPLICATE_FOOD_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateFoodWife.json\");","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public void toModelType_typicalFoodFile_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"ScorpiusSigma"},"content":"        JsonSerializableWife dataFromFile \u003d JsonUtil","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ScorpiusSigma"},"content":"            .readJsonFile(","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ScorpiusSigma"},"content":"                TYPICAL_FOODS_FILE,","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ScorpiusSigma"},"content":"                JsonSerializableWife.class","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ScorpiusSigma"},"content":"            ).get();","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        Wife wifeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"ScorpiusSigma"},"content":"        Wife typicalWife \u003d TypicalWife.getTypicalWife();","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        assertEquals(wifeFromFile, typicalWife);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"ScorpiusSigma"},"content":"    public void toModelType_invalidFoodFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ScorpiusSigma"},"content":"        JsonSerializableWife dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FOOD_FILE,","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"                JsonSerializableWife.class).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ScorpiusSigma"},"content":"    public void toModelType_duplicateFoods_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ScorpiusSigma"},"content":"        JsonSerializableWife dataFromFile \u003d JsonUtil","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ScorpiusSigma"},"content":"            .readJsonFile(DUPLICATE_FOOD_FILE, JsonSerializableWife.class).get();","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"ScorpiusSigma"},"content":"            IllegalValueException.class,","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ScorpiusSigma"},"content":"            dataFromFile::toModelType,","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"ScorpiusSigma"},"content":"            JsonSerializableWife.MESSAGE_DUPLICATE_FOODS","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jnjy":6,"-":16,"ScorpiusSigma":32}},{"path":"src/test/java/seedu/wife/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"        userPrefs.setWifeFilePath(Paths.get(\"data/wife.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jnjy":6,"-":117}},{"path":"src/test/java/seedu/wife/storage/JsonWifeStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"ScorpiusSigma"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalFood.MEIJI;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.testutil.TypicalWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"public class JsonWifeStorageTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonWifeStorageTest\");","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public void readWife_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e readWife(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    private java.util.Optional\u003cReadOnlyWife\u003e readWife(String filePath) throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        return new JsonWifeStorage(Paths.get(filePath)).readWife(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"                : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"        assertFalse(readWife(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWife(\"notJsonFormatWife.json\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"    public void readWife_invalidFoodWife_throwDataConversionException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWife(\"invalidFoodWife.json\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"    public void readWife_invalidFoodWife_throwNumberFormatExceptionException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWife(\"invalidFoodQuantityWife.json\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    public void readWife_invalidAndValidFood_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"ScorpiusSigma"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWife(\"invalidAndValidFoodWife.json\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    public void readAndSaveWife_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"ScorpiusSigma"},"content":"        Path filePath \u003d testFolder.resolve(\"TempWife.json\");","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"ScorpiusSigma"},"content":"        Wife original \u003d TypicalWife.getTypicalWife();","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"        JsonWifeStorage jsonWifeStorage \u003d new JsonWifeStorage(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"        jsonWifeStorage.saveWife(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"        ReadOnlyWife readBack \u003d jsonWifeStorage.readWife(filePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"        assertEquals(original, new Wife(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"ScorpiusSigma"},"content":"        original.removeFood(MEIJI);","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        jsonWifeStorage.saveWife(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        readBack \u003d jsonWifeStorage.readWife(filePath).get();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"        assertEquals(original, new Wife(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"jnjy"},"content":"        original.addFood(MEIJI);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"        jsonWifeStorage.saveWife(original); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"        readBack \u003d jsonWifeStorage.readWife().get(); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        assertEquals(original, new Wife(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"    public void saveWife_nullWife_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveWife(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"ScorpiusSigma"},"content":"     * Saves {@code WIFE} at the specified {@code filePath}.","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"jnjy"},"content":"    private void saveWife(ReadOnlyWife wife, String filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"jnjy"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"jnjy"},"content":"            new JsonWifeStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"jnjy"},"content":"                    .saveWife(wife, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"jnjy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"jnjy"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"jnjy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"jnjy"},"content":"    public void saveWife_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"jnjy"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveWife(new Wife(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":95,"ScorpiusSigma":17}},{"path":"src/test/java/seedu/wife/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import static seedu.wife.testutil.TypicalWife.getTypicalWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.ReadOnlyWife;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"        JsonWifeStorage wifeStorage \u003d new JsonWifeStorage(getTempFilePath(\"wife\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        storageManager \u003d new StorageManager(wifeStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ScorpiusSigma"},"content":"    public void wifeReadSave() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ScorpiusSigma"},"content":"        * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"ScorpiusSigma"},"content":"        * {@link JsonWifeStorage} class.","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"ScorpiusSigma"},"content":"        * More extensive testing of UserPref saving/reading is done in {@link JsonWifeStorageTest} class.","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ScorpiusSigma"},"content":"        */","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ScorpiusSigma"},"content":"        Wife original \u003d getTypicalWife();","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"ScorpiusSigma"},"content":"        storageManager.saveWife(original);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ScorpiusSigma"},"content":"        ReadOnlyWife retrieved \u003d storageManager.readWife().get();","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"ScorpiusSigma"},"content":"        assertEquals(original, new Wife(retrieved));","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    public void getWifeFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"        assertNotNull(storageManager.getWifeFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":8,"-":49,"ScorpiusSigma":12}},{"path":"src/test/java/seedu/wife/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"jnjy":1,"-":33}},{"path":"src/test/java/seedu/wife/testutil/DecreaseFoodDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.DecreaseCommand.DecreaseFoodDescriptor;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":" * A utility class to help with building DecreaseFoodDescriptor objects.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class DecreaseFoodDescriptorBuilder {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    private DecreaseFoodDescriptor descriptor;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public DecreaseFoodDescriptorBuilder() {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        descriptor \u003d new DecreaseFoodDescriptor();","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    public DecreaseFoodDescriptorBuilder(DecreaseFoodDescriptor descriptor) {","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        this.descriptor \u003d new DecreaseFoodDescriptor(descriptor);","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     * Returns an {@code DecreaseFoodDescriptor} with fields containing {@code food}\u0027s details","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    public DecreaseFoodDescriptorBuilder(Food food) {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        descriptor \u003d new DecreaseFoodDescriptor();","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        descriptor.setQuantity(food.getQuantity());","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Quantity} of the {@code DecreaseFoodDescriptor} that we are building.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    public DecreaseFoodDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"        return this;","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"    public DecreaseFoodDescriptor build() {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        return descriptor;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"Bisceto":41}},{"path":"src/test/java/seedu/wife/testutil/EditFoodDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"public class EditFoodDescriptorBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"    private EditFoodDescriptor descriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder(EditFoodDescriptor descriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        this.descriptor \u003d new EditFoodDescriptor(descriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     * Returns an {@code EditFoodDescriptor} with fields containing {@code food}\u0027s details","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        descriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        descriptor.setName(food.getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        descriptor.setUnit(food.getUnit());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        descriptor.setQuantity(food.getQuantity());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        descriptor.setExpiryDate(food.getExpiryDate());","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Name} of the {@code EditFoodDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Unit} of the {@code EditFoodDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder withUnit(String unit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        descriptor.setUnit(new Unit(unit));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Quantity} of the {@code EditFoodDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Expiry Date} of the {@code EditFoodDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptorBuilder withExpiryDate(String date) {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        descriptor.setExpiryDate(new ExpiryDate(date));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"jnjy"},"content":"    public EditFoodDescriptor build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"        return descriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":67,"Bisceto":4}},{"path":"src/test/java/seedu/wife/testutil/FoodBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.ExpiryDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Unit;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":" * A utility class to help with building Food objects.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"public class FoodBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final String DEFAULT_NAME \u003d \"Meiji\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    public static final String DEFAULT_UNIT \u003d \"Carton\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public static final String DEFAULT_QUANTITY \u003d \"2\";","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public static final String DEFAULT_EXPIRY_DATE \u003d \"13-11-2026\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    private Name name;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    private Unit unit;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    private Quantity quantity;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    private ExpiryDate expiryDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        unit \u003d new Unit(DEFAULT_UNIT);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"        quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        expiryDate \u003d new ExpiryDate(DEFAULT_EXPIRY_DATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"     * Initializes the FoodBuilder with the data of {@code foodToCopy}.","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder(Food foodToCopy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        name \u003d foodToCopy.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        unit \u003d foodToCopy.getUnit();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        quantity \u003d foodToCopy.getQuantity();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        expiryDate \u003d foodToCopy.getExpiryDate();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"        tags \u003d new HashSet\u003c\u003e(foodToCopy.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Name} of the {@code Food} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder withName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Food} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"jnjy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Unit} of the {@code Food} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder withUnit(String unit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"jnjy"},"content":"        this.unit \u003d new Unit(unit);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Quantity} of the {@code Food} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder withQuantity(String quantity) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jnjy"},"content":"        this.quantity \u003d new Quantity(quantity);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code ExpiryDate} of the {@code Food} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"jnjy"},"content":"    public FoodBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"jnjy"},"content":"        this.expiryDate \u003d new ExpiryDate(expiryDate);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"jnjy"},"content":"    public Food build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"jnjy"},"content":"        return new Food(name, unit, quantity, expiryDate, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":88,"Bisceto":7}},{"path":"src/test/java/seedu/wife/testutil/FoodUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.logic.commands.foodcommands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":" * A utility class for Food.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"public class FoodUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"     * Returns an add command string for adding the {@code food}.","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    public static String getAddCommand(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getFoodDetails(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     * Returns the part of command string for the given {@code food}\u0027s details.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    public static String getFoodDetails(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"        sb.append(PREFIX_NAME + food.getName().toString() + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        sb.append(PREFIX_UNIT + food.getUnit().toString() + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        sb.append(PREFIX_QUANTITY + food.getQuantity().toString() + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        sb.append(PREFIX_EXPIRY_DATE + food.getExpiryDate().toString() + \" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        food.getTags().stream().forEach(","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        );","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"    public static String getEditFoodDescriptorDetails(EditFoodDescriptor descriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"        descriptor.getUnit().ifPresent(unit -\u003e sb.append(PREFIX_UNIT).append(unit.toString()).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        descriptor.getQuantity().ifPresent(quantity -\u003e sb.append(PREFIX_QUANTITY)","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"                .append(quantity.toString()).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"        descriptor.getExpiryDate().ifPresent(expiryDate -\u003e sb.append(PREFIX_EXPIRY_DATE)","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"                .append(expiryDate.toString()).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":53}},{"path":"src/test/java/seedu/wife/testutil/IncreaseFoodDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.logic.commands.foodcommands.IncreaseCommand.IncreaseFoodDescriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import seedu.wife.model.food.Quantity;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":" * A utility class to help with building IncreaseFoodDescriptor objects.","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class IncreaseFoodDescriptorBuilder {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    private IncreaseFoodDescriptor descriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public IncreaseFoodDescriptorBuilder() {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        descriptor \u003d new IncreaseFoodDescriptor();","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    public IncreaseFoodDescriptorBuilder(IncreaseFoodDescriptor descriptor) {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        this.descriptor \u003d new IncreaseFoodDescriptor(descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     * Returns an {@code IncreaseFoodDescriptor} with fields containing {@code food}\u0027s details","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    public IncreaseFoodDescriptorBuilder(Food food) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        descriptor \u003d new IncreaseFoodDescriptor();","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        descriptor.setQuantity(food.getQuantity());","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"     * Sets the {@code Quantity} of the {@code IncreaseFoodDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    public IncreaseFoodDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"    public IncreaseFoodDescriptor build() {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        return descriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"Bisceto":41}},{"path":"src/test/java/seedu/wife/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":1,"-":71}},{"path":"src/test/java/seedu/wife/testutil/TagBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.TagName;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":" * A utility class to help with building Tag objects.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"public class TagBuilder {","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public static final String DEFAULT_NAME \u003d \"testtag\";","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    private TagName name;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"     * Creates a {@code TagBuilder} with the default details.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    public TagBuilder() {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        name \u003d new TagName(DEFAULT_NAME);","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"     * Initializes the TagBuilder with the data of {@code tagToCopy}.","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    public TagBuilder(Tag tagToCopy) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"        name \u003d new TagName(tagToCopy.getTagName());","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     * Sets the {@code Name} of the {@link Tag} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"    public TagBuilder withTagName(String name) {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        this.name \u003d new TagName(name);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"    public Tag build() {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"        return new Tag(name.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":39}},{"path":"src/test/java/seedu/wife/testutil/TagUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.logic.commands.tagcommands.CreateTagCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * A utility class for Tag.","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"public class TagUtil {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     * Returns an add command string for adding the {@code tag}.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"ScorpiusSigma"},"content":"    public static String getCreateTagCommand(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"ScorpiusSigma"},"content":"        return CreateTagCommand.COMMAND_WORD + \" \" + getTagDetails(tag);","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"     * Returns the part of command string for the given {@code tag}\u0027s details.","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public static String getTagDetails(Tag tag) {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"        return String.format(\"%s%s\", PREFIX_NAME, tag.getTagName());","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jnjy":22,"ScorpiusSigma":3}},{"path":"src/test/java/seedu/wife/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"//import seedu.wife.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"     * Returns the middle index of the food in the {@code model}\u0027s food list.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"        return Index.fromOneBased(model.getFilteredFoodList().size() / 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"        return Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"    public static Food getFood(Model model, Index index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"        return model.getFilteredFoodList().get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jnjy":10,"-":46}},{"path":"src/test/java/seedu/wife/testutil/TypicalFood.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_EXPIRY_DATE_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_NAME_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_QUANTITY_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_UNIT_MEIJI;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" * A utility class containing a list of {@code Food} objects to be used in tests.","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"public class TypicalFood {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final Food CHOCOLATE \u003d new FoodBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"            .withName(\"Breyls\")","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"            .withUnit(\"Bar\")","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"            .withQuantity(\"3\")","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"            .withExpiryDate(\"13-11-2024\")","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    public static final Food MEIJI \u003d new FoodBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"            .withName(VALID_NAME_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"            .withUnit(VALID_UNIT_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"            .withQuantity(VALID_QUANTITY_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public static final Food CHOCOLATE_WITHOUT_TAG \u003d new FoodBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"            .withName(\"Breyls\")","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"            .withUnit(\"Bar\")","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"            .withQuantity(\"3\")","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"            .withExpiryDate(\"13-11-2024\")","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"jnjy"},"content":"    public static final Food MEIJI_WITHOUT_TAG \u003d new FoodBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"jnjy"},"content":"            .withName(VALID_NAME_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"jnjy"},"content":"            .withUnit(VALID_UNIT_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"jnjy"},"content":"            .withQuantity(VALID_QUANTITY_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"jnjy"},"content":"            .withExpiryDate(VALID_EXPIRY_DATE_MEIJI)","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"jnjy"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meiji\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"jnjy"},"content":"    private TypicalFood() {} // prevents instantiation","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jnjy"},"content":"    public static List\u003cFood\u003e getTypicalFood() {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jnjy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEIJI, CHOCOLATE));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"jnjy"},"content":"    public static List\u003cFood\u003e getTypicalFoodWithoutTag() {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"jnjy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEIJI_WITHOUT_TAG, CHOCOLATE_WITHOUT_TAG));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"jnjy"},"content":"    public static List\u003cFood\u003e getTypicalFoodCombination() {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"jnjy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEIJI, CHOCOLATE_WITHOUT_TAG));","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":61}},{"path":"src/test/java/seedu/wife/testutil/TypicalIndex.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":"public class TypicalIndex {","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":"    public static final Index INDEX_FIRST_FOOD \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"    public static final Index INDEX_SECOND_FOOD \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    public static final Index INDEX_THIRD_FOOD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jnjy":6,"-":6}},{"path":"src/test/java/seedu/wife/testutil/TypicalTag.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_CHOCOLATE;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_DAIRY;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_NEW;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.logic.commands.CommandTestUtil.VALID_TAG_USED;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ScorpiusSigma"},"content":"import java.util.List;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":" * A utility class containing a list of {@code Tag} objects to be used in tests.","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"public class TypicalTag {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    public static final Tag DAIRY_TAG \u003d new TagBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"            .withTagName(VALID_TAG_DAIRY)","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    public static final Tag CHOCOLATE_TAG \u003d new TagBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"            .withTagName(VALID_TAG_CHOCOLATE)","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"    public static final Tag NEW_TAG \u003d new TagBuilder()","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"            .withTagName(VALID_TAG_NEW)","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public static final Tag USED_TAG \u003d new TagBuilder()","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"            .withTagName(VALID_TAG_USED)","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"            .build();","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ScorpiusSigma"},"content":"    public static List\u003cTag\u003e getTypicalTag() {","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"        return new ArrayList\u003cTag\u003e(Arrays.asList(NEW_TAG, USED_TAG, DAIRY_TAG, CHOCOLATE_TAG));","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ScorpiusSigma"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jnjy":29,"ScorpiusSigma":8}},{"path":"src/test/java/seedu/wife/testutil/TypicalWife.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"ScorpiusSigma"},"content":"import seedu.wife.model.tag.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * A utility class containing a list of {@code Wife} objects to be used in tests.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":"public class TypicalWife {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"     * Returns an {@code Wife} with all the typical food (tagged).","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    public static Wife getTypicalWife() {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"        Wife wife \u003d new Wife();","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"        for (Food food : TypicalFood.getTypicalFood()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"            wife.addFood(food);","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ScorpiusSigma"},"content":"        for (Tag tag : TypicalTag.getTypicalTag()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ScorpiusSigma"},"content":"            wife.createTag(tag);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ScorpiusSigma"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"        return wife;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"     * Returns an {@code Wife} with all the typical food (untagged).","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    public static Wife getTypicalWifeWithoutFoodTag() {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"        Wife wife \u003d new Wife();","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"        for (Food food : TypicalFood.getTypicalFoodWithoutTag()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"            wife.addFood(food);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"ScorpiusSigma"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"jnjy"},"content":"        return wife;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jnjy":31,"ScorpiusSigma":7}},{"path":"src/test/java/seedu/wife/testutil/WifeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.Wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import seedu.wife.model.food.Food;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jnjy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jnjy"},"content":" * A utility class to help with building Wife objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jnjy"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jnjy"},"content":" *     {@code Wife wife \u003d new Wife().withFood(\"Meiji\", \"Chocolate\").build();}","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jnjy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jnjy"},"content":"public class WifeBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"    private Wife wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jnjy"},"content":"    public WifeBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jnjy"},"content":"        wife \u003d new Wife();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jnjy"},"content":"    public WifeBuilder(Wife wife) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jnjy"},"content":"        this.wife \u003d wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jnjy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jnjy"},"content":"     * Adds a new {@code FOod} to the {@code Wife} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jnjy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jnjy"},"content":"    public WifeBuilder withFood(Food food) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jnjy"},"content":"        wife.addFood(food);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jnjy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jnjy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jnjy"},"content":"    public Wife build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jnjy"},"content":"        return wife;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jnjy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jnjy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jnjy":35}},{"path":"src/test/java/seedu/wife/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jnjy":1,"-":34}},{"path":"src/test/java/seedu/wife/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jnjy"},"content":"package seedu.wife.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jnjy"},"content":"import static seedu.wife.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"jnjy"},"content":"import seedu.wife.MainApp;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jnjy":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003c?import seedu.wife.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jnjy":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"jnjy"},"content":"\u003cfx:root type\u003d\"seedu.wife.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jnjy":1,"-":5}}]
