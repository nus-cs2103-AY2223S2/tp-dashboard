[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W11-4/tp/actions)","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"The problem addressed is to assist in digitizing patient details. By converting traditional paper records into electronic ones, healthcare providers can easily and efficiently organize and manage patient data. This not only saves time and reduces the risk of errors, but it also makes it easier to retrieve and update the information when needed. Additionally, with the use of electronic scheduling systems, healthcare providers can easily schedule and reschedule appointments, improving the overall experience for both patients and staff. Overall, digitizing patient details helps to improve the quality of care and make the healthcare delivery process more streamlined and efficient.  ","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"The product is intended for use by medical professionals, specifically doctors or their receptionists, who are experienced with computers and currently using paper records to store patient information. With this solution, they will be able to better manage their patient data, including updating, accessing and adding new patient details easily. ","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"This solution digitizes patient records and reduces errors, such as wrong updates. Moreover, it helps to reduce the time taken to organize, search and audit check the patient information, thus making scheduling appointments easier and providing efficient access to updated information.","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"SFCoding123":7,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"    implementation files(\u0027lib/pdfbox-app-2.0.27.jar\u0027)","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"run {","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SFCoding123":6,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"### Wang ShaoFeng","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"\u003cimg src\u003d\"images/sfcoding123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"[[github](https://github.com/sfcoding123)]","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"* Role: Team Lead","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"* Responsibilities: Project Management and Testing","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"WeideTeo"},"content":"### Wei De","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"WeideTeo"},"content":"\u003cimg src\u003d\"images/weideteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"WeideTeo"},"content":"[[github](https://github.com/WeideTeo)]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"WeideTeo"},"content":"[[portfolio](https://www.linkedin.com/in/weideteo/)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"WeideTeo"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"WeideTeo"},"content":"* Responsibilities: Add Functions","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"### Luo Xizi","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"\u003cimg src\u003d\"images/lxz333.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"[[github](https://github.com/lxz333)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"### Shen Chenzi","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"\u003cimg src\u003d\"images/shenchenzizoe.png\" width\u003d\"220px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"[[github](https://github.com/shenchenzizoe)]","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"* Year 2 NUS Computer Science Student","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"* Sleep \u003e\u003d 12 hours per day","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"### Xiao Yan","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"\u003cimg src\u003d\"images/windycall.png\" width\u003d\"220px\" height\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"[[github](http://github.com/windycall)]","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"* Responsibilities: Storage, Backend","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"shenchenzizoe":5,"SFCoding123":5,"lxz333":3,"WindyCall":4,"WeideTeo":6,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"WeideTeo"},"content":"* private doctor or doctor\u0027s receptionist","lastModifiedDate":"2023-03-05"},{"lineNumber":261,"author":{"gitId":"WeideTeo"},"content":"* requires to manage large amount of patients details","lastModifiedDate":"2023-03-05"},{"lineNumber":262,"author":{"gitId":"WeideTeo"},"content":"* wants to organise and access patients data easily","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"WeideTeo"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"WeideTeo"},"content":"The problem addressed is to assist in digitizing patient details. By converting traditional paper records into","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"WeideTeo"},"content":"electronic ones, healthcare providers can easily and efficiently organize and manage patient data.","lastModifiedDate":"2023-03-05"},{"lineNumber":270,"author":{"gitId":"WeideTeo"},"content":"This not only saves time and reduces the risk of errors, but it also makes it easier to retrieve and update the","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"WeideTeo"},"content":"information when needed.","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"WeideTeo"},"content":"Additionally, with the use of electronic scheduling systems, healthcare providers can easily schedule and reschedule","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"WeideTeo"},"content":"appointments, improving the overall experience for both patients and staff.","lastModifiedDate":"2023-03-05"},{"lineNumber":274,"author":{"gitId":"WeideTeo"},"content":"Overall, digitizing patient details helps to improve the quality of care and make the healthcare delivery process more","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"WeideTeo"},"content":"streamlined and efficient.","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                                       | So that I can…​                                                                                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"WeideTeo"},"content":"|----------|---------|------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Record a person\u0027s age                                                              | Keep track of their basic profile                                                                                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":285,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Record a person\u0027s gender                                                           | Assign the male or female doctor when necessary                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Record a person\u0027s phone number                                                     | Contact them conveniently                                                                                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":287,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Record a person\u0027s email/address                                                    | Efficiently manage the communication and consultation process with patients                                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Give patients zero or more tags                                                    | Easily classify different groups of patients by their illness, medication, and other information to serve their specific needs |","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Add a certain medical condition and add the relevant patients in the same category | Organize patients based on their medical conditions                                                                            |","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Add new types of medications and assign them to patients                           | Keep track of patients\u0027 medications and prescriptions                                                                          | ","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | List all current contacts                                                          | View general information, update list, and add filters/classifications                                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Rank patients by schedule, name, and medical conditions                            | Manage consultation time and content efficiently                                                                               | ","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for a medication and get the number of patients taking it                   | Determine how much medication to order for the clinic                                                                          | ","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Edit patient information (phone number, name, location, medical condition)         | Update patient records                                                                                                         | ","lastModifiedDate":"2023-03-05"},{"lineNumber":295,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Edit a patient contact                                                             | Modify patient contact information                                                                                             | ","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Schedule appointments                                                              | Book and manage appointments to reduce workload                                                                                | ","lastModifiedDate":"2023-03-05"},{"lineNumber":297,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Update appointment timing                                                          | Modify appointment times                                                                                                       | ","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Mark appointments as done                                                          | Indicate when appointments are completed                                                                                       | ","lastModifiedDate":"2023-03-05"},{"lineNumber":299,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Edit available medication amount                                                   | Maintain inventory and stock levels                                                                                            | ","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for patients by name                                                        | Locate patient records by name                                                                                                 | ","lastModifiedDate":"2023-03-05"},{"lineNumber":301,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for patients by phone number                                                | Locate patient records by phone number                                                                                         | ","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for patients by location                                                    | Locate patients by location                                                                                                    | ","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for patients by medical condition                                           | Locate patients by medical condition                                                                                           | ","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Search for appointments by date                                                    | View appointments on a specific date                                                                                           | ","lastModifiedDate":"2023-03-05"},{"lineNumber":305,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Access help function                                                               | Get information on using the software                                                                                          | ","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Access patient health information                                                  | View patient medical history                                                                                                   | ","lastModifiedDate":"2023-03-05"},{"lineNumber":307,"author":{"gitId":"WeideTeo"},"content":"| `* * *`  | User    | Access patient prescriptions                                                       | View patient medication history                                                                                                | ","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Check available medication stock                                                   | Determine when to order more medication                                                                                        | ","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Clear all contacts                                                                 | Delete all patient records                                                                                                     | ","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Clear contacts by tags                                                             | Delete patient records based on tags                                                                                           | ","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Clear contacts by location                                                         | Delete patient records based on location                                                                                       | ","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Delete medication                                                                  | Remove a medication from the system                                                                                            | ","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"WeideTeo"},"content":"| `*`      | User    | Delete appointment                                                                 | Remove an appointment from the system                                                                                          | ","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"lxz333"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"lxz333"},"content":"1.  User requests to list patients.","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"lxz333"},"content":"2.  Medimate shows a list of patients.","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"lxz333"},"content":"3.  User requests to delete a specific patient in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":328,"author":{"gitId":"lxz333"},"content":"4.  Medimate deletes the patient.","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"lxz333"},"content":"    * 3a1. Medimate shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"SFCoding123"},"content":"**Use case: Edit a patient particulars**","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"SFCoding123"},"content":"1. User request to Edit a patient details.","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"SFCoding123"},"content":"2. MediMate ask for type of details.","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"SFCoding123"},"content":"3. User chose the type and enter the new details.","lastModifiedDate":"2023-03-06"},{"lineNumber":353,"author":{"gitId":"SFCoding123"},"content":"4. MediMate record the details.","lastModifiedDate":"2023-03-06"},{"lineNumber":354,"author":{"gitId":"lxz333"},"content":"   ","lastModifiedDate":"2023-03-06"},{"lineNumber":355,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"SFCoding123"},"content":"* 1a. User enter wrong input format. ","lastModifiedDate":"2023-03-06"},{"lineNumber":360,"author":{"gitId":"SFCoding123"},"content":"  * 1a1. Medimate give correct format and ask user to input again.","lastModifiedDate":"2023-03-06"},{"lineNumber":361,"author":{"gitId":"SFCoding123"},"content":"  * 1a2. User enters the input with correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":362,"author":{"gitId":"lxz333"},"content":"    ","lastModifiedDate":"2023-03-06"},{"lineNumber":363,"author":{"gitId":"SFCoding123"},"content":"    Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":364,"author":{"gitId":"SFCoding123"},"content":"  ","lastModifiedDate":"2023-03-06"},{"lineNumber":365,"author":{"gitId":"SFCoding123"},"content":"* 1b. Patient does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":366,"author":{"gitId":"SFCoding123"},"content":"    * 1b1. Medimate reminds user to check for patient name.","lastModifiedDate":"2023-03-06"},{"lineNumber":367,"author":{"gitId":"SFCoding123"},"content":"    * 1b2. User enters the input with correct format","lastModifiedDate":"2023-03-06"},{"lineNumber":368,"author":{"gitId":"lxz333"},"content":"      ","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"SFCoding123"},"content":"      Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"SFCoding123"},"content":"* 3a. User enter Invalid type.","lastModifiedDate":"2023-03-06"},{"lineNumber":372,"author":{"gitId":"SFCoding123"},"content":"    * 3a1. Medimate give the available types and ask user to input again.","lastModifiedDate":"2023-03-06"},{"lineNumber":373,"author":{"gitId":"lxz333"},"content":"      ","lastModifiedDate":"2023-03-06"},{"lineNumber":374,"author":{"gitId":"SFCoding123"},"content":"      Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":375,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":376,"author":{"gitId":"SFCoding123"},"content":"**Use case: Find a patient particulars**","lastModifiedDate":"2023-03-06"},{"lineNumber":377,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":378,"author":{"gitId":"SFCoding123"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":379,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":380,"author":{"gitId":"SFCoding123"},"content":"1. User request to find a patient using his details.","lastModifiedDate":"2023-03-06"},{"lineNumber":381,"author":{"gitId":"SFCoding123"},"content":"2. Medimate ask for the type of details.","lastModifiedDate":"2023-03-06"},{"lineNumber":382,"author":{"gitId":"SFCoding123"},"content":"3. User chose the type of details.","lastModifiedDate":"2023-03-06"},{"lineNumber":383,"author":{"gitId":"SFCoding123"},"content":"4. Medimate display the patient.","lastModifiedDate":"2023-03-06"},{"lineNumber":384,"author":{"gitId":"lxz333"},"content":"   ","lastModifiedDate":"2023-03-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":387,"author":{"gitId":"SFCoding123"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"SFCoding123"},"content":"* 1a. User enter wrong input format.","lastModifiedDate":"2023-03-06"},{"lineNumber":390,"author":{"gitId":"SFCoding123"},"content":"    * 1a1. Medimate give correct format and ask user to input again.","lastModifiedDate":"2023-03-06"},{"lineNumber":391,"author":{"gitId":"SFCoding123"},"content":"    * 1a2. User enters the input with correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"lxz333"},"content":"      ","lastModifiedDate":"2023-03-06"},{"lineNumber":393,"author":{"gitId":"SFCoding123"},"content":"      Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":396,"author":{"gitId":"SFCoding123"},"content":"* 1b. Patient does not exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":397,"author":{"gitId":"SFCoding123"},"content":"    * 1b1. Medimate reminds user to check for patient name.","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"SFCoding123"},"content":"    * 1b2. User enter the input with correct format. ","lastModifiedDate":"2023-03-06"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"SFCoding123"},"content":"      Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":401,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":402,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":403,"author":{"gitId":"SFCoding123"},"content":"*  3a. User chose Invalid type","lastModifiedDate":"2023-03-06"},{"lineNumber":404,"author":{"gitId":"SFCoding123"},"content":"   * 3a1. Medimate give the available types and ask user to input again","lastModifiedDate":"2023-03-06"},{"lineNumber":405,"author":{"gitId":"SFCoding123"},"content":"     Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"lxz333"},"content":"**Use case:  Add a patient**","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"lxz333"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"lxz333"},"content":"1.  User requests to add a patient and inputs his information.","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"lxz333"},"content":"2.  Medimate adds the patient.","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":415,"author":{"gitId":"lxz333"},"content":"    Use Case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":416,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":417,"author":{"gitId":"lxz333"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":418,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":419,"author":{"gitId":"lxz333"},"content":"* 1a. User input format is wrong.","lastModifiedDate":"2023-03-06"},{"lineNumber":420,"author":{"gitId":"lxz333"},"content":"  * 1a1.  Medimate asks User for another correct input of the patient’s information.","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"lxz333"},"content":"  * 1a2. User inputs a new line of patient’s information with the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"lxz333"},"content":"    ","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"lxz333"},"content":"    Use Case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"lxz333"},"content":"**Use case:  List patients by their booked schedules**","lastModifiedDate":"2023-03-06"},{"lineNumber":426,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":427,"author":{"gitId":"lxz333"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":428,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":429,"author":{"gitId":"lxz333"},"content":"1. User requests to list all patients based on their scheduled time","lastModifiedDate":"2023-03-06"},{"lineNumber":430,"author":{"gitId":"lxz333"},"content":"2. Medimate displays a list of all patients sorted in order based on scheduled time","lastModifiedDate":"2023-03-06"},{"lineNumber":431,"author":{"gitId":"lxz333"},"content":"   ","lastModifiedDate":"2023-03-06"},{"lineNumber":432,"author":{"gitId":"lxz333"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":433,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"lxz333"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":435,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":436,"author":{"gitId":"lxz333"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-06"},{"lineNumber":437,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":438,"author":{"gitId":"lxz333"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":439,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":440,"author":{"gitId":"WindyCall"},"content":"**Use case: Make appointment with specified patient**","lastModifiedDate":"2023-03-24"},{"lineNumber":441,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":442,"author":{"gitId":"WindyCall"},"content":"**MSS**","lastModifiedDate":"2023-03-24"},{"lineNumber":443,"author":{"gitId":"WindyCall"},"content":"1. User search for all appointments on a specified date","lastModifiedDate":"2023-03-24"},{"lineNumber":444,"author":{"gitId":"WindyCall"},"content":"2. Mediate displays all patients with appointment all that date with time sorted.","lastModifiedDate":"2023-03-24"},{"lineNumber":445,"author":{"gitId":"WindyCall"},"content":"3. User make appointment with specified patient using CommandLine","lastModifiedDate":"2023-03-24"},{"lineNumber":446,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":447,"author":{"gitId":"WindyCall"},"content":"   Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":448,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":449,"author":{"gitId":"WindyCall"},"content":"**Extensions**","lastModifiedDate":"2023-03-24"},{"lineNumber":450,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":451,"author":{"gitId":"WindyCall"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-24"},{"lineNumber":452,"author":{"gitId":"WindyCall"},"content":"* 2a.","lastModifiedDate":"2023-03-24"},{"lineNumber":453,"author":{"gitId":"WindyCall"},"content":"  * 2a1. User\u0027s input is invalid","lastModifiedDate":"2023-03-24"},{"lineNumber":454,"author":{"gitId":"WindyCall"},"content":"  * 2a2. wait to be modified","lastModifiedDate":"2023-03-24"},{"lineNumber":455,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":456,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"lxz333"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-06"},{"lineNumber":461,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SFCoding123":40,"lxz333":50,"WindyCall":16,"WeideTeo":43,"-":372}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"_---_","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"MediMate (MM) is a **cross-platform desktop application** for medical professionals, specifically doctors or their receptionists,","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"who are experienced with computers and currently using paper records to store patient information. ","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"With this solution, they will be able to better manage their patient data, including updating, ","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"accessing and adding new patient details easily. It is optimized for use via a **Command Line Interface (CLI)** ","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"If you can type fast, MM can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"## Table of Contents","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"- [Features](#features)","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    - [`help`](#viewing-help--help)","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    - [`add`](#adding-a-patient--add)","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    - [`addTime`](#adding-patient-scheduled-time--addTime)","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    - [`list`](#listing-all-patients--list)","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    - [`listTime`](#listing-patients-by-time--listTime)","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"    - [`edit`](#editing-a-patient--edit)","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"    - [`find`](#locating-patients-by-name--find)","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"    - [`delete`](#deleting-a-patient--delete)","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    - [`deletes`](#deleting-multiple-patients--deletes)","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    - [`clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    - [`exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    - [Saving of data](#saving-the-data)","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    - [Editing of data](#editing-the-data-file)","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    - [Archiving of data](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"1. Download the latest `MediMate.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MediMate.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar MediMate.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"   * `list` : Lists all patients.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/Jo0hn street, block 123, #01-01 ag/20 t/classmate m/cough` : Adds a patient named `John Doe` to the Patient List.","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"   * `delete 3` : Deletes the 3rd patient shown in the current list.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"   * `clear` : Deletes all patients.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"shenchenzizoe"},"content":"### Adding a patient : `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"shenchenzizoe"},"content":"Adds a patient to the address book:","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"shenchenzizoe"},"content":"* Enter the patient\u0027s name, phone number, email, and address.","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"shenchenzizoe"},"content":"* You can add any number of tags to the patient\u0027s profile by adding \"t/\" followed by the tag.","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"* You can also add patient\u0027s age, medical condition and time for first meeting.","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"* To record a patient\u0027s other information, add them as additional tags to the patient\u0027s profile.","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ag/AGE [t/TAG]…​ m/MEDICAL_CONDITION`","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"shenchenzizoe"},"content":"A patient can have any number of tags (including 0)","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 ag/12 t/criminal m/cough`","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"The first example contains strictly required information to identify a patient.","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"The second example contains more information relevant to that patient.","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"### Adding patient scheduled time : `addTime`","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"_Details coming in v1.3 soon ..._","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"shenchenzizoe"},"content":"### Listing all patients : `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"shenchenzizoe"},"content":"Shows a list of all patients in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"shenchenzizoe"},"content":"### Listing patients by time : `listTime`","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"shenchenzizoe"},"content":"_Details coming in v1.2 soon ..._","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"shenchenzizoe"},"content":"### Editing a patient : `edit`","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"shenchenzizoe"},"content":"Edits an existing patient in the patient list:","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"shenchenzizoe"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"shenchenzizoe"},"content":"* Specify the field you want to edit (name, phone, email, address, or tag) followed by the new value. At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"shenchenzizoe"},"content":"* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"shenchenzizoe"},"content":"* You can remove all the patient’s tags by typing `t/` without","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"shenchenzizoe"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st patient to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"shenchenzizoe"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd patient to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"shenchenzizoe"},"content":"### Locating patients by name : `find`","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"shenchenzizoe"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lxz333"},"content":"* Patients maching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"shenchenzizoe"},"content":"### Deleting a patient : `delete`","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"shenchenzizoe"},"content":"Deletes the specified patient from the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"shenchenzizoe"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"shenchenzizoe"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"shenchenzizoe"},"content":"* `list` followed by `delete 2` deletes the 2nd patient in the patient list.","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"shenchenzizoe"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st patient in the results of the `find` command.","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"shenchenzizoe"},"content":"### Deleting multiple patients : `deletes` ","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"shenchenzizoe"},"content":"Deletes the specified patient from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"SFCoding123"},"content":"Format: `delete INDEX1 INDEX2 ...`","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"shenchenzizoe"},"content":"* Deletes the patient at the specified INDEXs.","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"shenchenzizoe"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"SFCoding123"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"SFCoding123"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"SFCoding123"},"content":"* `list` followed by `delete 2 3` deletes the 2nd person and 3rd in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"SFCoding123"},"content":"* `find Betsy` followed by `delete 1 2` deletes the 1st and 2nd person in the results of the `find` command.","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"shenchenzizoe"},"content":"Clears all entries from the patient list.","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"shenchenzizoe"},"content":"MediMate data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"shenchenzizoe"},"content":"MediMate data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"WindyCall"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ag/AGE [t/TAG]…​ m/MEDICAL_CONDITION` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shenchenzizoe":67,"SFCoding123":9,"WindyCall":11,"lxz333":1,"-":156}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"//The text AB-3 in docs\\_sass\\minima\\_base.scss needs updating too (it comes into play when you convert documentation to PDF formats).","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    content: \"AB-3\";","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"SFCoding123":1,"-":294}},{"path":"docs/team/lxz333.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"* _{you can add/remove categories in the list above }_","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lxz333":50}},{"path":"docs/team/sfcoding123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"* _{you can add/remove categories in the list above }_","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"SFCoding123":46}},{"path":"docs/team/shenchenzizoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"title: Shen Chenzi\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching ","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"assistants in the modules they are taking. ","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shenchenzizoe":33}},{"path":"docs/team/weideteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeideTeo"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"WeideTeo"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"WeideTeo"},"content":"title: Teo Wei De\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"WeideTeo"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"WeideTeo"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"WeideTeo"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"WeideTeo"},"content":"assistants in the modules they are taking.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"WeideTeo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"WeideTeo"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"WeideTeo"},"content":"  * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"WeideTeo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"WeideTeo"},"content":"  * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"WeideTeo"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"WeideTeo"},"content":"  * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"WeideTeo"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"WeideTeo"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"WeideTeo"},"content":"    * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"WeideTeo"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"WeideTeo"},"content":"  * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"WeideTeo"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"WeideTeo"},"content":"  * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"WeideTeo"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"WeideTeo"},"content":"  * To be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"WeideTeo":33}},{"path":"docs/team/windycall.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"title: Xiao Yan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"assistants in the modules they are taking.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    * User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"* **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"* **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"* **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    * To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"WindyCall":33}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"WeideTeo"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"WeideTeo"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"WeideTeo"},"content":"    public int getZeroBased() {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"WeideTeo"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"WeideTeo"},"content":"    public int getOneBased() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"WeideTeo"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int compareTo(Index o) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        //decending order","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return o.zeroBasedIndex - this.zeroBasedIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"WeideTeo":10,"-":49}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"     * Returns true if {@code path} can be converted into a","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"     * {@code Path} via {@link Paths # get(String)}, otherwise returns false.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shenchenzizoe":2,"-":81}},{"path":"src/main/java/seedu/address/files/FileGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import java.io.File;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.PDDocument;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.PDDocumentCatalog;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDField;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDTextField;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":" * The type File generator.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"public class FileGenerator {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"    //store this field at Json","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    private static int formId \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    private Person person;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    private String doctorName;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    private String description;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    private int days;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"     * Instantiates a new File generator.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"     * @param person      the person","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"     * @param doctorName  the doctor name","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"     * @param description the description","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"     * @param days        the days","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"    public FileGenerator(Person person, String doctorName, String description, int days) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"        this.doctorName \u003d doctorName;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        formId++;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"    public static int getFormId() {","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"        return formId;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"     * Create Mc form.","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"    public void createMcForm(String filename) {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"            // Load the original PDF form","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"            PDDocument pdfDocument \u003d PDDocument.load(new File(\"lib/MC.pdf\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"            // Get the PDF form fields","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"            PDDocumentCatalog docCatalog \u003d pdfDocument.getDocumentCatalog();","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"            PDAcroForm acroForm \u003d docCatalog.getAcroForm();","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"            //Get all fields","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"            List\u003cPDField\u003e fieldList \u003d acroForm.getFields();","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"            for (PDField field: fieldList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"                if (field instanceof PDTextField) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"                    String fileName \u003d field.getFullyQualifiedName();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"                    switch (fileName) {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"                    case \"name\":","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(person.getName().fullName);","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"                    case \"DOB\":","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(\"222-2222\");","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"                    case \"days\":","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(Integer.toString(days));","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"                    case \"today\":","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"                        // Fill in the date fields","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"                        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(now.format(formatter));","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"                    case \"startDate\":","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(\"2019-11-11\");","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"                    case \"endDate\":","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(\"2019-11-12\");","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"                    case \"DoctorName\":","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(doctorName);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"                    default:","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"                        field.setValue(Integer.toString(formId));","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"                    }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"SFCoding123"},"content":"            //making file name unique using store MC number do file check before save.","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"SFCoding123"},"content":"            pdfDocument.save(new File(\"reports/\" + person.getName().fullName + \"/\" + filename + \"-mc.pdf\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"SFCoding123"},"content":"            pdfDocument.close();","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"SFCoding123":110}},{"path":"src/main/java/seedu/address/files/FileReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":" * The interface File reader.","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"public interface FileReader\u003cT\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"    T loadFile(Path path);","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"    Path getPath();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"    String getFileName(Path path);","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":16}},{"path":"src/main/java/seedu/address/files/FileStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import java.io.File;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.SwingUtilities;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":" * The type Image storage.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"public class FileStorage {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"    private String username;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"     * Instantiates a new File storage.","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"     * @param username the username","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    public FileStorage(String username) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"     * Create drc.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"     * @param path the path","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    public static void createDrc(String path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"        File directory \u003d new File(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        checkDir(directory);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"     * Delete drc.","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"     * @param path the path","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"    public static void deleteDrc(String path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        File directory \u003d new File(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"        if (directory.exists()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"            for (File file: directory.listFiles()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"                file.delete();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"            directory.delete();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"     * Upload file.","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"    public void uploadFile() {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"        SwingUtilities.invokeLater(() -\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"            JFileChooser fileChooser \u003d new JFileChooser();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"            fileChooser.setFileFilter(new FileNameExtensionFilter(","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"                    \"PDF and Image files\", \"pdf\", \"jpg\", \"jpeg\", \"png\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"            fileChooser.setMultiSelectionEnabled(true);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"            int result \u003d fileChooser.showOpenDialog(null);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"            //delete reject file if wrong extension not .pdf or .img","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"            if (result \u003d\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"                File[] selectedFiles \u003d fileChooser.getSelectedFiles();","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"                String userDirPath \u003d \"reports/\" + this.username + \"/\";","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"                File userDir \u003d new File(userDirPath);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"                checkDir(userDir);","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"                for (File selectedFile : selectedFiles) { // loop through each selected file","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"                    String fileName \u003d selectedFile.getName();","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"                    String extension \u003d fileName.substring(fileName.lastIndexOf(\".\") + 1);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"                    if (extension.equalsIgnoreCase(\"pdf\") || extension.equalsIgnoreCase(\"jpg\")","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"                            || extension.equalsIgnoreCase(\"jpeg\") || extension.equalsIgnoreCase(\"png\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"                        Path srcPath \u003d selectedFile.toPath();","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"                        Path destPath \u003d Paths.get(userDirPath + fileName);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"                        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"                            Files.copy(srcPath, destPath, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"                            System.out.println(\"Error copying file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"                        }","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"                    } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"                        System.out.println(\"Wrong File type\");","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"                    }","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"        });","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"     * Is image file boolean.","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"     * @param file the file","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"    public static boolean isImageFile(File file) {","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"        String fileName \u003d file.getName();","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"SFCoding123"},"content":"        String extension \u003d fileName.substring(fileName.lastIndexOf(\".\") + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"SFCoding123"},"content":"        return extension.equalsIgnoreCase(\"jpg\")","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"SFCoding123"},"content":"                || extension.equalsIgnoreCase(\"jpeg\")","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"SFCoding123"},"content":"                || extension.equalsIgnoreCase(\"png\")","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"SFCoding123"},"content":"                || extension.equalsIgnoreCase(\"bmp\")","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"SFCoding123"},"content":"                || extension.equalsIgnoreCase(\"gif\");","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"SFCoding123"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"SFCoding123"},"content":"    private void imgToPdf(File file) {","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"SFCoding123"},"content":"        if (isImageFile(file)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"SFCoding123"},"content":"            try {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"SFCoding123"},"content":"                BufferedImage image \u003d ImageIO.read(file);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"SFCoding123"},"content":"                PDDocument document \u003d new PDDocument();","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"SFCoding123"},"content":"                PDPage page \u003d new PDPage();","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"SFCoding123"},"content":"                document.addPage(page);","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"SFCoding123"},"content":"                PDImageXObject pdfImage \u003d LosslessFactory.createFromImage(document, image);","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"SFCoding123"},"content":"                PDImageXObject pdImageObject \u003d PDImageXObject.createFromFileByContent(file, document);","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"SFCoding123"},"content":"                int width \u003d image.getWidth();","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"SFCoding123"},"content":"                int height \u003d image.getHeight();","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"SFCoding123"},"content":"                PDRectangle pageSize \u003d new PDRectangle(width, height);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"SFCoding123"},"content":"                PDPage page1 \u003d new PDPage(pageSize);","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"SFCoding123"},"content":"                document.addPage(page1);","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"SFCoding123"},"content":"                File pdfFile \u003d new File(file.getAbsoluteFile() + \".pdf\");","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"SFCoding123"},"content":"                document.save(pdfFile);","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"SFCoding123"},"content":"                document.close();","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"SFCoding123"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"SFCoding123"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"SFCoding123"},"content":"    */","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"SFCoding123"},"content":"     * Check dir.","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"SFCoding123"},"content":"     * @param userDir the user dir","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"SFCoding123"},"content":"    public static void checkDir(File userDir) {","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"SFCoding123"},"content":"        if (!userDir.exists()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"SFCoding123"},"content":"            userDir.mkdirs();","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":144}},{"path":"src/main/java/seedu/address/files/FilesManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":" * The type Files manager.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"public class FilesManager {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"    private Person person;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"    private Path reportsDir \u003d Paths.get(\"reports\");","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    private FileStorage store;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"    private FileGenerator create;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    private String path;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"     * Instantiates a new Files manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"     * @param person the person","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"    public FilesManager(Person person) {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"        store \u003d new FileStorage(person.getName().fullName);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"        create \u003d new FileGenerator(person,","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"                \"Handsome\", \"description\", 20);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        path \u003d \"reports/\" + person.getName().fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    public void initFile() {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.createDrc(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"    public void deleteAll() {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.deleteDrc(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"    public void addFile() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"        store.uploadFile();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"     * Generate mc.","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"    public void generateMc() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"        Path path2 \u003d Paths.get(path);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.createDrc(path);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"        create.createMcForm(Integer.toString(numberOfFiles(path2)));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"    public List\u003cPath\u003e getAllDirectories() {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPath\u003e directories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"        try (Stream\u003cPath\u003e stream \u003d Files.walk(reportsDir)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"            stream.filter(Files::isDirectory)","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"                    .forEach(directories::add);","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"        return directories;","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"    public List\u003cPath\u003e getAllFiles(Path directory) {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPath\u003e files \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"        try (Stream\u003cPath\u003e stream \u003d Files.walk(directory)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"            stream.filter(Files::isRegularFile)","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"                    .forEach(files::add);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"        return files;","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"    public int numberOfFiles(Path drc) {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"        return getAllFiles(drc).size();","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"     * @param fileName","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"     * @return","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"    public boolean fileExists(String fileName) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPath\u003e directories \u003d getAllDirectories();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"        for (Path directory : directories) {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"            List\u003cPath\u003e files \u003d getAllFiles(directory);","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"            for (Path file : files) {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"                if (file.getFileName().toString().equals(fileName)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"                    return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"SFCoding123"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"SFCoding123"},"content":"     * Display file.","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"SFCoding123"},"content":"     * @param path the path","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"SFCoding123"},"content":"    public void displayFile(Path path) {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"SFCoding123"},"content":"        String fileName \u003d path.getFileName().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"SFCoding123"},"content":"        String extension \u003d fileName.substring(","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"SFCoding123"},"content":"                fileName.lastIndexOf(\u0027.\u0027) + 1).toLowerCase(Locale.ENGLISH);","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"SFCoding123"},"content":"        if (extension.equals(\"jpg\") || extension.equals(\"jpeg\") || extension.equals(\"png\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"SFCoding123"},"content":"            ImageReader imageReader \u003d new ImageReader(path);","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"SFCoding123"},"content":"            imageReader.displayImage();","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"SFCoding123"},"content":"        } else if (extension.equals(\"pdf\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"SFCoding123"},"content":"            PdfReader pdfReader \u003d new PdfReader(path);","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"SFCoding123"},"content":"            pdfReader.displayPdf();","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"SFCoding123"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"SFCoding123"},"content":"            //adding custom exception of Wrong File type exception","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"SFCoding123"},"content":"            System.out.println(\"Invlid file type\");","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":125}},{"path":"src/main/java/seedu/address/files/ImageReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import java.awt.image.BufferedImage;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import javax.imageio.ImageIO;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.ImageIcon;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.JLabel;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":" * The type Image reader.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"public class ImageReader implements FileReader\u003cBufferedImage\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"    private Path path;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"    ImageReader(Path path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"    public BufferedImage loadFile(Path path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"            BufferedImage image \u003d ImageIO.read(path.toFile());","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"            return image;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"            return null;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"            //replace with an error image;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"    public Path getPath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        return path;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"    public String getFileName(Path path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        return path.getFileName().toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"     * Display image.","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"    public void displayImage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"        BufferedImage image \u003d loadFile(path);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"        if (image !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"            JFrame frame \u003d new JFrame();","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"            frame.setSize(image.getWidth(), image.getHeight());","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"            JLabel label \u003d new JLabel(new ImageIcon(image));","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"            frame.add(label);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"            frame.setVisible(true);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":58}},{"path":"src/main/java/seedu/address/files/PdfReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import java.awt.BorderLayout;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.awt.image.BufferedImage;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.ImageIcon;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import javax.swing.JLabel;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.PDDocument;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.rendering.ImageType;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.rendering.PDFRenderer;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":" * The type Pdf reader.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"public class PdfReader implements FileReader\u003cPDDocument\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    private Path path;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    public PdfReader(Path path) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    public PDDocument loadFile(Path path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"            return PDDocument.load(path.toFile());","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"            return null;","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"            //return empty pdf to avoid NPE","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"    public Path getPath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        return this.path;","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"    public String getFileName(Path path) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"        return path.getFileName().getFileName().toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"     * Display pdf.","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"    public void displayPdf() {","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"            //Load the PDF document","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"            PDDocument doc \u003d loadFile(this.path.toRealPath());","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"            //Create a PDF renderer","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"            PDFRenderer renderer \u003d new PDFRenderer(doc);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"            //Set the DPI for rendering the PDF","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"            int dpi \u003d Toolkit.getDefaultToolkit().getScreenResolution();","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"            //Loop through each page in the PDF and render it as an image","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"            for (int i \u003d 0; i \u003c doc.getNumberOfPages(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"                BufferedImage image \u003d renderer.renderImageWithDPI(i, dpi, ImageType.RGB);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"                //Display the image in a new window","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"                JFrame frame \u003d new JFrame();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"                JLabel label \u003d new JLabel(new ImageIcon(image));","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"                frame.getContentPane().add(label, BorderLayout.CENTER);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"                frame.pack();","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"                frame.setVisible(true);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"            //Close the PDF document","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"            doc.close();","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":82}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shenchenzizoe":1,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    //private final ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"shenchenzizoe":1,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.MedicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":" * Adds an appointment to a person.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"// notice that add appointment is essentially edit a person!","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"public class AddAppointmentCommand extends MakeAppointmentCommand {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public static final String COMMAND_WORD \u003d \"makeApp\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment successfully made\";","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    public static final String APPOINTMENT_CLASH \u003d \"This appointment has clash with existing arranged appointments\";","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    private Appointment appointmentToAdd;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Appointment}","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    public AddAppointmentCommand(Index index, Appointment appointmentToAdd) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(appointmentToAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        this.appointmentToAdd \u003d appointmentToAdd;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    // should check for possible clashes with other appointments","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, appointmentToAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        if (model.hasClash(editedPerson, index)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"            throw new CommandException(APPOINTMENT_CLASH);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"    private static Person createEditedPerson(Person personToEdit, Appointment appointmentToAdd) {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"        Age updatedAge \u003d personToEdit.getAge();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"        LocalDateTime updatedTime \u003d personToEdit.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        MedicalCondition updatedMedicalCondition \u003d personToEdit.getMedicalCondition();","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedAge,","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"                updatedTags, updatedTime, updatedMedicalCondition, appointmentToAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"WindyCall":84}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shenchenzizoe":2,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    private final Person personToShow;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"        this.personToShow \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        this(feedbackToUser, false, null, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, Person personToShow, boolean exit) {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"        this.personToShow \u003d personToShow;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"    public boolean hasPersonToShow() {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"        return personToShow !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"lxz333"},"content":"    public Person getPersonToShow() {","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"        return personToShow;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lxz333":23,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.files.FilesManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":" * The type Create command.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"            + \": Generate Number x days of MC for the person identified \"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"            + \"Parameters: INDEX (must be a positive integer) and number\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_CREATE_MC_SUCCESS \u003d \"Generated Person: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"    private final int days;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"     * @param targetIndex","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"     * @param days","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    public CreateCommand(Index targetIndex, int days) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"        Person persontoGenerate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(persontoGenerate);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"        filesManager.generateMc();","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"        //default values for days and doctor parser will separate out information","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"        //changes still needed for FileManager to fully Integrate with UI","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"        return new CommandResult(String.format(MESSAGE_CREATE_MC_SUCCESS, persontoGenerate));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SFCoding123":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shenchenzizoe":2,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommands.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Delete people identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommands extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deletes\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Delete the people identified by the index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cIndex\u003e indices;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Instantiates a new Delete commands.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param indices the indices","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public DeleteCommands(ArrayList\u003cIndex\u003e indices) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Collections.sort(indices);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (indices.get(0).getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        indices.stream().map(index -\u003e lastShownList.get(index.getZeroBased())).forEach(personToDelete -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            str.append(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            str.append(\" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, str));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"                || (other instanceof DeleteCommands // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"                \u0026\u0026 sameArrayList(((DeleteCommands) other).indices)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"     * @param other","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"     * @return","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"    public boolean sameArrayList(ArrayList\u003cIndex\u003e other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"        if (other.size() !\u003d this.indices.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"            System.out.println(\"-----------------\");","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"            for (int x \u003d 0; x \u003c this.indices.size(); x++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"                boolean output \u003d indices.get(x).getZeroBased() \u003d\u003d other.get(x).getZeroBased();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"                if (!output) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"                    return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"shenchenzizoe":2,"SFCoding123":28,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/ListByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":" * Lists all persons in the address book by their names to the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"public class ListByNameCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    public static final String COMMAND_WORD \u003d \"list_name\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons by their names\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"        model.updateFilteredPersonListByName(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"lxz333":21}},{"path":"src/main/java/seedu/address/logic/commands/ListTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.model.Model.PREDICATE_SCHEDULED;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":" * Lists patients with scheduled time by order.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"public class ListTime extends Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    public static final String COMMAND_WORD \u003d \"listTime\";","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed patients by scheduled time\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"        model.updateScheduledList(PREDICATE_SCHEDULED);","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"        //return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"            String.format(MESSAGE_SUCCESS, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"shenchenzizoe":27}},{"path":"src/main/java/seedu/address/logic/commands/MakeAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"public abstract class MakeAppointmentCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"WindyCall":13}},{"path":"src/main/java/seedu/address/logic/commands/MarkAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.MedicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":" * Marks an appointment to a person.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"public class MarkAppointmentCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    public static final String COMMAND_WORD \u003d \"markApp\";","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment successfully marked\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public static final String NO_APPOINTMENT \u003d \"This patient does not have appointment yet\";","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    public MarkAppointmentCommand(Index index) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, null);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"        if (!personToEdit.hasAppointment()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"            throw new CommandException(NO_APPOINTMENT);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"    private static Person createEditedPerson(Person personToEdit, Appointment appointmentToAdd) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        Age updatedAge \u003d personToEdit.getAge();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        LocalDateTime updatedTime \u003d personToEdit.getTime();","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        MedicalCondition updatedMedicalCondition \u003d personToEdit.getMedicalCondition();","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedAge,","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"                updatedTags, updatedTime, updatedMedicalCondition, appointmentToAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"WindyCall":76}},{"path":"src/main/java/seedu/address/logic/commands/SearchAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * Search for persons having specified appointment Date","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class SearchAppointmentCommand extends MakeAppointmentCommand {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public static final String COMMAND_WORD \u003d \"searchDate\";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons having appointment on this date\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    private final LocalDate toSearch;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"     * Creates an SearchAppointmentCommand to search for appointment clash","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    public SearchAppointmentCommand(LocalDate toSearch) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(toSearch);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        this.toSearch \u003d toSearch;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        // change in modelManager","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        Predicate\u003cPerson\u003e predicate \u003d Person -\u003e Person.isOnSearchDate(toSearch);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        model.updateSearchAppointmentDate(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"WindyCall":38}},{"path":"src/main/java/seedu/address/logic/commands/ShowDetailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":" * Shows the details of an existing person inside TAB","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"public class ShowDetailCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the details of the person selected. \\n \"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    public static final String MESSAGE_SHOW_PERSON_SUCCESS \u003d \"Details displayed successfully!\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"     * @param index of the person in the displayed persons list to show details of","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    public ShowDetailCommand(Index index) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        List\u003cPerson\u003e currentList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d currentList.size()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"        Person personToShow \u003d currentList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        return new CommandResult(MESSAGE_SHOW_PERSON_SUCCESS, false, personToShow, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"                || (other instanceof ShowDetailCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"                \u0026\u0026 targetIndex.equals(((ShowDetailCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lxz333":54}},{"path":"src/main/java/seedu/address/logic/commands/UploadFileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.files.FilesManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":" * The type Upload file command.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"public class UploadFileCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"    public static final String COMMAND_WORD \u003d \"upload\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"            + \": Upload file for the people identified by the index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_UPLOAD_SUCCESS \u003d \"Upload Person: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    public UploadFileCommand(Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        Person personToUpload \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(personToUpload);","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"        filesManager.addFile();","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        /*","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"        String pathString \u003d \"reports/\" + personToUpload.getName().fullName;","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"        Path path \u003d Paths.get(pathString);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPath\u003e paths \u003d filesManager.getAllFiles(path);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"        for (int x \u003d 0; x \u003c paths.size(); x++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"            int finalX \u003d x;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"            Thread thread \u003d new Thread(new Runnable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"                @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"                public void run() {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"                    filesManager.displayFile(paths.get(finalX));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"            });","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"            thread.start();","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"        }*/","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"        return new CommandResult(String.format(MESSAGE_UPLOAD_SUCCESS, personToUpload));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"SFCoding123":64}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.files.FilesManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":" * The type View command.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"            + \": View file for the people identified by the index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    public static final String MESSAGE_UPLOAD_SUCCESS \u003d \"Upload Person: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(personToView);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        //waiting for the UI to fully Integrate","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"        //want the effect of press the ICON and view given file","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        //If exist such file then Icon appear","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"        //need to set File Upload limit of 3 depending on the UI","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"        return null;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SFCoding123":50}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Represents an error which occurs during execution of a {@code Command}.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"shenchenzizoe":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public static final String ENDTIME_BEFORE_STATRTIME \u003d \"endTime can not be before startTime\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public static final String DIFFERENT_START_AND_END_DATE \u003d \"startTime and endTime should be at the same date\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    // command: makeApp {index} /from {time} /to {time}","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        // a string with: index,startTime|endTime","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        String parsedTime \u003d ParserUtil.parseAddAppointmentCommand(trimmedArgs);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        int idxComma \u003d parsedTime.indexOf(\u0027,\u0027);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        int idxSlash \u003d parsedTime.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        String indexStr \u003d parsedTime.substring(0, idxComma);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        String startTimeStr \u003d parsedTime.substring(idxComma + 1, idxSlash).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        String endTimeStr \u003d parsedTime.substring(idxSlash + 1).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        Index index \u003d ParserUtil.parseIndex(indexStr);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseTime(startTimeStr);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseTime(endTimeStr);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(ENDTIME_BEFORE_STATRTIME);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        if (!startTime.format(formatter).equals(endTime.format(formatter))) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(DIFFERENT_START_AND_END_DATE);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        return new AddAppointmentCommand(index, new Appointment(startTime, endTime));","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"WindyCall":46}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"WeideTeo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"WeideTeo"},"content":"import seedu.address.model.person.MedicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"WeideTeo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_AGE, PREFIX_TAG, PREFIX_SCHEDULE, PREFIX_MEDICAL);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"        Optional\u003cString\u003e medicalAge \u003d argMultimap.getValue(PREFIX_AGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"        Optional\u003cString\u003e medicalString \u003d argMultimap.getValue(PREFIX_MEDICAL);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"        Optional\u003cString\u003e time \u003d argMultimap.getValue(PREFIX_SCHEDULE);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"        Person person;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"        LocalDateTime parsedTime \u003d null;","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"        if (time.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"            if (time.get().trim().length() \u003e 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"                parsedTime \u003d ParserUtil.parseTime(time.get());","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"        if (medicalString.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"            if (medicalAge.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"                if (time.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, tagList, parsedTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"                Age age \u003d ParserUtil.parseAge(medicalAge.get().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"                if (time.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, age, tagList);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, age, tagList, parsedTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"shenchenzizoe"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"shenchenzizoe"},"content":"            MedicalCondition medicalCondition \u003d ParserUtil.parseMedicalCond(medicalString.get());","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"            if (medicalAge.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"                if (time.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, tagList, medicalCondition);","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, tagList,","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"                        parsedTime, medicalCondition);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"            } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"                Age age \u003d ParserUtil.parseAge(medicalAge.get().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"shenchenzizoe"},"content":"                if (time.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, age, tagList, medicalCondition);","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"shenchenzizoe"},"content":"                    person \u003d new Person(name, phone, email, address, age, tagList,","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"shenchenzizoe"},"content":"                        parsedTime, medicalCondition);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-02-05"},{"lineNumber":96,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"shenchenzizoe":47,"WindyCall":2,"WeideTeo":3,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommands;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.commands.ListByNameCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.logic.commands.ListTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.MarkAppointmentCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.SearchAppointmentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.commands.ShowDetailCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.UploadFileCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommands.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandsParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"        case UploadFileCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"            return new UploadFileCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"        case ListTime.COMMAND_WORD:","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"            return new ListTime();","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"lxz333"},"content":"        case ListByNameCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"lxz333"},"content":"            return new ListByNameCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"lxz333"},"content":"        case ShowDetailCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"lxz333"},"content":"            return new ShowDetailCommandParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"        case SearchAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"            return new SearchAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"        case MarkAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"            return new MarkAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shenchenzizoe":4,"SFCoding123":8,"WindyCall":12,"lxz333":8,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"            if (prefix \u003d\u003d PREFIX_TAG) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"                ArrayList\u003cString\u003e returnedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                returnedList.add(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"                return returnedList;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"WindyCall":8,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"WeideTeo"},"content":"    public static final Prefix PREFIX_MEDICAL \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"ag/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"shenchenzizoe":1,"WindyCall":1,"WeideTeo":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":" * The type Create command parser.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"    public CreateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"            userInput.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"            //System.out.println(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"            String[] tokens \u003d userInput.split(\"-\");","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"            //System.out.println(tokens[0]);","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"            //System.out.println(tokens[2]);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"            Index index \u003d ParserUtil.parseIndex(tokens[0]);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"            int days \u003d ParserUtil.parseDay(tokens[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"            return new CreateCommand(index, days);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"                    CreateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SFCoding123":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommands;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Delete people identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandsParser implements Parser\u003cDeleteCommands\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommands parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            ArrayList\u003cIndex\u003e indices \u003d ParserUtil.parseindexs(userInput.trim(), \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return new DeleteCommands(indices);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommands.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SFCoding123":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/MarkAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.MarkAppointmentCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":" * Parses input arguments and creates a new MarkAppointmentCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"public class MarkAppointmentCommandParser implements Parser\u003cMarkAppointmentCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAppointmentCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"     * and returns an MarkAppointmentCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    // notation: markApp {index}","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    public MarkAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            Index index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            return new MarkAppointmentCommand(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"WindyCall":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.MedicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    public static final String TIME_FORMAT_INVALID \u003d \"Time format should be yyyy-MM-dd HHmm.\";","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    public static final String DATE_FORMAT_INVALID \u003d \"Date format should be yyyy-MM-dd\";","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    public static final String ADD_APPOINTMENT_COMMAND_INVALID \u003d \"Invalid add appointment command\";","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex(s)} into an {@code Index} and returns List of Index.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ArrayList\u003cIndex\u003e parseindexs(String multiIndex, String separator) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        //assume input is 2 3 4 5 6 ....","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d multiIndex.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArrayList\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String[] tokens \u003d trimmedIndex.split(separator);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(token)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            indices.add(Index.fromOneBased(Integer.parseInt(token)));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return indices;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"shenchenzizoe"},"content":"     * Parses {@code Collection\u003cString\u003e time} into a {@code LocalDateTime}.","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"shenchenzizoe"},"content":"    public static LocalDateTime parseTime(String time) throws ParseException {","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"shenchenzizoe"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"shenchenzizoe"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"shenchenzizoe"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"shenchenzizoe"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"shenchenzizoe"},"content":"            return LocalDateTime.parse(trimmedTime, formatter);","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"shenchenzizoe"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"shenchenzizoe"},"content":"            throw new ParseException(TIME_FORMAT_INVALID);","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"     * Parses {@code String appointment} into a {@code Appointment}.","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"    //\"Next appointment time from: 2002-11-21T14:30 to: 2002-11-21T16:30\"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"    public static Appointment parseTimeFromAddressbook(String appointment) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"        String trimmedAppointment \u003d appointment.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"        int idxFrom \u003d trimmedAppointment.indexOf(\"from:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"        int idxTo \u003d trimmedAppointment.indexOf(\"to:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"        String startTimeStr \u003d trimmedAppointment.substring(idxFrom + 5, idxTo).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"        String endTimeStr \u003d trimmedAppointment.substring(idxTo + 3).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(startTimeStr);","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(endTimeStr);","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"            return new Appointment(startTime, endTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(TIME_FORMAT_INVALID);","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"WindyCall"},"content":"     * Parses {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"WindyCall"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"WindyCall"},"content":"        String trimmedTime \u003d date.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"WindyCall"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"WindyCall"},"content":"            return LocalDate.parse(trimmedTime, formatter);","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(DATE_FORMAT_INVALID);","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"WindyCall"},"content":"     * Parses {@code String command} into a {@code String}.","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"WindyCall"},"content":"    // command: makeApp {index} /from {startTime} /to {endTime}","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"WindyCall"},"content":"    public static String parseAddAppointmentCommand(String command) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"WindyCall"},"content":"        int idxFrom \u003d command.indexOf(\"/from\");","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"WindyCall"},"content":"        int idxTo \u003d command.indexOf(\"/to\");","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"WindyCall"},"content":"        if (idxFrom \u003d\u003d -1 || idxTo \u003d\u003d -1 || idxTo \u003c\u003d idxFrom || idxFrom \u003d\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(ADD_APPOINTMENT_COMMAND_INVALID);","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"WindyCall"},"content":"        String index \u003d command.substring(0, idxFrom).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"WindyCall"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(ADD_APPOINTMENT_COMMAND_INVALID);","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"WindyCall"},"content":"        String startTime \u003d command.substring(idxFrom + 5, idxTo).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"WindyCall"},"content":"        String endTime \u003d command.substring(idxTo + 3).trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"WindyCall"},"content":"        return index + \u0027,\u0027 + startTime + \u0027|\u0027 + endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":224,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"WeideTeo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":226,"author":{"gitId":"WeideTeo"},"content":"     * @param medicalCondition string message","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"WeideTeo"},"content":"     * @return MedicalCondition type","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"WeideTeo"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"WeideTeo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":230,"author":{"gitId":"WeideTeo"},"content":"    public static MedicalCondition parseMedicalCond(String medicalCondition) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"WeideTeo"},"content":"        requireNonNull(medicalCondition);","lastModifiedDate":"2023-03-12"},{"lineNumber":232,"author":{"gitId":"WeideTeo"},"content":"        String trimmed \u003d medicalCondition.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"WeideTeo"},"content":"        return new MedicalCondition(medicalCondition);","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":235,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"WindyCall"},"content":"     * Parses a {@code int age} into an {@code Age}.","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"WindyCall"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"WindyCall"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"WindyCall"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"WindyCall"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"WindyCall"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"WindyCall"},"content":"        return new Age(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"SFCoding123"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":251,"author":{"gitId":"SFCoding123"},"content":"     * Parse day int.","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"SFCoding123"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"SFCoding123"},"content":"     * @param input the input","lastModifiedDate":"2023-03-20"},{"lineNumber":254,"author":{"gitId":"SFCoding123"},"content":"     * @return the int","lastModifiedDate":"2023-03-20"},{"lineNumber":255,"author":{"gitId":"SFCoding123"},"content":"     * @throws ParseException the parse exception","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"SFCoding123"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":257,"author":{"gitId":"SFCoding123"},"content":"    public static int parseDay(String input) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"SFCoding123"},"content":"        requireNonNull(input);","lastModifiedDate":"2023-03-20"},{"lineNumber":259,"author":{"gitId":"SFCoding123"},"content":"        //add is valid days","lastModifiedDate":"2023-03-20"},{"lineNumber":260,"author":{"gitId":"SFCoding123"},"content":"        input.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":261,"author":{"gitId":"SFCoding123"},"content":"        return Integer.parseInt(input);","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"shenchenzizoe":18,"SFCoding123":14,"WindyCall":73,"WeideTeo":11,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/SearchAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.commands.SearchAppointmentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":" * Parses input arguments and creates a new SearchAppointmentCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"public class SearchAppointmentCommandParser implements Parser\u003cSearchAppointmentCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchAppointmentCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"     * and returns an SearchAppointmentCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public SearchAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        LocalDate toSearch \u003d ParserUtil.parseDate(trimmedArgs);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        return new SearchAppointmentCommand(toSearch);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"WindyCall":23}},{"path":"src/main/java/seedu/address/logic/parser/ShowDetailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.commands.ShowDetailCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":" * Parses input arguments and creates a new ShowCommand object.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"public class ShowDetailCommandParser implements Parser\u003cShowDetailCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    public ShowDetailCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"            return new ShowDetailCommand(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowDetailCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lxz333":28}},{"path":"src/main/java/seedu/address/logic/parser/UploadFileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.UploadFileCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":" * Parses the given {@code String} of arguments in the context of the UploadFileCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":" * and returns a UploadFileCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":" * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"public class UploadFileCommandParser implements Parser\u003cUploadFileCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"    public UploadFileCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"            return new UploadFileCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UploadFileCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"SFCoding123":26}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"    public boolean hasClash(Person person, Index index) {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        return persons.hasClash(person, index);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"lxz333"},"content":"    public ObservableList\u003cPerson\u003e getPersonListByName() {","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"lxz333"},"content":"        return persons.asSortedByNameList();","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WindyCall":5,"lxz333":5,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    /** {@code Predicate} that filter out person with scheduled time */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SCHEDULED \u003d Person::hasAppointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"    boolean hasClash(Person person, Index index);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"shenchenzizoe"},"content":"    /** Returns an unmodifiable view of the persons arranged by scheduled time */","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"shenchenzizoe"},"content":"    void updateScheduledList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lxz333"},"content":"    /** Returns an unmodifiable view of the persons sorted by name */","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"lxz333"},"content":"    void updateFilteredPersonListByName(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"    void updateSearchAppointmentDate(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shenchenzizoe":6,"WindyCall":6,"lxz333":2,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.files.FilesManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.person.TimeComparator;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    private FilteredList\u003cPerson\u003e filteredPersonsByName;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    private ObservableList\u003cPerson\u003e persons;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        filteredPersonsByName \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonListByName());","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        persons \u003d FXCollections.observableArrayList(this.addressBook.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(persons);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"    public boolean hasClash(Person person, Index index) {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"        // check if person\u0027s appointment has clashes with appointments except for person with index","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"        // should check with Json file or lowest-level personlist","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"        return addressBook.hasClash(person, index);","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(target);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"SFCoding123"},"content":"        filesManager.deleteAll();","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"SFCoding123"},"content":"        filesManager.initFile();","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"SFCoding123"},"content":"        //Path path \u003d Paths.get(\"reports/\" + person.getName().fullName + \"/mc.pdf\");","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"SFCoding123"},"content":"        //PdfReader reader \u003d new PdfReader(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"SFCoding123"},"content":"        //reader.displayPdf();","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"shenchenzizoe"},"content":"        persons.setAll(addressBook.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"shenchenzizoe"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"shenchenzizoe"},"content":"    public void updateScheduledList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"shenchenzizoe"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"shenchenzizoe"},"content":"        persons.setAll(addressBook.getPersonList());","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"shenchenzizoe"},"content":"        SortedList\u003cPerson\u003e newSortedList \u003d new SortedList\u003c\u003e(filteredPersons, new TimeComparator());","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"shenchenzizoe"},"content":"        persons.setAll(newSortedList);","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"lxz333"},"content":"    public void updateFilteredPersonListByName(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":167,"author":{"gitId":"lxz333"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"shenchenzizoe"},"content":"        addressBook.setPersons(this.addressBook.getPersonListByName());","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"lxz333"},"content":"        updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"    public void updateSearchAppointmentDate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"WindyCall"},"content":"        persons.setAll(addressBook.getPersonList());","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"WindyCall"},"content":"        filteredPersons.setPredicate(PREDICATE_SCHEDULED.and(predicate));","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"        SortedList\u003cPerson\u003e newSortedList \u003d new SortedList\u003c\u003e(filteredPersons, new TimeComparator());","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"WindyCall"},"content":"        persons.setAll(newSortedList);","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shenchenzizoe":17,"SFCoding123":9,"WindyCall":17,"lxz333":6,"-":150}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":" * Represents a Person\u0027s age in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class Age {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"            \"Person\u0027s age should be integer (non-integer not allowed for this version)\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    // treat age also as a string","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    private String age;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    public Age(String age) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public static boolean isValidAge(String age) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        if (age \u003d\u003d \"\") {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        // check if valid age","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            Integer.parseInt(age);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    public String getAge() {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        return age;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"        return age \u003d\u003d \"\" ? \"\" : age;","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                || (other instanceof Age // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"                \u0026\u0026 age.equals(((Age) other).age)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        return age.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WindyCall":61,"lxz333":1}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":" * Represents a Person\u0027s appointment in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointment(LocalDateTime, LocalDateTime)}","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class Appointment {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            \"Both startTime and endTime should in the format of yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    // treat age also as a string","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    private LocalDateTime startTime \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    private LocalDateTime endTime \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     * Constructs a {@code Appoinment}.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"     * @param startTime A valid time","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"     * @param endTime A valid time","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    public Appointment(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        checkArgument(isValidAppointment(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"     * Returns true if given two times are valid","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    public static boolean isValidAppointment(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        // since all check have been done before time has been converted from String to LocalDateTime","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        // a lot of checks should be done here, both independently and dependently","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        /*","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        1. should be on the same date","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        2. endTime should not be before startTime","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        if (endTime.isBefore(startTime) || !startTime.format(formatter).equals(endTime.format(formatter))) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        return startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"        return endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"     * Returns true if given searchDate is the same as appointment Date","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"    public boolean isOnSearchDate(LocalDate searchDate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        String date \u003d startTime.format(formatter);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        return date.equals(searchDate.format(formatter));","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"    public boolean hasClash(Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        return !(endTime.isBefore(appointment.startTime) || appointment.endTime.isBefore(startTime));","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        return \"Next appointment time from: \" + startTime + \" to: \" + endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"                || (other instanceof Appointment // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"                \u0026\u0026 startTime.equals(((Appointment) other).startTime)","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"                \u0026\u0026 endTime.equals(((Appointment) other).endTime)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"        return startTime.hashCode() ^ endTime.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"WindyCall":88}},{"path":"src/main/java/seedu/address/model/person/MedicalCondition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeideTeo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WeideTeo"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WeideTeo"},"content":" * To record the patient MedicalCondition","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WeideTeo"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WeideTeo"},"content":"public class MedicalCondition {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WeideTeo"},"content":"    private String value;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"WeideTeo"},"content":"    public MedicalCondition(String tagName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"WeideTeo"},"content":"        this.value \u003d tagName;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WeideTeo"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"WeideTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"WeideTeo"},"content":"        return value;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"WeideTeo"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"WeideTeo"},"content":"        return value;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"WeideTeo"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WeideTeo":21}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    private LocalDateTime time \u003d null;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"WeideTeo"},"content":"    private MedicalCondition medicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    private Age age;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags, LocalDateTime time) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags, age, time);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, LocalDateTime time) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, LocalDateTime time,","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"                  Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags, appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"     * Every field must be present and not null, medical condition will be created without any tag","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"                  LocalDateTime time, MedicalCondition medicalCondition) {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"shenchenzizoe"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"shenchenzizoe"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"shenchenzizoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"shenchenzizoe"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"     * Every field must be present and not null, medical condition will be created without any tag","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"                  LocalDateTime time, MedicalCondition medicalCondition, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"shenchenzizoe"},"content":"     * Every field must be present and not null, medical condition will be created without any tag","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"shenchenzizoe"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"shenchenzizoe"},"content":"                  LocalDateTime time, MedicalCondition medicalCondition) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"shenchenzizoe"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"shenchenzizoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"shenchenzizoe"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"shenchenzizoe"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"shenchenzizoe"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"shenchenzizoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"shenchenzizoe"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"shenchenzizoe"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"     * Every field must be present and not null, medical condition will be created without any tag","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"                  LocalDateTime time, MedicalCondition medicalCondition, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"WindyCall"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"shenchenzizoe"},"content":"     * Alternative constructor for person with scheduled time.","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":153,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d new Age(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"WindyCall"},"content":"     * Alternative constructor for person with scheduled time.","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d new Age(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"shenchenzizoe"},"content":"     * Alternative constructor for person with scheduled time.","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"shenchenzizoe"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age,","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"                  Set\u003cTag\u003e tags, LocalDateTime time, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"shenchenzizoe"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"shenchenzizoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"shenchenzizoe"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"shenchenzizoe"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"shenchenzizoe"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"shenchenzizoe"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"shenchenzizoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"shenchenzizoe"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"shenchenzizoe"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"WindyCall"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"WindyCall"},"content":"                  MedicalCondition medicalCondition) {","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":202,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"WindyCall"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"WindyCall"},"content":"                  MedicalCondition medicalCondition, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"WindyCall"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"WeideTeo"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":226,"author":{"gitId":"WeideTeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"WeideTeo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"WeideTeo"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"WeideTeo"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-12"},{"lineNumber":230,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":232,"author":{"gitId":"WeideTeo"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":235,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"WindyCall"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Age age,","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"WindyCall"},"content":"                  Set\u003cTag\u003e tags, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d new MedicalCondition(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"WeideTeo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"WeideTeo"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-12"},{"lineNumber":253,"author":{"gitId":"WeideTeo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"WeideTeo"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-12"},{"lineNumber":255,"author":{"gitId":"WeideTeo"},"content":"                  MedicalCondition medicalCondition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"WeideTeo"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":257,"author":{"gitId":"WeideTeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-12"},{"lineNumber":258,"author":{"gitId":"WeideTeo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":259,"author":{"gitId":"WeideTeo"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-12"},{"lineNumber":260,"author":{"gitId":"WeideTeo"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d new Age(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"WeideTeo"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":263,"author":{"gitId":"WeideTeo"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":266,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"WindyCall"},"content":"     * Every filed must be present and not null","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"WindyCall"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"WindyCall"},"content":"                  MedicalCondition medicalCondition, Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"WindyCall"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d new Age(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"WindyCall"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"WindyCall"},"content":"        this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"WindyCall"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":298,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"shenchenzizoe"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-03-12"},{"lineNumber":300,"author":{"gitId":"shenchenzizoe"},"content":"        return time;","lastModifiedDate":"2023-03-12"},{"lineNumber":301,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":302,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":303,"author":{"gitId":"WindyCall"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"WindyCall"},"content":"        return appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"shenchenzizoe"},"content":"     * check if the person has scheduled time.","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"shenchenzizoe"},"content":"     * @return true if the person has time.","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"shenchenzizoe"},"content":"    public boolean hasTime() {","lastModifiedDate":"2023-02-23"},{"lineNumber":312,"author":{"gitId":"shenchenzizoe"},"content":"        return this.time !\u003d null;","lastModifiedDate":"2023-02-23"},{"lineNumber":313,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"WindyCall"},"content":"    public boolean hasAppointment() {","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"WindyCall"},"content":"        return appointment !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"WindyCall"},"content":"    public void markAppointment() {","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"WindyCall"},"content":"        appointment \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"WindyCall"},"content":"    // notice: after adding Appoinment, time attribute in person becomes invalid","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"WindyCall"},"content":"    // therefore, isOnSearchDate should be done from Appointment side","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"WindyCall"},"content":"    public boolean isOnSearchDate(LocalDate searchDate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"WindyCall"},"content":"        return appointment.isOnSearchDate(searchDate);","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"lxz333"},"content":"    public boolean hasAge() {","lastModifiedDate":"2023-03-22"},{"lineNumber":331,"author":{"gitId":"lxz333"},"content":"        return this.age.getAge() !\u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":332,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":333,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":334,"author":{"gitId":"lxz333"},"content":"    public boolean hasMedicalCondition() {","lastModifiedDate":"2023-03-22"},{"lineNumber":335,"author":{"gitId":"lxz333"},"content":"        return this.medicalCondition.getValue() !\u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":336,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"WindyCall"},"content":"    public boolean hasClash(Person person) {","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"WindyCall"},"content":"        return appointment.hasClash(person.getAppointment());","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"WindyCall"},"content":"    public Age getAge() {","lastModifiedDate":"2023-03-15"},{"lineNumber":343,"author":{"gitId":"WindyCall"},"content":"        return age;","lastModifiedDate":"2023-03-15"},{"lineNumber":344,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":345,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":346,"author":{"gitId":"WeideTeo"},"content":"    public MedicalCondition getMedicalCondition() {","lastModifiedDate":"2023-03-12"},{"lineNumber":347,"author":{"gitId":"WeideTeo"},"content":"        return medicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":348,"author":{"gitId":"WeideTeo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":349,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":355,"author":{"gitId":"WeideTeo"},"content":"        Set\u003cTag\u003e allTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":356,"author":{"gitId":"WeideTeo"},"content":"        return Collections.unmodifiableSet(allTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":375,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":419,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shenchenzizoe":77,"WindyCall":179,"lxz333":6,"WeideTeo":28,"-":129}},{"path":"src/main/java/seedu/address/model/person/PersonComparatorByName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":" * Comparator for Person","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"public class PersonComparatorByName implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"     * Comparator for Person","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     * @param person1 the first object to be compared.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"     * @param person2 the second object to be compared.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     * @return Comparing result.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    public int compare(Person person1, Person person2) {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        String name1 \u003d person1.getName().toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"        String name2 \u003d person2.getName().toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"        return name1.compareTo(name2);","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"lxz333":21}},{"path":"src/main/java/seedu/address/model/person/TimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * A comparator to rank patients by scheduled time","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class TimeComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"    public int compare(Person person1, Person person2) {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        if (person1.hasAppointment() \u0026\u0026 person2.hasAppointment()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"            return person1.getAppointment().getStartTime().compareTo(person2.getAppointment().getStartTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"            return 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"shenchenzizoe":15,"WindyCall":2}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"     * Returns true if the person\u0027s appointment has clashes with at least one other patients.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    public boolean hasClash(Person person, Index index) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"            if (i \u003d\u003d index.getZeroBased() || !internalList.get(i).hasAppointment()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"                continue;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"            if (person.hasClash(internalList.get(i))) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"lxz333"},"content":"     * Returns the backing list as a list sorted by name.","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"lxz333"},"content":"     * @return A sorted list.","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"lxz333"},"content":"    public ObservableList\u003cPerson\u003e asSortedByNameList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"lxz333"},"content":"        ObservableList\u003cPerson\u003e internalSortedByNameList \u003d FXCollections.observableArrayList(internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"lxz333"},"content":"        Collections.sort(internalSortedByNameList, new PersonComparatorByName());","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"lxz333"},"content":"        return FXCollections.unmodifiableObservableList(internalSortedByNameList);","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lxz333":12,"WindyCall":16,"-":137}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.MedicalCondition;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    private String medicalCondition;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    private String age;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    private LocalDateTime time \u003d null;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    private String appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"time\") String time,","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"                             @JsonProperty(\"age\") String age,","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"                             @JsonProperty(\"MedicalCondition\") String medicalCondition,","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"                             @JsonProperty(\"Appointment\") String appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"        if (age !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"            this.age \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"            this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"WeideTeo"},"content":"        if (medicalCondition !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"WeideTeo"},"content":"            this.medicalCondition \u003d medicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"WeideTeo"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        if (appointment !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"    public JsonAdaptedPerson(String name, String phone, String email, String address, List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"    public JsonAdaptedPerson(String name, String phone, String email, String address,","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"                             String age, List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"    public JsonAdaptedPerson(String name, String phone, String email, String address,","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"                             String age, String time, List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"        if (source.hasTime()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"shenchenzizoe"},"content":"            time \u003d source.getTime();","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"        if (source.getAge().getAge() !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"            age \u003d source.getAge().getAge();","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"WeideTeo"},"content":"        if (source.getMedicalCondition().getValue() !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"WeideTeo"},"content":"            medicalCondition \u003d source.getMedicalCondition().getValue();","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"WeideTeo"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"        if (source.hasAppointment()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"            appointment \u003d source.getAppointment().toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"WindyCall"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"WindyCall"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"WindyCall"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"WindyCall"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"WindyCall"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"WindyCall"},"content":"        final MedicalCondition modelMedical \u003d new MedicalCondition(medicalCondition);","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"WindyCall"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"WindyCall"},"content":"            if (age !\u003d null \u0026\u0026 medicalCondition !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"shenchenzizoe"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"WindyCall"},"content":"                            modelAge, modelTags, modelMedical);","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"shenchenzizoe"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"shenchenzizoe"},"content":"                            modelAge, modelTags, time, modelMedical);","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"WindyCall"},"content":"            if (age !\u003d null \u0026\u0026 medicalCondition \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"shenchenzizoe"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelAge, modelTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"shenchenzizoe"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelAge, modelTags, time);","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"WindyCall"},"content":"            if (age \u003d\u003d null \u0026\u0026 medicalCondition !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"shenchenzizoe"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"WeideTeo"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelMedical);","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"shenchenzizoe"},"content":"                } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"shenchenzizoe"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, time, modelMedical);","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"shenchenzizoe"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"WeideTeo"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"WindyCall"},"content":"            Appointment modelAppointment \u003d ParserUtil.parseTimeFromAddressbook(appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"WindyCall"},"content":"            if (age !\u003d null \u0026\u0026 medicalCondition !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"WindyCall"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelAge, modelTags,","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"WindyCall"},"content":"                            modelMedical, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"WindyCall"},"content":"                            modelAge, modelTags, time, modelMedical, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"WindyCall"},"content":"            if (age !\u003d null \u0026\u0026 medicalCondition \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"WindyCall"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelAge,","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"WindyCall"},"content":"                            modelTags, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelAge, modelTags,","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"WindyCall"},"content":"                            time, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"WindyCall"},"content":"            if (age \u003d\u003d null \u0026\u0026 medicalCondition !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"WindyCall"},"content":"                if (time \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"WindyCall"},"content":"                            modelMedical, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"WindyCall"},"content":"                    return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"WindyCall"},"content":"                            time, modelMedical, modelAppointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shenchenzizoe":24,"WindyCall":100,"WeideTeo":9,"-":115}},{"path":"src/main/java/seedu/address/ui/DetailDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":" * A ui for the details of a specified person displayed at the right panel of TAB.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"public class DetailDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    private static final String FXML \u003d \"DetailDisplay.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    private Person person;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"    private FileList filelist;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"    private Label name;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"    private Label phone;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"    private Label email;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"    private Label address;","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"    private Label medicalCondition;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    private Label time;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"    private Label age;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"    private Button appointmentButton;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"    private Button generateButton;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"    private Button uploadButton;","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"    private ListView\u003cUiFile\u003e viewDisplay;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"lxz333"},"content":"    public DetailDisplay() {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"lxz333"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"     * Displays information of a specified person.","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"    public void setInfo(Person person, ObservableList\u003cUiFile\u003e fileList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"        viewDisplay.setItems(fileList);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"        viewDisplay.setCellFactory(listView -\u003e new FileList.FileListViewCell());","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"lxz333"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"lxz333"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"lxz333"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"lxz333"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"lxz333"},"content":"        if (person.hasTime()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"lxz333"},"content":"            time.setText(\"Time: \" + person.getTime().toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"lxz333"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"lxz333"},"content":"            time.setText(\"Time: \" + \"N.A.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"lxz333"},"content":"        if (person.hasAge()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"lxz333"},"content":"            age.setText(\"Age: \" + person.getAge().toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"lxz333"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"lxz333"},"content":"            age.setText(\"Age: \" + \"N.A.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"lxz333"},"content":"        if (person.hasMedicalCondition()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"lxz333"},"content":"            medicalCondition.setText(\"Medical Condition: \" + person.getMedicalCondition().getValue());","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"lxz333"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"lxz333"},"content":"            medicalCondition.setText(\"Medical Condition: \" + \"N.A.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        //@@author lxz333-reused","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/AY2223S1-CS2103T-T17-1/tp/tree/master/src/main/java/seedu/address/ui","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        person.getTags().stream().sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"lxz333"},"content":"     * Clears any information being displayed.","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"lxz333"},"content":"    public void clearDetailDisplay() {","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"lxz333"},"content":"        name.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"lxz333"},"content":"        age.setText(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"lxz333"},"content":"        phone.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"lxz333"},"content":"        email.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"lxz333"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"lxz333"},"content":"        time.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"lxz333"},"content":"        address.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"lxz333"},"content":"        medicalCondition.setText(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"lxz333"},"content":"    public void hideAppointmentButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"lxz333"},"content":"        appointmentButton.setVisible(false);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"lxz333"},"content":"    public void showAppointmentButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"lxz333"},"content":"        appointmentButton.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"lxz333"},"content":"    public void hideGenerateButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"lxz333"},"content":"        generateButton.setVisible(false);","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"lxz333"},"content":"    public void showGenerateButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"lxz333"},"content":"        generateButton.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"lxz333"},"content":"    public void hideUploadButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"lxz333"},"content":"        uploadButton.setVisible(false);","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"lxz333"},"content":"    public void showUploadButton() {","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"lxz333"},"content":"        uploadButton.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"lxz333"},"content":"    public void hideViewDisplay() {","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"lxz333"},"content":"        viewDisplay.setVisible(false);","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"lxz333"},"content":"    public void showViewDisplay() {","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"lxz333"},"content":"        viewDisplay.setVisible(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"lxz333"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"lxz333"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"lxz333"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"lxz333"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"lxz333"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"lxz333"},"content":"        if (!(other instanceof DetailDisplay)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"lxz333"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"lxz333"},"content":"        // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"lxz333"},"content":"        DetailDisplay dd \u003d (DetailDisplay) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"lxz333"},"content":"        return person.equals(dd.person);","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"shenchenzizoe":7,"lxz333":152,"-":6}},{"path":"src/main/java/seedu/address/ui/FileCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"public class FileCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    private static final String FXML \u003d \"FileListItem.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"    public final UiFile file;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    private Label id;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    private Label fileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"    public FileCard(UiFile file, int displayedIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"        fileName.setText(file.getFileName());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"        if (!(other instanceof FileCard)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"        // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"        FileCard card \u003d (FileCard) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"            \u0026\u0026 file.equals(card.file);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"shenchenzizoe":60}},{"path":"src/main/java/seedu/address/ui/FileList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"public class FileList extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    private static final String FXML \u003d \"DetailDisplay.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FileList.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"    private ListView\u003cUiFile\u003e viewDisplay;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    public FileList(ObservableList\u003cUiFile\u003e fileList, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"        viewDisplay.setItems(fileList);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"        viewDisplay.setCellFactory(listView -\u003e new FileListViewCell());","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"    private void displayFile() throws CommandException, ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"            int targetIndex \u003d viewDisplay.getSelectionModel().getSelectedIndex() + 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"            int size \u003d viewDisplay.getItems().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"            if (targetIndex \u003e 0 \u0026\u0026 targetIndex \u003c\u003d size) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"                ObservableFile.clickGenerate();","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"            logger.info(\"Invalid command: \" + \"Something wrong happened when clicking the person.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code File} using a {@code PersonCard}.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"    static class FileListViewCell extends ListCell\u003cUiFile\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"        protected void updateItem(UiFile file, boolean empty) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"            super.updateItem(file, empty);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"            if (empty || file \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"                setText(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"                setGraphic(new FileCard(file, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"shenchenzizoe":63}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"    private DetailDisplay detailDisplay;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    private FileList fileList;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"    private StackPane detailDisplayPlaceholder;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"lxz333"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"shenchenzizoe"},"content":"        //fileList \u003d new FileList(logic.getFilteredPersonList(), this);","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"lxz333"},"content":"        detailDisplay \u003d new DetailDisplay();","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"lxz333"},"content":"        detailDisplayPlaceholder.getChildren().add(detailDisplay.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"lxz333"},"content":"    protected CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            //@@author lxz333-reused","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            //Reused from https://github.com/AY2223S1-CS2103T-T17-1/tp/tree/master/src/main/java/seedu/address/ui","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            // with minor modifications","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            detailDisplay.clearDetailDisplay();","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            detailDisplay.hideAppointmentButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            detailDisplay.hideUploadButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            detailDisplay.hideGenerateButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            detailDisplay.hideViewDisplay();","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.hasPersonToShow()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                Person personToShow \u003d commandResult.getPersonToShow();","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                assert personToShow !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                detailDisplay.setInfo(personToShow, new ObservableFile().getObservableFileList());","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                detailDisplay.showAppointmentButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                detailDisplay.showGenerateButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                detailDisplay.showUploadButton();","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                detailDisplay.showViewDisplay();","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":227,"author":{"gitId":"lxz333"},"content":"    public void handleClickInPersonListPanel(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":228,"author":{"gitId":"lxz333"},"content":"        this.executeCommand(commandText);","lastModifiedDate":"2023-03-21"},{"lineNumber":229,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"shenchenzizoe":3,"lxz333":14,"-":213}},{"path":"src/main/java/seedu/address/ui/ObservableFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":" * Class to provide input for FileList.","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"public class ObservableFile {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    private List\u003cString\u003e listOfFileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"   * Panel containing the list of persons.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    public ObservableFile() {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"a\");","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"        listOfFileName.add(\"b\");","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    public ObservableFile(List\u003cString\u003e listOfFileName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"        this.listOfFileName \u003d listOfFileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    public ObservableList\u003cUiFile\u003e getObservableFileList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"        ObservableList\u003cUiFile\u003e fileList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"        for (String s: listOfFileName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"            UiFile file \u003d new UiFile(s);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"            fileList.add(file);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"        return fileList;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"    public static void clickGenerate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(\"generate MC\");","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"shenchenzizoe":43}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"WeideTeo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"WeideTeo"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"WeideTeo"},"content":"    private Label medicalCondition;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    private Label age;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"    @FXML","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"    private Label appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        if (person.getAge() \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"            age.setText(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"            String s \u003d person.getAge().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"            age.setText(s);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        if (person.hasAppointment()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"            appointment.setText(person.getAppointment().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"            if (person.getMedicalCondition() !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"                String s \u003d person.getMedicalCondition().getValue();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"                medicalCondition.setText(s);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"            appointment.setText(\"No appointment yet\");","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"WeideTeo"},"content":"            if (person.getMedicalCondition() \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"WeideTeo"},"content":"                medicalCondition.setText(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"WeideTeo"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"WeideTeo"},"content":"                String s \u003d person.getMedicalCondition().getValue();","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"WeideTeo"},"content":"                medicalCondition.setText(s);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        person.getTags().stream().sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"shenchenzizoe":8,"WindyCall":14,"WeideTeo":8,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"    private void displayDetail() throws CommandException, ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"            int targetIndex \u003d personListView.getSelectionModel().getSelectedIndex() + 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"            int size \u003d personListView.getItems().size();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"            if (targetIndex \u003e 0 \u0026\u0026 targetIndex \u003c\u003d size) {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"                mainWindow.handleClickInPersonListPanel(\"show \" + targetIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"            logger.info(\"Invalid command: \" + \"Something wrong happened when clicking the person.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lxz333":21,"-":48}},{"path":"src/main/java/seedu/address/ui/UiFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Class to handle File UI icon.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"public class UiFile {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"    private String fileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"    public UiFile(String fileName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"    public String getFileName() {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"        return fileName;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"shenchenzizoe":14}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"            mainWindow.executeCommand(\"show 1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lxz333":1,"-":88}},{"path":"src/main/resources/view/AddPersonButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"\u003cBorderPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"            fx:id\u003d\"customerListPanelControls\"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"            AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"            AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"    \u003cminWidth\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    \u003cright\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"            \u003cButton fx:id\u003d\"addCustomerButton\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"                    text\u003d\"+   Add Patient\" styleClass\u003d\"addButton\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"            \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"                \u003cInsets right\u003d\"16\" bottom\u003d\"8\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"            \u003c/BorderPane.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    \u003c/right\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lxz333":24}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":".label-header-bright {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"lxz333":7,"-":352}},{"path":"src/main/resources/view/DetailDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"\u003cStackPane fx:id\u003d\"placeholder\" styleClass\u003d\"pane-light\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"    \u003cVBox minHeight\u003d\"105\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        \u003cHBox alignment\u003d\"TOP_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"label-header-bright\" text\u003d\"name\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"                    \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"      \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"label-bright\" text\u003d\"age\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"label-bright\" text\u003d\"phone\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"label-bright\" text\u003d\"email\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"20\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"label-bright\" text\u003d\"address\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"      \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"label-bright\" text\u003d\"time\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"        \u003cLabel fx:id\u003d\"medicalCondition\" styleClass\u003d\"label-bright\" text\u003d\"medical condition\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"20\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"      \u003cHBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"44.0\" prefWidth\u003d\"420.0\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"lxz333"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"lxz333"},"content":"            \u003cButton fx:id\u003d\"generateButton\" mnemonicParsing\u003d\"false\" text\u003d\"generate\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"lxz333"},"content":"            \u003cButton fx:id\u003d\"appointmentButton\" mnemonicParsing\u003d\"false\" text\u003d\"Appointment\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"            \u003cButton fx:id\u003d\"uploadButton\" mnemonicParsing\u003d\"false\" text\u003d\"upload\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"      \u003cListView fx:id\u003d\"viewDisplay\" prefHeight\u003d\"261.0\" prefWidth\u003d\"210.0\" style\u003d\"-fx-background-color: grey;\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"lxz333"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"            \u003cInsets right\u003d\"8.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"lxz333"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"lxz333"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"lxz333"},"content":"            \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"lxz333"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"lxz333"},"content":"      \u003c/ListView\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"lxz333"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"lxz333"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lxz333":75}},{"path":"src/main/resources/view/FileListItem.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"               \u003cLabel fx:id\u003d\"fileName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"shenchenzizoe":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"         title\u003d\"MediMate\" minWidth\u003d\"950\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"        \u003cSplitPane fx:id\u003d\"splitPane\" dividerPositions\u003d\"0.4\" minWidth\u003d\"680.0\" prefWidth\u003d\"680.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"          \u003citems\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"                  \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-light\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"lxz333"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"lxz333"},"content":"            \u003cVBox minWidth\u003d\"-Infinity\" prefHeight\u003d\"200.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"lxz333"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"                \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"detailDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"lxz333"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"lxz333"},"content":"          \u003c/items\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"lxz333"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"lxz333":21,"-":56}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"WeideTeo"},"content":"      \u003cLabel fx:id\u003d\"medicalCondition\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$medicalCondition\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"      \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WindyCall":2,"WeideTeo":1,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"   \u003cHBox prefHeight\u003d\"38.0\" prefWidth\u003d\"248.0\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"         \u003cButton layoutX\u003d\"141.0\" layoutY\u003d\"15.0\" mnemonicParsing\u003d\"false\" text\u003d\"add\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"               \u003cInsets left\u003d\"15.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"         \u003c/Button\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"  \u003cListView fx:id\u003d\"personListView\" onMousePressed\u003d\"#displayDetail\" prefWidth\u003d\"248.0\" styleClass\u003d\"pane-transparent\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"         \u003cInsets top\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"      \u003c/VBox.margin\u003e\u003c/ListView\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lxz333":17,"-":6}},{"path":"src/test/java/seedu/address/files/FileGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.io.File;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.PDDocument;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.PDDocumentCatalog;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDField;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDTextField;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"class FileGeneratorTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    private Person person;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    private String doctorName;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"    private String description;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"    private int days;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"        // Create a sample person object","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        person \u003d new Person(new Name(\"John\"), new Phone(\"12345678\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"                new Email(\"john@example.com\"), new Address(\"123, Main Street\"), tags);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"        // Set other fields","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        doctorName \u003d \"Dr. Smith\";","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        description \u003d \"Medical certificate\";","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        days \u003d 3;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"    public void testCreateMcForm() {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"        FilesManager filesManager \u003d new FilesManager(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"        filesManager.initFile();","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"        FileGenerator fileGenerator \u003d new FileGenerator(person, doctorName, description, days);","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"        // Call the createMcForm() method","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"        fileGenerator.createMcForm(\"\");","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"        // Check if the file was created in the expected location","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"        File file \u003d new File(\"reports/\" + person.getName().fullName + \"/-mc.pdf\");","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"        // Check if the form fields were filled in correctly","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"        // Load the PDF document","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"        PDDocument pdfDocument \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"            pdfDocument \u003d PDDocument.load(file);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"            // Get the PDF form fields","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"            PDDocumentCatalog docCatalog \u003d pdfDocument.getDocumentCatalog();","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"            PDAcroForm acroForm \u003d docCatalog.getAcroForm();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"            // Get all fields","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"            for (PDField field : acroForm.getFields()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"                if (field instanceof PDTextField) {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"                    String fileName \u003d field.getFullyQualifiedName();","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"                    switch (fileName) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"                    case \"name\":","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(person.getName().fullName, field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"                    case \"DOB\":","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(\"222-2222\", field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"                    case \"days\":","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(Integer.toString(days), field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"                    case \"today\":","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"                        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(now.format(formatter), field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"                    case \"startDate\":","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(\"2019-11-11\", field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"                    case \"endDate\":","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(\"2019-11-12\", field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"                    case \"DoctorName\":","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(doctorName, field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"                    default:","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"                        assertEquals(Integer.toString(FileGenerator.getFormId()), field.getValueAsString());","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"                        break;","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"SFCoding123"},"content":"                    }","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"SFCoding123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"SFCoding123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"SFCoding123"},"content":"        } finally {","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"SFCoding123"},"content":"            if (pdfDocument !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"SFCoding123"},"content":"                try {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"SFCoding123"},"content":"                    pdfDocument.close();","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"SFCoding123"},"content":"                    filesManager.deleteAll();","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"SFCoding123"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"SFCoding123"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"SFCoding123"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"SFCoding123"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"SFCoding123"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"SFCoding123":118}},{"path":"src/test/java/seedu/address/files/FileStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.files;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import java.io.File;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"class FileStorageTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"    private String path;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"    void setUp() {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"        path \u003d \"reports/testuser\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.createDrc(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    @AfterEach","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.deleteDrc(\"testuser\");","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    void testCreateDrc() {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        File dir \u003d new File(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(dir.exists(), \"Directory does not exist\");","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(dir.isDirectory(), \"Path is not a directory\");","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"    void testDeleteDrc() throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        //create a test file inside the directory","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"        File testFile \u003d new File(path + \"/testfile.txt\");","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"        testFile.createNewFile();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        //check if the directory and file exists before deleting","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(testFile.exists(), \"File does not exist\");","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(testFile.isFile(), \"Path is not a file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        File directory \u003d new File(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(directory.exists(), \"Directory does not exist\");","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(directory.isDirectory(), \"Path is not a directory\");","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"        //assert that the directory and file does not exist after deleting","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.deleteDrc(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(directory.exists(), \"Directory still exists\");","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(testFile.exists(), \"File still exists\");","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"    void testUploadFile() throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"        File testFile \u003d new File(path + \"/testfile.txt\");","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"        testFile.createNewFile();","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(testFile.exists(), \"File does not exist\");","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"        //call the uploadFile method","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"        FileStorage file \u003d new FileStorage(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"        file.uploadFile();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"        //assert that the uploaded file exists","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"        File uploadedFile \u003d new File(\"reports/testuser/testfile.txt\");","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(uploadedFile.exists(), \"Uploaded file does not exist\");","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"    void testCheckDir() {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"        String testDir \u003d \"test-dir\";","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"        File testFile \u003d new File(testDir);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(testFile.exists());","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"        FileStorage.checkDir(testFile);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(testFile.isDirectory());","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"        testFile.delete();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"    void testIsImageFile() {","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"        File jpgFile \u003d new File(\"test.jpg\");","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(FileStorage.isImageFile(jpgFile), \"JPG file should be detected as an image file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"        File pngFile \u003d new File(\"test.png\");","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(FileStorage.isImageFile(pngFile), \"PNG file should be detected as an image file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"        File bmpFile \u003d new File(\"test.bmp\");","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(FileStorage.isImageFile(bmpFile), \"BMP file should be detected as an image file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"        File gifFile \u003d new File(\"test.gif\");","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(FileStorage.isImageFile(gifFile), \"GIF file should be detected as an image file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"        File txtFile \u003d new File(\"test.txt\");","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(FileStorage.isImageFile(txtFile), \"TXT file should not be detected as an image file\");","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"SFCoding123":100}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"    */","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"lxz333"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"        public boolean hasClash(Person person, Index index) {","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"shenchenzizoe"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"shenchenzizoe"},"content":"        public void updateScheduledList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"shenchenzizoe"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"lxz333"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"lxz333"},"content":"        public void updateFilteredPersonListByName(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"lxz333"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"        public void updateSearchAppointmentDate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"shenchenzizoe":9,"WindyCall":13,"lxz333":5,"-":189}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SFCoding123":1,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"    /*","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"    */","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SFCoding123":2,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"public class DeleteCommandsTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    /*","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    public void execute_validIndexsUnfilteredList_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"        temp.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"        temp.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommands \u003d new DeleteCommands(temp);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        String people \u003d personToDelete2 + \" \" + personToDelete1 + \" \";","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"        String expectedMessage \u003d String.format(DeleteCommands.MESSAGE_DELETE_PERSON_SUCCESS, people);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"SFCoding123"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"SFCoding123"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"SFCoding123"},"content":"        assertCommandSuccess(deleteCommands, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"SFCoding123"},"content":"    }*/","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"SFCoding123"},"content":"    public void execute_invalidIndexsUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"SFCoding123"},"content":"        Index normalIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"SFCoding123"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"SFCoding123"},"content":"        temp.add(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"SFCoding123"},"content":"        temp.add(normalIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommand \u003d new DeleteCommands(temp);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"SFCoding123"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"SFCoding123"},"content":"    public void execute_invalidIndexsFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"SFCoding123"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"SFCoding123"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"SFCoding123"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"        temp.add(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommand \u003d new DeleteCommands(temp);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"        temp.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"        temp.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommands \u003d new DeleteCommands(temp);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(deleteCommands.equals(deleteCommands));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"SFCoding123"},"content":"        temp2.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"SFCoding123"},"content":"        temp2.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"SFCoding123"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommandsCopy \u003d new DeleteCommands(temp2);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(deleteCommands.equals(deleteCommandsCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"SFCoding123"},"content":"        // same values but different order -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"SFCoding123"},"content":"        temp3.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"SFCoding123"},"content":"        temp3.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommandsCopy2 \u003d new DeleteCommands(temp3);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"SFCoding123"},"content":"        assertTrue(deleteCommands.equals(deleteCommandsCopy2));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"SFCoding123"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(deleteCommands.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"SFCoding123"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(deleteCommands.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"SFCoding123"},"content":"        temp3.add(INDEX_THIRD_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"SFCoding123"},"content":"        DeleteCommands deleteCommandsCopy3 \u003d new DeleteCommands(temp3);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"SFCoding123"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"SFCoding123"},"content":"        assertFalse(deleteCommands.equals(deleteCommandsCopy3));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"SFCoding123":115}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"    */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"    */","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"shenchenzizoe"},"content":"    */","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"shenchenzizoe":9,"-":165}},{"path":"src/test/java/seedu/address/logic/commands/ListByNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"public class ListByNameCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    private Model model;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"        assertCommandSuccess(new ListByNameCommand(), model, ListByNameCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"    public void execute_sortListByName_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        expectedModel.updateFilteredPersonListByName(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"        assertCommandSuccess(new ListByNameCommand(), model, ListByNameCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"lxz333":37}},{"path":"src/test/java/seedu/address/logic/commands/ListTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.model.Model.PREDICATE_SCHEDULED;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.testutil.PersonWithTime.getWithTimeAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.person.TimeComparator;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"public class ListTimeTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"    private Model model;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"        model \u003d new ModelManager(getWithTimeAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"    public void execute_sortListByTime_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"        expectedModel.updateScheduledList(PREDICATE_SCHEDULED);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"        assertCommandSuccess(new ListTime(), model, ListTime.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    public void execute_timeOrder_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"        FilteredList\u003cPerson\u003e filteredPersons \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"            (FilteredList\u003cPerson\u003e) expectedModel.getFilteredPersonList();","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"        filteredPersons.setPredicate(PREDICATE_SCHEDULED);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"        SortedList\u003cPerson\u003e newSortedList \u003d new SortedList\u003c\u003e(filteredPersons, new TimeComparator());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"        ObservableList\u003cPerson\u003e persons \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"            FXCollections.observableArrayList(expectedModel.getAddressBook().getPersonList());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"        persons.setAll(newSortedList);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"        model.updateScheduledList(PREDICATE_SCHEDULED);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"        assertEquals(model.getFilteredPersonList(), new FilteredList\u003c\u003e(persons));","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"shenchenzizoe":47}},{"path":"src/test/java/seedu/address/logic/commands/UploadFileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"class UploadFileCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":"    public void execute_validIndex_success() throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":"        UploadFileCommand uploadFileCommand \u003d new UploadFileCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":"        CommandResult result \u003d uploadFileCommand.execute(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":"        assertEquals(String.format(UploadFileCommand.MESSAGE_UPLOAD_SUCCESS,","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"                        model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased())),","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"        UploadFileCommand command \u003d new UploadFileCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"SFCoding123":36}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"WindyCall":2,"-":137}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"    */","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"WindyCall":13,"-":146}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SFCoding123"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.commands.DeleteCommands;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"SFCoding123"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SFCoding123"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"SFCoding123"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"SFCoding123"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"SFCoding123"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"SFCoding123"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"SFCoding123"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"SFCoding123"},"content":"public class DeleteCommandsParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"SFCoding123"},"content":"    private DeleteCommandsParser parser \u003d new DeleteCommandsParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"SFCoding123"},"content":"    public void parse_validArgs_returnsDeleteCommands() throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e temp \u003d ParserUtil.parseindexs(\"1 2 3\", \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SFCoding123"},"content":"        assertParseSuccess(parser, \"1 2 3\", new DeleteCommands(temp));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"SFCoding123"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"SFCoding123"},"content":"        temp.add(\"a\");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"SFCoding123"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommands.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"SFCoding123"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SFCoding123":42}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"WindyCall":2,"-":173}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"SFCoding123"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"SFCoding123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"SFCoding123"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    private static final String INVALID_AGE \u003d \"invalid age\";","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    private static final String INVALID_TIME \u003d \"invalid time\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    private static final String VALID_AGE \u003d \"15\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    private static final String VALID_TIME \u003d \"2021-05-15 1530\";","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"SFCoding123"},"content":"    public void parseIndexs_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"SFCoding123"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseindexs(\"10 a\", \" \"));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"SFCoding123"},"content":"    public void parseIndexs_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"SFCoding123"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"SFCoding123"},"content":"                ParserUtil.parseindexs(\"1\" + Long.toString(Integer.MAX_VALUE + 1), \" \"));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"SFCoding123"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"SFCoding123"},"content":"    public void parseIndexs_validInput_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"SFCoding123"},"content":"        ArrayList\u003cIndex\u003e a1 \u003d ParserUtil.parseindexs(\"1 2\", \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"SFCoding123"},"content":"        assertEquals(INDEX_FIRST_PERSON, a1.get(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"SFCoding123"},"content":"        assertEquals(INDEX_SECOND_PERSON, a1.get(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"SFCoding123"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"SFCoding123"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"WindyCall"},"content":"    public void parseAge_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"WindyCall"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"    public void parseAge_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAge(INVALID_AGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"    public void parseAge_validAgeWithEmptyString_returnsAge() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"        Age expectedAge \u003d new Age(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(\"\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"    public void parseAge_validValueWithoutWhitespace_returnsAge() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(VALID_AGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"WindyCall"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"WindyCall"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"WindyCall"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"SFCoding123":21,"WindyCall":37,"-":196}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"lxz333"},"content":"    public void updateFilteredPersonListByName_modifyAddressbook_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"lxz333"},"content":"        modelManager.addPerson(CARL);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"lxz333"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"lxz333"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"lxz333"},"content":"        modelManager.updateFilteredPersonListByName(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"lxz333"},"content":"        ReadOnlyAddressBook sortedAddressBook \u003d modelManager.getAddressBook();","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"lxz333"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"lxz333"},"content":"        ArrayList\u003cPerson\u003e tmp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"lxz333"},"content":"        tmp.add(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"lxz333"},"content":"        tmp.add(BENSON);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"lxz333"},"content":"        tmp.add(CARL);","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"lxz333"},"content":"        expectedAddressBook.setPersons(tmp);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"lxz333"},"content":"        assertEquals(expectedAddressBook, sortedAddressBook);","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lxz333":19,"-":132}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"public class AgeTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public void constructor_invalidAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        String invalidAge \u003d \"invalid age\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        // null age","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        assertThrows(NullPointerException.class, () -\u003e Age.isValidAge(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        // invalid ages","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        assertFalse(Age.isValidAge(\"invalid age\")); // non-number string","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        // valid ages","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        assertTrue(Age.isValidAge(\"12\")); // integer string","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        assertTrue(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        assertTrue(Age.isValidAge(\"75\")); // integer string","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"WindyCall":36}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    private static final String INVALID_AGE \u003d \"invalid age\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private static final String INVALID_TIME \u003d \"invalid time\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    private static final String VALID_AGE \u003d \"15\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"    public void toModelType_nullAge_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"                VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_AGE, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"WindyCall":23,"-":110}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    public static final String DEFAULT_TIME \u003d \"2023-03-12 0000\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"    public static final String DEFAULT_AGE \u003d \"15\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    private Age age;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    private LocalDateTime time;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"        time \u003d LocalDateTime.parse(DEFAULT_TIME.trim(), formatter);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"        time \u003d personToCopy.getTime();","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"    public PersonBuilder withAge(String age) {","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"shenchenzizoe"},"content":"     * Sets the {@code time} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"shenchenzizoe"},"content":"    public PersonBuilder withTime(String time) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"shenchenzizoe"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"shenchenzizoe"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"shenchenzizoe"},"content":"        this.time \u003d LocalDateTime.parse(trimmedTime, formatter);","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"shenchenzizoe"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"shenchenzizoe":17,"WindyCall":13,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonWithTime.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":" * A utility class containing a list of {@code Person} objects with Time to be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"public class PersonWithTime {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"        .withTags(\"friends\").withTime(\"2022-03-12 0000\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"        .withTags(\"owesMoney\", \"friends\").withTime(\"2022-03-13 0000\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withTime(\"2022-03-14 1000\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withTime(\"2022-03-15 0200\")","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"        .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withTime(\"2022-03-16 1200\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withTime(\"2022-03-19 0000\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"    // Manually added","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"        .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"    private PersonWithTime() {} // prevents instantiation","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"     * Returns an {@code AddressBook} with all the persons with Time.","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"    public static AddressBook getWithTimeAddressBook() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"        for (Person person : getPersonsWithTime()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"        return ab;","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"    public static List\u003cPerson\u003e getPersonsWithTime() {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"shenchenzizoe":72}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            .withPhone(\"94351253\").withAge(\"20\")","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withAge(\"12\")","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"WindyCall":2,"-":74}}]
