[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W11-2/tp/actions)","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# The Intern\u0027s Ship","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"**The Internâ€™s Ship** (TinS) is an **internship management application** built for Computing students to track and update the progress, status and information of all their internship applications in an organised and efficient manner.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Bransonlj"},"content":"Optimized for quick inputs using a Command Line Interface (CLI) while still having the clarity of a Graphical User Interface (GUI), if you can type fast, TinS can help you manage your internship applications more effectively than traditional apps.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Features (v1.2)","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Bransonlj"},"content":"* Add and Delete Internship applications","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Bransonlj"},"content":"* List out key information of all applications","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Bransonlj"},"content":"* View detailed information of applications","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Bransonlj"},"content":"* Automatic saving of data","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":"*Many More features to come!*","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":"# Links","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":"- [About Us](https://github.com/AY2223S2-CS2103T-T11-2/tp/blob/master/docs/AboutUs.md)","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"- [Developer Guide](https://github.com/AY2223S2-CS2103T-T11-2/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"- [User Guide](https://github.com/AY2223S2-CS2103T-T11-2/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"# Acknowledgements","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Karen-Lam":1,"ShanHng":1,"Bransonlj":20,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"mainClassName \u003d \u0027seedu.internship.Main\u0027","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Karen-Lam":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"### Shan Hng","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"\u003cimg src\u003d\"images/shanhng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"[[github](https://github.com/shanhng)]","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"[[portfolio](team/shanhng.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"* Role: to be added soon...","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"* Responsibilities: to be added soon...","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"### Branson Lam","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"\u003cimg src\u003d\"images/bransonlj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"[[github](http://github.com/bransonlj)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"[[portfolio](team/bransonlj.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"* Role: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"### Anshumaan Tyagi","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"\u003cimg src\u003d\"images/anshumaantgi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"[[github](http://github.com/anshumaantgi)] [[portfolio](team/anshumaantgi.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"* Role: to be added soon","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"### Karen Lam","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"\u003cimg src\u003d\"images/karen-lam.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"[[github](https://github.com/Karen-Lam)]","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"[[portfolio](team/karen-lam.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"### Sarthak Saxena","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"\u003cimg src\u003d\"images/sarthak181.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"[[github](http://github.com/sarthak181)]","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"[[portfolio](team/sarthak181.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"* Responsibilities: to be added soon","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ShanHng":12,"Bransonlj":6,"anshumaantgi":5,"-":32,"sarthak181":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"sarthak181"},"content":"* has a need to manage a significant number of internships applications from different hiring websites","lastModifiedDate":"2023-03-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"sarthak181"},"content":"**Value proposition**: manage internship applications faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                                          | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Bransonlj"},"content":"|----------|--------------------------------------------|-------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                                      |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                                       | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                                 | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                          | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                                  | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Bransonlj"},"content":"| `* *`    | novice user                                | edit existing internship applications                 | update outdated information or add new details                         |","lastModifiedDate":"2023-03-02"},{"lineNumber":283,"author":{"gitId":"Bransonlj"},"content":"| `*`      | intermediate user                          | quickly update the status of an internship            | keep the status of my applications up to date                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":284,"author":{"gitId":"Bransonlj"},"content":" | `* *`    | expert user                                | see all internship events that have clashes in dates  | try to reschedule some of those events                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                       | refer to instructions when I forget how to use the App                |","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"anshumaantgi"},"content":"| `* * *`  | Beginner user                              | add a new internship listing                 | record details of my internship application                           |","lastModifiedDate":"2023-03-01"},{"lineNumber":287,"author":{"gitId":"anshumaantgi"},"content":"| `* * *`  | Beginner user                              | delete a previously added internship listing | rid of dummy data or unwanted internship application                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                 | minimize chance of someone else seeing them by accident               |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                         | locate a person easily                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"ShanHng"},"content":"| `* * *`  | novice user                                | list all my intership applications easily | can confirm that my internship listing has been created","lastModifiedDate":"2023-02-25"},{"lineNumber":292,"author":{"gitId":"ShanHng"},"content":"| `* *`    | intermediate user                          | list all internships that have deadlines on a particular date\t| avoid scheduling an interview on that day |","lastModifiedDate":"2023-02-25"},{"lineNumber":293,"author":{"gitId":"Karen-Lam"},"content":"| `* * *`  | intermediate user                          | view my list of internships sorted by my desired criteria/field (e.g. status, deadline, interview date) | Easily look up internships that I am concerned about |","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"Karen-Lam"},"content":"| `* *`    | expert user                                | see all internships that have not received updates in a long time | know which internships I need to follow up on |","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"ShanHng"},"content":"(For all use cases below, the **System** is `TinS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"Bransonlj"},"content":"**Use case: Edit description of an Internship Application**","lastModifiedDate":"2023-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Bransonlj"},"content":"1. User requests to list all internship applications.","lastModifiedDate":"2023-03-02"},{"lineNumber":308,"author":{"gitId":"Bransonlj"},"content":"2. System shows a list of all internship applications","lastModifiedDate":"2023-03-02"},{"lineNumber":309,"author":{"gitId":"Bransonlj"},"content":"3. User specifies the ID of the internship application he wishes to edit.","lastModifiedDate":"2023-03-02"},{"lineNumber":310,"author":{"gitId":"Bransonlj"},"content":"4. System shows current description of the internship application and prompts user to input a new description to edit it.","lastModifiedDate":"2023-03-02"},{"lineNumber":311,"author":{"gitId":"Bransonlj"},"content":"5. User inputs the new description of the internship application.","lastModifiedDate":"2023-03-02"},{"lineNumber":312,"author":{"gitId":"Bransonlj"},"content":"6. System updates the internship application with the new details.","lastModifiedDate":"2023-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"ShanHng"},"content":"Use Case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"Bransonlj"},"content":"* 3a. The specified ID is invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"Bransonlj"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Bransonlj"},"content":"* 5a. User cancels the operation midway.","lastModifiedDate":"2023-03-02"},{"lineNumber":323,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":324,"author":{"gitId":"Bransonlj"},"content":"    * 5a1. System retains the original description and does not edit the internship application.","lastModifiedDate":"2023-03-02"},{"lineNumber":325,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":326,"author":{"gitId":"Bransonlj"},"content":"      Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":327,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":328,"author":{"gitId":"Bransonlj"},"content":"* 5b. User inputs invalid description.","lastModifiedDate":"2023-03-02"},{"lineNumber":329,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":330,"author":{"gitId":"Bransonlj"},"content":"    * 5b1. System shows an error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":331,"author":{"gitId":"Bransonlj"},"content":"    * 5b2. System retains the original description and does not edit the internship application.","lastModifiedDate":"2023-03-02"},{"lineNumber":332,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":333,"author":{"gitId":"Bransonlj"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-02"},{"lineNumber":334,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":335,"author":{"gitId":"anshumaantgi"},"content":"**Use Case: Add an Internship Listing**","lastModifiedDate":"2023-03-01"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"anshumaantgi"},"content":"1. User requests to Add","lastModifiedDate":"2023-03-01"},{"lineNumber":340,"author":{"gitId":"anshumaantgi"},"content":"2. System asks the user for Internship Position","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"anshumaantgi"},"content":"3. User inputs the Internship Position","lastModifiedDate":"2023-03-01"},{"lineNumber":342,"author":{"gitId":"anshumaantgi"},"content":"4. System asks the user for Company Name","lastModifiedDate":"2023-03-01"},{"lineNumber":343,"author":{"gitId":"anshumaantgi"},"content":"5. User inputs the Company Name","lastModifiedDate":"2023-03-01"},{"lineNumber":344,"author":{"gitId":"anshumaantgi"},"content":"6. System asks the user for application status","lastModifiedDate":"2023-03-01"},{"lineNumber":345,"author":{"gitId":"anshumaantgi"},"content":"7. User inputs the Status","lastModifiedDate":"2023-03-01"},{"lineNumber":346,"author":{"gitId":"anshumaantgi"},"content":"8. System Confirms Internship Addition","lastModifiedDate":"2023-03-01"},{"lineNumber":347,"author":{"gitId":"anshumaantgi"},"content":"9. User confirms addition","lastModifiedDate":"2023-03-01"},{"lineNumber":348,"author":{"gitId":"anshumaantgi"},"content":"10. System adds the internship listing","lastModifiedDate":"2023-03-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"anshumaantgi"},"content":"Use Case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"anshumaantgi"},"content":"* 7.a System asks User to add addition information","lastModifiedDate":"2023-03-01"},{"lineNumber":354,"author":{"gitId":"anshumaantgi"},"content":"* 7.a1 System ask User for Application Link","lastModifiedDate":"2023-03-01"},{"lineNumber":355,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":356,"author":{"gitId":"anshumaantgi"},"content":"    * 7.a2 User inputs Application link","lastModifiedDate":"2023-03-01"},{"lineNumber":357,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":358,"author":{"gitId":"anshumaantgi"},"content":"    * 7.a3 System ask User for Contact details of Hiring Manager","lastModifiedDate":"2023-03-01"},{"lineNumber":359,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":360,"author":{"gitId":"anshumaantgi"},"content":"    * 7.a3 User inputs Contact details of Hiring Manager","lastModifiedDate":"2023-03-01"},{"lineNumber":361,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":362,"author":{"gitId":"anshumaantgi"},"content":"* 8a. User denies the addition of the listing","lastModifiedDate":"2023-03-01"},{"lineNumber":363,"author":{"gitId":"anshumaantgi"},"content":"      Use Case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":364,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":365,"author":{"gitId":"ShanHng"},"content":"**Use case: List all internship applications**","lastModifiedDate":"2023-02-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"ShanHng"},"content":"1.  User requests to list all internship applications saved on System.","lastModifiedDate":"2023-02-25"},{"lineNumber":370,"author":{"gitId":"ShanHng"},"content":"2.  System displays a list of internships.","lastModifiedDate":"2023-02-25"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"ShanHng"},"content":"* 1a. User requests to list all internship applications that have not received updates in a long time.","lastModifiedDate":"2023-02-25"},{"lineNumber":374,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"ShanHng"},"content":"  * 1b1. System displays all internships that have not had a change in status in a week.","lastModifiedDate":"2023-02-25"},{"lineNumber":376,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":377,"author":{"gitId":"ShanHng"},"content":"    Use case ends. ","lastModifiedDate":"2023-02-25"},{"lineNumber":378,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"ShanHng"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":381,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":382,"author":{"gitId":"anshumaantgi"},"content":"**Use Case: Delete Internship Listing**","lastModifiedDate":"2023-03-01"},{"lineNumber":383,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":384,"author":{"gitId":"anshumaantgi"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":385,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":386,"author":{"gitId":"anshumaantgi"},"content":"1. User requests to list internships inputted","lastModifiedDate":"2023-03-01"},{"lineNumber":387,"author":{"gitId":"anshumaantgi"},"content":"2. System shows a list all the inputted internships","lastModifiedDate":"2023-03-01"},{"lineNumber":388,"author":{"gitId":"anshumaantgi"},"content":"3. User requests to delete an internship listing","lastModifiedDate":"2023-03-01"},{"lineNumber":389,"author":{"gitId":"anshumaantgi"},"content":"4. System Confirms the listing User wants to delete","lastModifiedDate":"2023-03-01"},{"lineNumber":390,"author":{"gitId":"anshumaantgi"},"content":"5. User confirms the listing to be deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":391,"author":{"gitId":"anshumaantgi"},"content":"6. System deletes the internship listing","lastModifiedDate":"2023-03-01"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"anshumaantgi"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"anshumaantgi"},"content":"* 4a. User decides to not delete the listing  ","lastModifiedDate":"2023-03-01"},{"lineNumber":398,"author":{"gitId":"anshumaantgi"},"content":"Use Case Ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"ShanHng"},"content":"**Use case: List all internship applications with a deadline on a particular date**","lastModifiedDate":"2023-02-25"},{"lineNumber":401,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":402,"author":{"gitId":"ShanHng"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":403,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":404,"author":{"gitId":"ShanHng"},"content":"1.  User requests to list all internship applications with an upcoming deadline on a particular date.","lastModifiedDate":"2023-02-25"},{"lineNumber":405,"author":{"gitId":"ShanHng"},"content":"2.  System prompts user to key in a date.","lastModifiedDate":"2023-02-25"},{"lineNumber":406,"author":{"gitId":"ShanHng"},"content":"3.  User inputs a date.","lastModifiedDate":"2023-02-25"},{"lineNumber":407,"author":{"gitId":"ShanHng"},"content":"4.  System displays the input date and a list of internships, with the target of the upcoming deadline (e.g. interview, online assessment)   highlighted.","lastModifiedDate":"2023-03-02"},{"lineNumber":408,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":409,"author":{"gitId":"ShanHng"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":410,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":411,"author":{"gitId":"ShanHng"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":412,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":413,"author":{"gitId":"ShanHng"},"content":"* 3a. The date given by user is in the future (i.e. later than today).","lastModifiedDate":"2023-02-25"},{"lineNumber":414,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":415,"author":{"gitId":"ShanHng"},"content":"  * 3a1. System displays an error message to inform the user that the input date is not valid and needs to be today\u0027s date and earlier.","lastModifiedDate":"2023-02-25"},{"lineNumber":416,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":417,"author":{"gitId":"ShanHng"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2023-02-25"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"ShanHng"},"content":"* 4a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":423,"author":{"gitId":"ShanHng"},"content":"* 4b. There are no internship applications with an upcoming deadline.","lastModifiedDate":"2023-02-25"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":426,"author":{"gitId":"Karen-Lam"},"content":"**Use case: List internships by desired criteria**","lastModifiedDate":"2023-02-25"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"Karen-Lam"},"content":"1. User requests to list sorted internships","lastModifiedDate":"2023-02-25"},{"lineNumber":431,"author":{"gitId":"Karen-Lam"},"content":"2. System prompts user to choose a criteria to list internship by","lastModifiedDate":"2023-02-25"},{"lineNumber":432,"author":{"gitId":"Karen-Lam"},"content":"3. User inputs desired criteria","lastModifiedDate":"2023-02-25"},{"lineNumber":433,"author":{"gitId":"Karen-Lam"},"content":"4. System displays list of all internships sorted in order based on chosen","lastModifiedDate":"2023-02-25"},{"lineNumber":434,"author":{"gitId":"Karen-Lam"},"content":"   criteria","lastModifiedDate":"2023-02-25"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"Karen-Lam"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"Karen-Lam"},"content":"* 3a. The given criteria is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"Karen-Lam"},"content":"    * 3a1. TinS shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"ShanHng"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"Bransonlj"},"content":"**Use case: View all clashes of internship Events.**","lastModifiedDate":"2023-03-02"},{"lineNumber":449,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":450,"author":{"gitId":"Bransonlj"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":451,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":452,"author":{"gitId":"Bransonlj"},"content":"1.  User requests to view all clashes of internship Event dates.","lastModifiedDate":"2023-03-02"},{"lineNumber":453,"author":{"gitId":"Bransonlj"},"content":"2.  AddressBook shows a list of dates that have clashes and the Events that clashed.","lastModifiedDate":"2023-03-02"},{"lineNumber":454,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":455,"author":{"gitId":"Bransonlj"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":456,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":457,"author":{"gitId":"Bransonlj"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":458,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":459,"author":{"gitId":"Bransonlj"},"content":"* 2a. There are no Event clashes.","lastModifiedDate":"2023-03-02"},{"lineNumber":460,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":461,"author":{"gitId":"Bransonlj"},"content":"  Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"Karen-Lam"},"content":"2. Should be able to hold up to 1000 internships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":468,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"Karen-Lam"},"content":"4. A user should be able to navigate the application solely using the keyboard (i.e. input new internships, scroll through","lastModifiedDate":"2023-02-25"},{"lineNumber":470,"author":{"gitId":"Karen-Lam"},"content":"   internship listing via keyboard).","lastModifiedDate":"2023-02-25"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"sarthak181"},"content":"* **CLI**: A command-line interface (CLI) is a text based user interface to run programs.","lastModifiedDate":"2023-03-02"},{"lineNumber":477,"author":{"gitId":"sarthak181"},"content":"* **ID**: This is a key to uniquely identify each internship. It is auto-generated by TinS based on position and company name.","lastModifiedDate":"2023-03-02"},{"lineNumber":478,"author":{"gitId":"sarthak181"},"content":"* **Status**: This refers to the status of application.","lastModifiedDate":"2023-03-02"},{"lineNumber":479,"author":{"gitId":"sarthak181"},"content":"* **Position**: The name of the internship position/role.","lastModifiedDate":"2023-03-02"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ShanHng":37,"Karen-Lam":15,"Bransonlj":40,"anshumaantgi":39,"-":396,"sarthak181":6}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"   1. Run the `seedu.internship.Main` and try a few commands.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Karen-Lam":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"   e.g. `seedu.internship.commons.StringUtilTest`","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"   e.g. `seedu.internship.storage.StorageManagerTest`","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"   e.g. `seedu.internship.logic.LogicManagerTest`","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"The Internâ€™s Ship (TinS) is a **desktop app for managing internships application, optimized for use via a Command Line","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TinS can","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"help you manage and keep track of your internship applications faster than traditional GUI apps.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"* Features (v1.2)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"  * Adding an internship application: add","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"  * Listing all the company and position of the application : list","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"  * Locating internship by name: view","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"  * Deleting an internship : delete","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"  * Saving the data","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"-----------------","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"## Table of Contents","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"2. Download the latest `tins.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TinS.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar tins.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"  e.g. in `add JOBNAME`, `JOBNAME` is a parameter which can be used as `add Software Engineer`.","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"  e.g `[CONTACT_DETAILS]` meansthat the user input is optional. User can press the enter key to skip the input.","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"* Question prompts are written in red.\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"  e.g. in `INPUT COMPANY NAME: COMPANY_NAME`, `INPUT COMPANY NAME:` is a question prompt by the program. Users are","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"  required to input the necessary information after the prompt.","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"### Adding an internship : `add`","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"Adds an internship and its details to TinS","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"Format: `add POSITION`","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"add software engineer","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"INPUT COMPANY_NAME: COMPANY_NAME","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"INPUT APPLICATION STATUS: APPLICATION_STATUS","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"INPUT CONTACT DETAILS: [CONTACT_DETAILS]","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"* `POSITION`: Name of Internship Position","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"* `COMPANY NAME` : Name of hiring company","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"* `APPLICATION_STATUS` : Status of Application (`ACCEPTED`, `APPLIED`, `PENDING`, `REJECTED`)","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"* `CONTACT DETAILS` : Contact details of hiring manager (optional)","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"* After keying in the  add command, the user will be prompted with these fields:","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"    * `COMPANY_NAME`","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"    * `APPLICATION_STATUS`","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"    * `CONTACT_DETAILS (optional)`","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"Example:","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"add software engineer","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"INPUT COMPANY_NAME: Google","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"INPUT APPLICATION STATUS: applied","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"INPUT CONTACT DETAILS: BobTheManager@gmail.com","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Karen-Lam"},"content":"### Listing all internships : `list`","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Karen-Lam"},"content":"List all the internships (auto-generated ID, position, company name) in TinS.","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Karen-Lam"},"content":"* After keying in the `list` command, TinS returns the list of internships in the form of","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"Karen-Lam"},"content":"  `1. (\u003cID\u003e) \u003cPOSITION\u003e, \u003cCOMPANY NAME\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"Karen-Lam"},"content":"   * `ID` refers to the auto-generated ID created by TinS for this particular internship","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"Karen-Lam"},"content":"Example: TinS should display a similar list to the one below, after the `list` command:","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"Karen-Lam"},"content":"~~~","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"Karen-Lam"},"content":"1. (SE_G1) SOFTWARE ENGINEER, GOOGLE","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"Karen-Lam"},"content":"2. (DA_S1) DATA ANALYST, SHOPBACK","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"Karen-Lam"},"content":"3. (SE_G2) SOFTWARE ENGINEER, GRAB","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"Karen-Lam"},"content":"4. (DS_A1) DATA SCIENTIST, ARTEFACT","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"Karen-Lam"},"content":"~~~","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"ShanHng"},"content":"### Viewing Details of internship : `view`","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"ShanHng"},"content":"View details of the internship selected by ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"ShanHng"},"content":"Format: `view ID`","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"ShanHng"},"content":"* `ID`: Identification number of the Internship.","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"ShanHng"},"content":"* After keying in the `VIEW` command, the program will return the details of the selected internship.","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"ShanHng"},"content":"Example: \u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"ShanHng"},"content":"After keying in the `view` command followed by an existing `ID`, TinS will output","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"ShanHng"},"content":"all information of the internship with the specified `ID`, including position, company","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"ShanHng"},"content":"name, application status and contact info.","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"ShanHng"},"content":"~~~","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"ShanHng"},"content":"// input","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"ShanHng"},"content":"view SE_G1","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"ShanHng"},"content":"~~~","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"ShanHng"},"content":"~~~","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"ShanHng"},"content":"//output","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"ShanHng"},"content":"INTERNSHIP ID: SE_G1","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"ShanHng"},"content":"POSITION: SOFTWARE ENGINEER","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"ShanHng"},"content":"COMPANY NAME: GOOGLE","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"ShanHng"},"content":"APPLICATION STATUS: APPLIED","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"ShanHng"},"content":"CONTACT: BOBTHEMANAGER@GMAIL.COM","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"ShanHng"},"content":"~~~","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"anshumaantgi"},"content":"Deletes an internship along with its details.","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"Format: `delete ID`","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"* Deletes the person at the specified `ID`.","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"* The ID the  Auto-Generated ID created by TInS.","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"\u003e Note: After keying in the  delete command, the user will be asked to confirm their action by typing in `YES` or `NO`.","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"anshumaantgi"},"content":"`delete SE_G1`","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"`ARE YOU SURE YOU WANT TO DELETE SOFTWARE ENGINEER, GOOGLE` : `YES`","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"anshumaantgi"},"content":"The Intern Shipâ€™s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Karen-Lam"},"content":"**Add** | `add JOBNAME` (input other details when prompted) \u003cbr\u003e e.g., `add software engineer`","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"Karen-Lam"},"content":"**Delete** | `delete ID`\u003cbr\u003e e.g., `delete SE_G1`","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Karen-Lam"},"content":"**View** | `view ID`\u003cbr\u003e e.g., `view SE_G1`","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ShanHng":42,"Karen-Lam":24,"anshumaantgi":8,"-":67,"sarthak181":28}},{"path":"docs/team/anshumaantgi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"title: Anshumaan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"### Project: The Intern\u0027s Ship","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"**The Intern\u0027s Ship (TinS)** is a desktop application for computing students looking for internships to more efficiently manage","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"their numerous internship applications. Suited for fast typers, TinS uses a combination of Command Line Interface (CLI)","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"to collect user inputs and Graphic User Interface (GUI) to display relevant information for ease of use.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"* **New Feature**: Added the ability to view an added internship.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    * What it does: allows the user to view all information of an internship specified by the user.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    * Justification: This feature is a standard read function that is necessary for users to view all internship information they have saved on TinS.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    * Highlights: While `list` function shows only the internship position, company and unique auto-generated ID of all existing internships,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"      this `view` function displays all saved information of one internship, including its application status, contact details and etc.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"* **Code contributed**: [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003danshumaantgi\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"* **Project management**:","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    * To be added soon.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    * To be added soon.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    * User Guide:","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        * Added documentation for the feature `view`.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"* **Community**:","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    * To be added soon.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"* **Tools**:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    * To be added soon.","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"anshumaantgi":35}},{"path":"docs/team/bransonlj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bransonlj"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Bransonlj"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Bransonlj"},"content":"### Project: The Intern\u0027s Ship","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"*to be added soon*","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Bransonlj":8}},{"path":"docs/team/karen-lam.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"title: Karen Lam\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"### Project: The Intern\u0027s Ship","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"**The Intern\u0027s Ship (TinS)** is a desktop application for computing students looking for internships to more efficiently","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"manage their numerous internship applications. Suited for fast typers, TinS uses a combination of Command Line Interface","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"(CLI) to collect user inputs and Graphic User Interface (GUI) to display relevant information for ease of use.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"* **New Feature**: Added the ability to view all internships.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"    * What it does: allows the user to view all internships saved in TinS. Only internship position, company and unique","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"      auto-generated ID will be displayed","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"    * Justification: This feature is vital for users to efficiently use TinS as it displays only essential information","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"      of all internship a user has, avoiding screen clutter.","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"    * Highlights: This enhancement affects existing commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    * to be added soon...","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"* **Code contributed**: [link](https://github.com/Karen-Lam/tp)","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    * to be added soon...","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    * to be added soon...","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"        * Added documentation for the features `list`","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"    * to be added soon...","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"    * to be added soon...","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"Karen-Lam":42}},{"path":"docs/team/sarthak181.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"title: Sarthak Saxena\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"### Project: The Intern\u0027s Ship","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"*to be added soon*","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"sarthak181":7}},{"path":"docs/team/shanhng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"title: ShanHng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"### Project: The Intern\u0027s Ship","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"**The Intern\u0027s Ship (TinS)** is a desktop application for computing students looking for internships to more efficiently","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"manage their numerous internship applications. Suited for fast typers, TinS uses a combination of Command Line Interface","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"(CLI) to collect user inputs and Graphic User Interface (GUI) to display relevant information for ease of use.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"* **New Feature**: Added the ability to view an added internship.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"  * What it does: allows the user to view all information of an internship specified by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"  * Justification: This feature is a standard read function that is necessary for users to view all internship information they have saved on TinS.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"  * Highlights: While `list` function shows only the internship position, company and unique auto-generated ID of all existing internships,","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"                this `view` function displays all saved information of one internship, including its application status, contact details and etc.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"* **Code contributed**: [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dshanhng\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"  * To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"  * To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    * Added documentation for the feature `view`.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"  * To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"  * To be added soon.","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"ShanHng":33,"Karen-Lam":5}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Karen-Lam"},"content":"Create a `RemarkCommandParser` class in the `seedu.internship.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the personâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Karen-Lam"},"content":"Create a new `Remark` in `seedu.internship.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Karen-Lam"},"content":"Simply add the following to [`seedu.internship.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Karen-Lam":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"The `address` field in `Person` is actually an instance of the `seedu.internship.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Letâ€™s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Karen-Lam":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.internship.logic.Logic`.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"A quick look at the `seedu.internship.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Karen-Lam":2,"-":299}},{"path":"src/main/java/seedu/internship/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.FileUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Karen-Lam":3,"-":61}},{"path":"src/main/java/seedu/internship/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Karen-Lam":1,"-":24}},{"path":"src/main/java/seedu/internship/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Config;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Version;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.Logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.LogicManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.InternshipCatalogueStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.JsonInternshipCatalogueStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.Storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.StorageManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.ui.Ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.ui.UiManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"    // Changed this to new Logic Class","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"    // Changes this to Model class.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing InternshipCatalogue ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCatalogueStorage internshipCatalogueStorage \u003d new JsonInternshipCatalogueStorage(","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"                userPrefs.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"        storage \u003d new StorageManager(internshipCatalogueStorage, userPrefsStorage);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s internship catalogue and {@code userPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"     * The data from the sample internship catalogue will be used instead if {@code storage}\u0027s internship catalogue is","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"     * not found, or an empty internship catalogue will be used instead if errors occur when reading {@code storage}\u0027s","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"     * internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"        Optional\u003cReadOnlyInternshipCatalogue\u003e internshipCatalogueOptional;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Karen-Lam"},"content":"        ReadOnlyInternshipCatalogue initialData;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Karen-Lam"},"content":"            internshipCatalogueOptional \u003d storage.readInternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Karen-Lam"},"content":"            if (!internshipCatalogueOptional.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Karen-Lam"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Internship Catalogue\");","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Karen-Lam"},"content":"            initialData \u003d internshipCatalogueOptional.orElseGet(SampleDataUtil::getSampleInternshipCatalogue);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Karen-Lam"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty InternshipCatalogue\");","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Karen-Lam"},"content":"            initialData \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Karen-Lam"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InternshipCatalogue\");","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Karen-Lam"},"content":"            initialData \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"Karen-Lam"},"content":"        logger.info(\"Starting The Intern\u0027s Ship \" + MainApp.VERSION);","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"Karen-Lam"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Internship Catalogue] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":47,"-":140}},{"path":"src/main/java/seedu/internship/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":62}},{"path":"src/main/java/seedu/internship/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":78}},{"path":"src/main/java/seedu/internship/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"    private static final String LOG_FILE \u003d \"internshipcatalogue.log\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"-":110}},{"path":"src/main/java/seedu/internship/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":1,"anshumaantgi":1,"-":12}},{"path":"src/main/java/seedu/internship/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":115}},{"path":"src/main/java/seedu/internship/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core.index;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Karen-Lam":1,"-":53}},{"path":"src/main/java/seedu/internship/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":10}},{"path":"src/main/java/seedu/internship/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":1,"-":20}},{"path":"src/main/java/seedu/internship/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.MainApp;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Karen-Lam":2,"-":40}},{"path":"src/main/java/seedu/internship/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":1,"-":34}},{"path":"src/main/java/seedu/internship/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Config;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Karen-Lam":3,"-":20}},{"path":"src/main/java/seedu/internship/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":82}},{"path":"src/main/java/seedu/internship/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":3,"-":140}},{"path":"src/main/java/seedu/internship/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"-":66}},{"path":"src/main/java/seedu/internship/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"     * Returns the InternshipCatalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"     * @see seedu.internship.model.Model#getInternshipCatalogue()","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    ReadOnlyInternshipCatalogue getInternshipCatalogue();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"     * Returns the user prefs\u0027 internship catalogue file path.","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"    Path getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":11,"anshumaantgi":3,"-":37}},{"path":"src/main/java/seedu/internship/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.InternshipCatalogueParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.storage.Storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    private final InternshipCatalogueParser internshipCatalogueParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        this.internshipCatalogueParser \u003d new InternshipCatalogueParser();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        Command command \u003d this.internshipCatalogueParser.parseCommand(commandText);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"            storage.saveInternshipCatalogue(model.getInternshipCatalogue());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    public ReadOnlyInternshipCatalogue getInternshipCatalogue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        return model.getInternshipCatalogue();","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"    public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"        return model.getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":16,"anshumaantgi":6,"-":59}},{"path":"src/main/java/seedu/internship/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Bransonlj"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Bransonlj"},"content":" * Adds a internship to the internship catalogue.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a internship to the internship catalogue. \"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_POSITION + \"Software Engineer \"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_COMPANY + \"Grab\"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_STATUS + \"1\"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_DESCRIPTION + \"Interview Date: 20 May 2023\"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_TAG + \"highly interested\"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"            + PREFIX_TAG + \"django\";","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the catalogue\";","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"    private final Internship toAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Bransonlj"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"    public AddCommand(Internship internship) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"        toAdd \u003d internship;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Bransonlj"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Bransonlj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Bransonlj"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Bransonlj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Bransonlj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Bransonlj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Karen-Lam"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":14,"Bransonlj":54}},{"path":"src/main/java/seedu/internship/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":3,"-":17}},{"path":"src/main/java/seedu/internship/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"    /** Instance of internship to be viewed **/","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"    private final Internship internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Internship internship) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"        this(feedbackToUser, showHelp, exit, null);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Bransonlj"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code internship},","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Bransonlj"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"    public CommandResult(String feedbackToUser, Internship internship) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"        this(feedbackToUser, false, false, internship);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"Bransonlj"},"content":"    public Internship getInternship() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Bransonlj"},"content":"        return internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"        if (this.internship !\u003d null \u0026\u0026 otherCommandResult.internship !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"Bransonlj"},"content":"                    \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Bransonlj"},"content":"                    \u0026\u0026 internship.equals(otherCommandResult.internship);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"        } else if (this.internship \u003d\u003d null \u0026\u0026 otherCommandResult.internship \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"            return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"                    \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"                    \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"Bransonlj"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, internship);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":3,"Bransonlj":27,"anshumaantgi":9,"-":67,"sarthak181":1}},{"path":"src/main/java/seedu/internship/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"            + \": Deletes the internship identified by the index number used in the displayed internship list.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted Internship: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"        Internship internshipToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":6,"-":40,"sarthak181":7}},{"path":"src/main/java/seedu/internship/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting The Intern\u0027s Ship as requested ...\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":3,"-":16}},{"path":"src/main/java/seedu/internship/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":3,"-":19}},{"path":"src/main/java/seedu/internship/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":" * Lists all internships saved in TinS to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all internships\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":5,"ShanHng":19}},{"path":"src/main/java/seedu/internship/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":" * View the details selected internship in the internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bransonlj"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":"            + \": Views the internship identified by the index number used in the displayed internship list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_VIEW_INTERNSHIP_SUCCESS \u003d \"Viewing Internship %1$s at %2$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"        Internship internshipToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_INTERNSHIP_SUCCESS, internshipToView.getPosition(),","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"                internshipToView.getCompany()), internshipToView);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Bransonlj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Bransonlj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Karen-Lam":17,"Bransonlj":36}},{"path":"src/main/java/seedu/internship/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Karen-Lam":1,"-":16}},{"path":"src/main/java/seedu/internship/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_STATUS, PREFIX_DESCRIPTION,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POSITION, PREFIX_COMPANY, PREFIX_STATUS, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"        Internship internship \u003d new Internship(position, company, status, description, tagList);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"        return new AddCommand(internship);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":61}},{"path":"src/main/java/seedu/internship/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Karen-Lam":1,"-":59}},{"path":"src/main/java/seedu/internship/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Karen-Lam":1,"-":147}},{"path":"src/main/java/seedu/internship/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Bransonlj"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Bransonlj"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"public class CliSyntax {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Bransonlj"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Bransonlj"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Bransonlj"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Bransonlj"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Bransonlj"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":2,"Bransonlj":14}},{"path":"src/main/java/seedu/internship/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":6,"-":24}},{"path":"src/main/java/seedu/internship/logic/parser/InternshipCatalogueParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipCatalogueParser {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Bransonlj"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":11,"Bransonlj":2,"anshumaantgi":1,"-":47}},{"path":"src/main/java/seedu/internship/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Karen-Lam":3,"-":13}},{"path":"src/main/java/seedu/internship/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Bransonlj"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Bransonlj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Bransonlj"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"public class ParserUtil {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"     * trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Bransonlj"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Bransonlj"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Bransonlj"},"content":"     * Parses a {@code String company} into a {@code Company}.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Bransonlj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Bransonlj"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Bransonlj"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Bransonlj"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Bransonlj"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Bransonlj"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Bransonlj"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Bransonlj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Bransonlj"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Bransonlj"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Bransonlj"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        if (!Status.isValidStatus(Integer.valueOf(trimmedStatus))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"        return new Status(Integer.valueOf(trimmedStatus));","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Bransonlj"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Bransonlj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Bransonlj"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Bransonlj"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Bransonlj"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"        // No need ot check valid descripiton , as anything an be in description","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"        // if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"        //   throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"        // }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Bransonlj"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Bransonlj"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Bransonlj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Bransonlj"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"Bransonlj"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Bransonlj"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Bransonlj"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Bransonlj"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"Bransonlj"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"Bransonlj"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"Bransonlj"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"Bransonlj"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"Bransonlj"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"Bransonlj"},"content":"        return tagSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Karen-Lam":10,"Bransonlj":109,"anshumaantgi":6}},{"path":"src/main/java/seedu/internship/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Karen-Lam":1,"-":38}},{"path":"src/main/java/seedu/internship/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Karen-Lam":12,"Bransonlj":17}},{"path":"src/main/java/seedu/internship/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Karen-Lam":2,"-":15}},{"path":"src/main/java/seedu/internship/model/InternshipCatalogue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.UniqueInternshipList;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":" * Wraps all data at the internship-catalogue level","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":" * Duplicates are not allowed (by .isSameInternship comparison)","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipCatalogue implements ReadOnlyInternshipCatalogue {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    /*","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public InternshipCatalogue() {}","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     * Creates an InternshipCataloue using the internships in the {@code toBeCopied}","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    public InternshipCatalogue(ReadOnlyInternshipCatalogue toBeCopied) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        this();","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * Replaces the contents of the internship list with {@code internships}.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"     * Resets the existing data of this {@code InternshipCatalogue} with {@code newData}.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    public void resetData(ReadOnlyInternshipCatalogue newData) {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    //// internship-level operations","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"     * Returns true if a internship is the same as another {@code internship} exists in the internship catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        return this.internships.contains(internship);","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"     * Adds a internship to the internship Catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"     * The internship must not already exist in the internship Catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    public void addInternship(Internship p) {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"        internships.add(p);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"     * Replaces the given internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"     * {@code target} must exist in the internship Catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"     * The  {@code editedInternship} must not be the same as another existing internship in the internship Catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"     * Removes {@code key} from this {@code internship Catalogue}.","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"     * {@code key} must exist in the internship Catalogue.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"        this.internships.remove(key);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"    //// util methods","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"        return internships.asUnmodifiableObservableList().size() + \" internships\";","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"                || (other instanceof InternshipCatalogue // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"                \u0026\u0026 internships.equals(((InternshipCatalogue) other).internships));","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"anshumaantgi"},"content":"        return internships.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Karen-Lam":3,"anshumaantgi":117}},{"path":"src/main/java/seedu/internship/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"public interface Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"     * Returns the user prefs\u0027 internship catalogue file path.","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"    Path getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"     * Sets the user prefs\u0027 internship catalogue file path.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"    void setInternshipCatalogueFilePath(Path internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"     * Replaces internship catalogue data with the data in {@code internshipCatalogue}.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"    void setInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"    /** Returns the InternshipCatalogue */","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    ReadOnlyInternshipCatalogue getInternshipCatalogue();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"     * Returns true if a internship with the same contents as {@code internship} exists in the internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"     * Deletes the given internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"     * The internship must exist in the internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"     * Adds the given internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"     * {@code internship} must not already exist in the internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"     * {@code target} must exist in the internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"     * The internship content of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"     * internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Karen-Lam":27,"anshumaantgi":3,"sarthak181":59}},{"path":"src/main/java/seedu/internship/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"    private final InternshipCatalogue internshipCatalogue;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    public ModelManager(ReadOnlyInternshipCatalogue internshipCatalogue, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"        requireAllNonNull(internshipCatalogue, userPrefs);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"        logger.fine(\"Initializing with address book: \" + internshipCatalogue + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"        this.internshipCatalogue \u003d new InternshipCatalogue(internshipCatalogue);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.internshipCatalogue.getInternshipList());","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        this(new InternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"    public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"        return userPrefs.getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"    public void setInternshipCatalogueFilePath(Path internshipCatalogueFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"        requireNonNull(internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"        userPrefs.setInternshipCatalogueFilePath(internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Internship Catalogue \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"    public void setInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue) {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"        this.internshipCatalogue.resetData(internshipCatalogue);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"    public ReadOnlyInternshipCatalogue getInternshipCatalogue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"        return internshipCatalogue;","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"sarthak181"},"content":"        return internshipCatalogue.hasInternship(internship);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"sarthak181"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"sarthak181"},"content":"        internshipCatalogue.removeInternship(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"sarthak181"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"sarthak181"},"content":"        internshipCatalogue.addInternship(internship);","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"sarthak181"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"sarthak181"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"sarthak181"},"content":"        internshipCatalogue.setInternship(target, editedInternship);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Karen-Lam"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Internship List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Karen-Lam"},"content":"     * Returns an unmodifiable view of the list of {@code Internship} backed by the internal list of","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Karen-Lam"},"content":"     * {@code versionedInternshipCatalogue}","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"sarthak181"},"content":"        return filteredInternships;","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"anshumaantgi"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"sarthak181"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"sarthak181"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"sarthak181"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"sarthak181"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"sarthak181"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"sarthak181"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"sarthak181"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Karen-Lam"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"sarthak181"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"sarthak181"},"content":"        // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Karen-Lam"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"        System.out.println(this.filteredInternships);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"anshumaantgi"},"content":"        System.out.println(other.filteredInternships);","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"sarthak181"},"content":"        return internshipCatalogue.equals(other.internshipCatalogue)","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"sarthak181"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"sarthak181"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Karen-Lam":25,"anshumaantgi":4,"sarthak181":124}},{"path":"src/main/java/seedu/internship/model/ReadOnlyInternshipCatalogue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":" * Unmodifiable view of an Internship Catalouge","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public interface ReadOnlyInternshipCatalogue {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * Returns an unmodifiable view of the internship list.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     * This list will not contain any duplicate internships.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":15}},{"path":"src/main/java/seedu/internship/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"    Path getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":4,"-":11}},{"path":"src/main/java/seedu/internship/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"    private Path internshipCatalogueFilePath \u003d Paths.get(\"data\", \"internshipcatalogue.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"        setInternshipCatalogueFilePath(newUserPrefs.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"    public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"        return internshipCatalogueFilePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"    public void setInternshipCatalogueFilePath(Path internshipCatalogueFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"        requireNonNull(internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"        this.internshipCatalogueFilePath \u003d internshipCatalogueFilePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"                \u0026\u0026 internshipCatalogueFilePath.equals(o.internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"        return Objects.hash(guiSettings, internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Karen-Lam"},"content":"        sb.append(\"\\nLocal data file location : \" + internshipCatalogueFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":12,"-":74}},{"path":"src/main/java/seedu/internship/model/internship/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":" * Represents an Internship\u0027s Company in the internship catalogue.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"public class Company {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"            \"Names of company should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"    public final String companyName;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"     * @param companyName A valid name for a Company.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"    public Company(String companyName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"        checkArgument(isValidCompany(companyName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"     * Returns true if a given string is a valid Company.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"        return companyName;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"                \u0026\u0026 companyName.equals(((Company) other).companyName)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"        return companyName.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":57}},{"path":"src/main/java/seedu/internship/model/internship/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":" * Represents an Internship\u0027s Description in the internship catalogue.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"public class Description {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"            \"Description should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"    public static final String EMPTY_MESSAGE \u003d \"No description available.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"    public final String descriptionMessage;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"     * @param descriptionMessage A valid name for a Description.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"    public Description(String descriptionMessage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"        requireNonNull(descriptionMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        this.descriptionMessage \u003d descriptionMessage;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"     * Returns true if the descriptionMessage is an empty string or only contains whitespace. Else, returns false.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"        return descriptionMessage.stripTrailing().equals(\"\");","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"        return isEmpty() ? EMPTY_MESSAGE : descriptionMessage;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"                \u0026\u0026 descriptionMessage.equals(((Description) other).descriptionMessage)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ShanHng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"ShanHng"},"content":"        return descriptionMessage.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":15,"ShanHng":48,"anshumaantgi":1}},{"path":"src/main/java/seedu/internship/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Bransonlj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Bransonlj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":" * Represents an Internship in the internship catalogue.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Bransonlj"},"content":"public class Internship {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Bransonlj"},"content":"    private final Position position;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Bransonlj"},"content":"    private final Company company;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Bransonlj"},"content":"    private final Status status;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":"    private final Description description;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    public Internship(Position position, Company company, Status status, Description description, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"        requireAllNonNull(position, company, status, description, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Bransonlj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"    public Position getPosition() {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"        return position;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"        return company;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"Bransonlj"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Bransonlj"},"content":"        return status;","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"Bransonlj"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Bransonlj"},"content":"        return description;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Bransonlj"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Bransonlj"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"Bransonlj"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"Bransonlj"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Bransonlj"},"content":"     * Returns true if both internships have the same position and company name.","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Bransonlj"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Bransonlj"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"Bransonlj"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Bransonlj"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Bransonlj"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getCompany().equals(getCompany());","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Bransonlj"},"content":"     * Returns true if both internships have the same identity and data fields.","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Bransonlj"},"content":"     * This defines a stronger notion of equality between two internships.","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Bransonlj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Bransonlj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"Bransonlj"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Bransonlj"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Bransonlj"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"Bransonlj"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"Bransonlj"},"content":"        return otherInternship.getPosition().equals(getPosition())","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getCompany().equals(getCompany())","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"Bransonlj"},"content":"                \u0026\u0026 otherInternship.getTags().equals(getTags());","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"Bransonlj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Bransonlj"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"Karen-Lam"},"content":"        return Objects.hash(position, company, status, description, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"Bransonlj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"Bransonlj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Bransonlj"},"content":"        builder.append(getPosition())","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Bransonlj"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"Bransonlj"},"content":"                .append(getCompany())","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"Bransonlj"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"Bransonlj"},"content":"                .append(getStatus())","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"Karen-Lam"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Bransonlj"},"content":"                .append(getDescription());","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"Bransonlj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"Bransonlj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"Bransonlj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"Bransonlj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"Bransonlj"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Karen-Lam":11,"Bransonlj":109}},{"path":"src/main/java/seedu/internship/model/internship/InternshipByPositionCompanyPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":" * Predicate filters to give you a List with one required internship.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipByPositionCompanyPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    private final Position pos;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    private final Company cmp;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     * Intialises Predicate with position and company.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"     * @param pos position of the internship","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     * @param cmp company of the internship","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public InternshipByPositionCompanyPredicate(Position pos, Company cmp) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        return internship.getPosition().equals(this.pos) \u0026\u0026 internship.getCompany().equals(this.cmp);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        if (other instanceof InternshipByPositionCompanyPredicate) { // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            InternshipByPositionCompanyPredicate otherPred \u003d (InternshipByPositionCompanyPredicate) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"            return otherPred.pos.equals(this.pos) \u0026\u0026 otherPred.cmp.equals(this.cmp);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"anshumaantgi":35,"sarthak181":4}},{"path":"src/main/java/seedu/internship/model/internship/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":" * Represents an Internship\u0027s Position in the internship catalogue.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"public class Position {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"            \"Names of position should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"    public final String positionName;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"     * @param positionName A valid name for a Position.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"    public Position(String positionName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        requireNonNull(positionName);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"        checkArgument(isValidPosition(positionName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"        this.positionName \u003d positionName;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"     * Returns true if a given string is a valid Position.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"        return positionName;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"                \u0026\u0026 positionName.equals(((Position) other).positionName)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"        return positionName.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":57}},{"path":"src/main/java/seedu/internship/model/internship/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":" * Represents an Internship\u0027s Status in the internship catalogue.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"public class Status {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"     * The string representation of statuses. The statusId of each status type is its array index.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"     * E.g. \"INTERESTED\" maps to statusId\u003d0.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"    public static final String[] STATUS_TYPES \u003d {\"INTERESTED\", \"APPLIED\", \"OFFERED\", \"REJECTED\"};","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"            \"Status of an Internship should be keyed in as a number from 0 to 3.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    public final Integer statusId;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"     * @param statusId A valid String that represents the id of a Status.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"    public Status(Integer statusId) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"        requireNonNull(statusId);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"        checkArgument(isValidStatus(statusId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"        this.statusId \u003d statusId;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"     * Returns true if a given string represents a valid status id.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"     * A valid status id is a number in the range of 0 - 3. Trailing space is allowed.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"    public static boolean isValidStatus(Integer test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"        return test \u003e\u003d 0 \u0026\u0026 test \u003c\u003d 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"        return STATUS_TYPES[statusId];","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"                \u0026\u0026 statusId.equals(((Status) other).statusId)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"        return statusId.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":58}},{"path":"src/main/java/seedu/internship/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Bransonlj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Bransonlj"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Bransonlj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Bransonlj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Bransonlj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Bransonlj"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Bransonlj"},"content":" * A list of internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":" * A internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":" * As such, adding and updating of internship uses Internship#isSameInternship(Internship) for equality so as to ensure","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":" * that the internship being added or updated is unique in terms of identity in the UniqueInternshipList.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":" * However, the removal of a internship uses Internship#equals(Object) so as to ensure that the person with exactly","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":" * the same fields will be removed.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Bransonlj"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Bransonlj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Bransonlj"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"Bransonlj"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Bransonlj"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Bransonlj"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"Bransonlj"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Bransonlj"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Bransonlj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Bransonlj"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"Bransonlj"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"Bransonlj"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Bransonlj"},"content":"     * Adds an internship to the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"Bransonlj"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"Bransonlj"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"Bransonlj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"Bransonlj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Bransonlj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"Bransonlj"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Bransonlj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"     * list.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"Bransonlj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Bransonlj"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Bransonlj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"Bransonlj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Bransonlj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Bransonlj"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"Bransonlj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Bransonlj"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Bransonlj"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"Bransonlj"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"Bransonlj"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Bransonlj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"Bransonlj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"Bransonlj"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Bransonlj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Bransonlj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Bransonlj"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"Bransonlj"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"Bransonlj"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Bransonlj"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"Bransonlj"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"Bransonlj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"Bransonlj"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"Bransonlj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Bransonlj"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Bransonlj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"Bransonlj"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"Bransonlj"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"Bransonlj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"sarthak181"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"sarthak181"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"sarthak181"},"content":"        if (other instanceof UniqueInternshipList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"sarthak181"},"content":"            UniqueInternshipList otherList \u003d (UniqueInternshipList) other;","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"            return this.internalList.equals(otherList.internalList);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"sarthak181"},"content":"        return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"Bransonlj"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"Bransonlj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"Bransonlj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"Bransonlj"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"Bransonlj"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"Bransonlj"},"content":"     * Returns true if {@code internship} contains only unique internship.","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"Bransonlj"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"Bransonlj"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"Bransonlj"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"Bransonlj"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"Bransonlj"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"Bransonlj"},"content":"                    return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"Bransonlj"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"Bransonlj"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"Bransonlj"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"Bransonlj"},"content":"        return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"Bransonlj"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"Bransonlj"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Karen-Lam":11,"Bransonlj":125,"anshumaantgi":1,"sarthak181":9}},{"path":"src/main/java/seedu/internship/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":" * Signals that the operation will result in duplicate Internships (Internships are considered duplicates if they have","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":" * the same Position and Company Name). TinS assigns an auto-generated ID to the internships to make them distinct.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":12}},{"path":"src/main/java/seedu/internship/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":6}},{"path":"src/main/java/seedu/internship/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Karen-Lam":2,"-":52}},{"path":"src/main/java/seedu/internship/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":" * Contains utility methods for populating {@code InternshipCatalogue} with sample data.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"        return new Internship[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Machine Learning\"), new Company(\"Tiktok\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(0), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"important\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Software Engineer\"), new Company(\"Grab\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(1), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"fun\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Data Analytics\"), new Company(\"Google\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(2), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"important\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Machine Learning\"), new Company(\"GovTech\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(3), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"important\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Software Engineer\"), new Company(\"GovTech\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(3), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"interesting\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"            new Internship(new Position(\"Software Testing\"), new Company(\"Razor\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"                        new Status(0), new Description(\"This is a dummy internship\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"                        getTagSet(\"fun\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"    public static ReadOnlyInternshipCatalogue getSampleInternshipCatalogue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCatalogue sampleIc \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"            sampleIc.addInternship(sampleInternship);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"        return sampleIc;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":60}},{"path":"src/main/java/seedu/internship/storage/InternshipCatalogueStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":" * Represents a storage for {@link seedu.internship.model.InternshipCatalogue}.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"public interface InternshipCatalogueStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"    Path getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"     * Returns InternshipCatalogue data as a {@link ReadOnlyInternshipCatalogue}.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"     * @see #getInternshipCatalogueFilePath()","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"    Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue(Path filePath) throws DataConversionException,","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"            IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"     * Saves the given {@link ReadOnlyInternshipCatalogue} to the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"     * @param internshipCatalogue cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"    void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"     * @see #saveInternshipCatalogue(ReadOnlyInternshipCatalogue)","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"    void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue, Path filePath) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":46}},{"path":"src/main/java/seedu/internship/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"public class JsonAdaptedInternship {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    private final String positionName;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"    private final String companyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    private final String statusId;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    private final String messageDescription;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given internship details.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"    public JsonAdaptedInternship(@JsonProperty(\"positionName\") String positionName,","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"                                 @JsonProperty(\"companyName\") String companyName,","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"                                 @JsonProperty(\"statusId\") String statusId,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"                                 @JsonProperty(\"messageDescription\") String messageDescription,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"                                 @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"        this.positionName \u003d positionName;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"        this.statusId \u003d statusId;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        this.messageDescription \u003d messageDescription;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"        positionName \u003d source.getPosition().positionName;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"        companyName \u003d source.getCompany().companyName;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"        statusId \u003d String.valueOf(source.getStatus().statusId);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"        messageDescription \u003d source.getDescription().descriptionMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Karen-Lam"},"content":"     * Converts this Jackson-friendly adapted internship object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"        final List\u003cTag\u003e internshipTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Karen-Lam"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Karen-Lam"},"content":"            internshipTags.add(tag.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"        if (positionName \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"                    Position.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"        if (!Position.isValidPosition(positionName)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Karen-Lam"},"content":"        final Position modelPositionName \u003d new Position(positionName);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Karen-Lam"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Karen-Lam"},"content":"        if (!Company.isValidCompany(companyName)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Karen-Lam"},"content":"        final Company modelCompanyName \u003d new Company(companyName);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Karen-Lam"},"content":"        if (statusId \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Karen-Lam"},"content":"        if (!Status.isValidStatus(Integer.valueOf(statusId))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Karen-Lam"},"content":"        final Status modelStatusId \u003d new Status(Integer.valueOf(statusId));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Karen-Lam"},"content":"        if (messageDescription \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Karen-Lam"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"Karen-Lam"},"content":"        if (!Description.isValidDescription(messageDescription)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Karen-Lam"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Karen-Lam"},"content":"        final Description modelMessageDescription \u003d new Description(messageDescription);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"Karen-Lam"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(internshipTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Karen-Lam"},"content":"        return new Internship(modelPositionName, modelCompanyName, modelStatusId, modelMessageDescription, modelTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":113}},{"path":"src/main/java/seedu/internship/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Karen-Lam":3,"-":45}},{"path":"src/main/java/seedu/internship/storage/JsonInternshipCatalogueStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.FileUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.JsonUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":" * A class to access InternshipCatalogue data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"public class JsonInternshipCatalogueStorage implements InternshipCatalogueStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInternshipCatalogueStorage.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"    public JsonInternshipCatalogueStorage(Path filePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"        return filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"    public Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue() throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"        return readInternshipCatalogue(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"     * Similar to {@link #readInternshipCatalogue()}.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"    public Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"        Optional\u003cJsonSerializableInternshipCatalogue\u003e jsonInternshipCatalogue \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"                filePath, JsonSerializableInternshipCatalogue.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"        if (!jsonInternshipCatalogue.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"            return Optional.of(jsonInternshipCatalogue.get().toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"    public void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Karen-Lam"},"content":"        saveInternshipCatalogue(internshipCatalogue, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"     * Similar to {@link #saveInternshipCatalogue(ReadOnlyInternshipCatalogue)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Karen-Lam"},"content":"    public void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue, Path filePath)","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Karen-Lam"},"content":"            throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"        requireNonNull(internshipCatalogue);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInternshipCatalogue(internshipCatalogue), filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":79}},{"path":"src/main/java/seedu/internship/storage/JsonSerializableInternshipCatalogue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":" * An Immutable InternshipCatalogue that is serializable to JSON format.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"@JsonRootName(value \u003d \"TinS\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"public class JsonSerializableInternshipCatalogue {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internship list contains duplicate internship(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"     * Constructs a {@code JsonSerializableInternshipCatalogue} with the given internships.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    public JsonSerializableInternshipCatalogue(@JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"     * Converts a given {@code ReadOnlyInternshipCatalogue} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInternshipCatalogue}.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"    public JsonSerializableInternshipCatalogue(ReadOnlyInternshipCatalogue source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        internships.addAll(source.getInternshipList().stream().map(JsonAdaptedInternship::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"     * Converts this internship catalogue into the model\u0027s {@code InternshipCatalogue} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipCatalogue toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCatalogue internshipCatalogue \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"            if (internshipCatalogue.hasInternship(internship)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"            internshipCatalogue.addInternship(internship);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"        return internshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":61}},{"path":"src/main/java/seedu/internship/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.JsonUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":6,"-":42}},{"path":"src/main/java/seedu/internship/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"public interface Storage extends InternshipCatalogueStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"    Path getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":32}},{"path":"src/main/java/seedu/internship/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":" * Manages storage of InternshipCatalogue data in local storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    private InternshipCatalogueStorage internshipCatalogueStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"     * Creates a {@code StorageManager} with the given {@code InternshipCatalogueStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    public StorageManager(InternshipCatalogueStorage internshipCatalogueStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"        this.internshipCatalogueStorage \u003d internshipCatalogueStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"    public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"        return internshipCatalogueStorage.getInternshipCatalogueFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"    public Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"        return readInternshipCatalogue(internshipCatalogueStorage.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"    public Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue(Path filePath) throws DataConversionException,","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Karen-Lam"},"content":"            IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Karen-Lam"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Karen-Lam"},"content":"        return internshipCatalogueStorage.readInternshipCatalogue(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"    public void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"        saveInternshipCatalogue(internshipCatalogue, internshipCatalogueStorage.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"    public void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue, Path filePath) throws","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"            IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"        internshipCatalogueStorage.saveInternshipCatalogue(internshipCatalogue, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":80}},{"path":"src/main/java/seedu/internship/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":" * Represents a storage for {@link seedu.internship.model.UserPrefs}.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"     * Saves the given {@link seedu.internship.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Karen-Lam":6,"-":30}},{"path":"src/main/java/seedu/internship/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"         * @see seedu.internship.logic.Logic#execute(String)","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Karen-Lam":5,"-":80}},{"path":"src/main/java/seedu/internship/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"    // need change user guide address","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Karen-Lam":3,"-":99}},{"path":"src/main/java/seedu/internship/ui/InternshipCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":" * An UI component that displays information of a {@code Internship}.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"    private static final String FXML \u003d \"InternshipListCard.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    public final Internship internship;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"    private Label position;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    private Label company;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"    private Label id;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"    private Label status;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"    private Label description;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"     * Creates a {@code InternshipCard} with the given {@code Internship} and index to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"        position.setText(internship.getPosition().positionName);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"        company.setText(internship.getCompany().companyName + \",\");","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"        status.setText(\"Status : \" + internship.getStatus().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"        internship.getTags().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCard card \u003d (InternshipCard) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":19,"ShanHng":2,"anshumaantgi":1,"-":54}},{"path":"src/main/java/seedu/internship/ui/InternshipInfoPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"import javafx.scene.control.Separator;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":" * A panel to display detailed information about an internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"public class InternshipInfoPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    private static final String FXML \u003d \"InternshipInfoPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipInfoPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"    private Internship internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"    private GridPane infoPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"    private Label position;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    private Label company;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    private Label id;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"    private Label status;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"    private Label description;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"    private Separator separator;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"     * Creates a {@code InternshipInfoPanel} displaying all information of an Internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"    public InternshipInfoPanel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"        position.setText(\"Run \u0027view\u0027 command to view some internships.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"        position.setStyle(\"-fx-font-size: 14pt\");","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"        company.setText(\"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"        status.setText(\"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"        description.setText(\"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"        separator.setManaged(false);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"     * Updates the {@code InternshipInfoPanel} displaying all information of an Internship.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"ShanHng"},"content":"    public void updateInfoPanel(Internship internship) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"ShanHng"},"content":"        if (!isNull(internship)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"ShanHng"},"content":"            position.setText(internship.getPosition().positionName);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"ShanHng"},"content":"            company.setText(internship.getCompany().companyName);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"ShanHng"},"content":"            status.setText(\"Status: \" + internship.getStatus().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"ShanHng"},"content":"            description.setText(\"Description: \" + internship.getDescription().descriptionMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"ShanHng"},"content":"            separator.setManaged(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"ShanHng"},"content":"            internship.getTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"ShanHng"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"ShanHng"},"content":"                    .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":11,"ShanHng":64}},{"path":"src/main/java/seedu/internship/ui/InternshipListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":" * Panel containing the list of internships.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"public class InternshipListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"    private static final String FXML \u003d \"InternshipListPanel.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"    private ListView\u003cInternship\u003e internshipListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipListPanel(ObservableList\u003cInternship\u003e internshipList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"        internshipListView.setItems(internshipList);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"        internshipListView.setCellFactory(listView -\u003e new InternshipListPanel.InternshipListViewCell());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"                setText(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"                setGraphic(new InternshipCard(internship, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":49}},{"path":"src/main/java/seedu/internship/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.Logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"    private InternshipListPanel internshipListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    private InternshipInfoPanel internshipInfoPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"    private StackPane internshipListPanelPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"    private StackPane internshipInfoPanelPlaceholder;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"     * Creates a {@code MainWindow1} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Karen-Lam"},"content":"        internshipListPanel \u003d new InternshipListPanel(logic.getFilteredInternshipList());","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Karen-Lam"},"content":"        internshipListPanelPlaceholder.getChildren().add(internshipListPanel.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"ShanHng"},"content":"        internshipInfoPanel \u003d new InternshipInfoPanel();","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"ShanHng"},"content":"        internshipInfoPanelPlaceholder.getChildren().add(internshipInfoPanel.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Karen-Lam"},"content":"        // Check Logic if method getTinsFilePath matches","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Karen-Lam"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipListPanel getInternshipListPanel() {","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"Karen-Lam"},"content":"        return internshipListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"ShanHng"},"content":"    public InternshipInfoPanel getInternshipInfoPanel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"ShanHng"},"content":"        return internshipInfoPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"Karen-Lam"},"content":"     * @see seedu.internship.logic.Logic#execute(String)","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Karen-Lam"},"content":"            internshipInfoPanel.updateInfoPanel(commandResult.getInternship());","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":23,"ShanHng":10,"-":178}},{"path":"src/main/java/seedu/internship/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Karen-Lam":1,"-":27}},{"path":"src/main/java/seedu/internship/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":27}},{"path":"src/main/java/seedu/internship/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Karen-Lam":1,"-":12}},{"path":"src/main/java/seedu/internship/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.MainApp;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.Logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    // Change this to change icon image","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    // CHanges to new logic","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    // Chnaged to new logic","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Karen-Lam":6,"anshumaantgi":2,"-":83}},{"path":"src/main/java/seedu/internship/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.MainApp;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Karen-Lam":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"  \u003cTextField id\u003d\"command-text-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ShanHng":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#9bd2ec, 20%);","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#e0e0e0, 20%);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"ShanHng"},"content":"/* .split-pane {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#fffefe, 20%);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"ShanHng"},"content":"} */","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"ShanHng"},"content":"#internshipList {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"ShanHng"},"content":"    -fx-border-width: 0 1 0 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"ShanHng"},"content":"    -fx-border-color: rgb(188, 188, 188);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color:rgba(255, 255, 255, 0.85);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: rgba(255, 255, 255, 0.85);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"ShanHng"},"content":"/* add p/Software Engineer c/Grab s/1 d/Interview Date: 20 May 202 */","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#9bd2ec, 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#9bd2ec, 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"ShanHng"},"content":"/* .list-cell:filled:selected {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#9bd2ec, 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"ShanHng"},"content":"    -fx-border-color: derive(#9bd2ec, 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"ShanHng"},"content":"} */","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"ShanHng"},"content":"     -fx-background-color: #9bd2ec;","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"ShanHng"},"content":"     -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0.5, 0.0, 0.0);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"ShanHng"},"content":"     -fx-background-color: derive(#9bd2ec, 20%);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Monospace\";","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"ShanHng"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"ShanHng"},"content":"    -fx-order-radius: 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"ShanHng"},"content":"    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.2), 10, 0.5, 0.0, 0.0);","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"ShanHng"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"ShanHng"},"content":"    -fx-pref-height: 20px;","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"ShanHng"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"ShanHng"},"content":"    /* -fx-background-color: derive(#1d1d1d, 30%); */","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: rgb(81, 40, 14);","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"ShanHng"},"content":".menu:hover {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(rgb(54, 26, 9), 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"ShanHng"},"content":".menu:showing {","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(rgb(54, 26, 9), 70%);","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"ShanHng"},"content":".menu-item {","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color:white;","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"ShanHng"},"content":".menu-item .label {","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"ShanHng"},"content":".menu-item:hover {","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color:#c0eaff;","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"ShanHng"},"content":"    /* -fx-background-color: derive(rgb(191, 191, 191), 50%);    */","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: derive(#9bd2ec, 20%);","lastModifiedDate":"2023-03-13"},{"lineNumber":330,"author":{"gitId":"ShanHng"},"content":"    -fx-background-insets: 4;","lastModifiedDate":"2023-03-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"ShanHng"},"content":"    -fx-padding: 1 7 1 7;","lastModifiedDate":"2023-03-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-13"},{"lineNumber":362,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":363,"author":{"gitId":"ShanHng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-13"},{"lineNumber":364,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":365,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"ShanHng"},"content":"#filterField, #internshipListPanel, #internshipWebpage {","lastModifiedDate":"2023-03-13"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: #268fb5;","lastModifiedDate":"2023-03-13"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":390,"author":{"gitId":"ShanHng"},"content":".grid-pane {","lastModifiedDate":"2023-03-13"},{"lineNumber":391,"author":{"gitId":"ShanHng"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-13"},{"lineNumber":392,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":393,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":394,"author":{"gitId":"ShanHng"},"content":"#bluebox {","lastModifiedDate":"2023-03-13"},{"lineNumber":395,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: blue;","lastModifiedDate":"2023-03-13"},{"lineNumber":396,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":397,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":398,"author":{"gitId":"ShanHng"},"content":"#redbox {","lastModifiedDate":"2023-03-13"},{"lineNumber":399,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: red;","lastModifiedDate":"2023-03-13"},{"lineNumber":400,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":401,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":402,"author":{"gitId":"ShanHng"},"content":"#infoPanel{","lastModifiedDate":"2023-03-13"},{"lineNumber":403,"author":{"gitId":"ShanHng"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":404,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":405,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":406,"author":{"gitId":"ShanHng"},"content":".info-panel-h1 {","lastModifiedDate":"2023-03-13"},{"lineNumber":407,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":408,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":409,"author":{"gitId":"ShanHng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-13"},{"lineNumber":410,"author":{"gitId":"ShanHng"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2023-03-13"},{"lineNumber":411,"author":{"gitId":"ShanHng"},"content":"    /* -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":412,"author":{"gitId":"ShanHng"},"content":"    -fx-border-color: black; */","lastModifiedDate":"2023-03-13"},{"lineNumber":413,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":414,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":415,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":416,"author":{"gitId":"ShanHng"},"content":".info-panel-h2 {","lastModifiedDate":"2023-03-13"},{"lineNumber":417,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":418,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":419,"author":{"gitId":"ShanHng"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2023-03-13"},{"lineNumber":420,"author":{"gitId":"ShanHng"},"content":"    /* -fx-border-width: 1 0 0 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":421,"author":{"gitId":"ShanHng"},"content":"    -fx-border-color: black; */","lastModifiedDate":"2023-03-13"},{"lineNumber":422,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":423,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":424,"author":{"gitId":"ShanHng"},"content":".info-panel-h3 {","lastModifiedDate":"2023-03-13"},{"lineNumber":425,"author":{"gitId":"ShanHng"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":426,"author":{"gitId":"ShanHng"},"content":"    -fx-font-family: \"Helvetica\";","lastModifiedDate":"2023-03-13"},{"lineNumber":427,"author":{"gitId":"ShanHng"},"content":"    -fx-padding: 0 0 0 10;","lastModifiedDate":"2023-03-13"},{"lineNumber":428,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"ShanHng":130,"-":298}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"    \u003c!-- edit this if we want to change help icon image --\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Karen-Lam":1,"-":44}},{"path":"src/main/resources/view/InternshipInfoPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"\u003cGridPane fx:id\u003d\"infoPanel\" hgap\u003d\"30.0\" vgap\u003d\"50.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"            \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"info-panel-h1\" text\u003d\"Software Engineering\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"      \u003c!--         \u003cminHeight\u003e--\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"      \u003c!--            \u0026lt;!\u0026ndash; Ensures that the label text is never truncated \u0026ndash;\u0026gt;--\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"      \u003c!--            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e--\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"      \u003c!--         \u003c/minHeight\u003e--\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"            \u003cSeparator fx:id\u003d\"separator\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"info-panel-h2\" text\u003d\"Sample sample sample\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"      \u003cVBox GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"info-panel-h3\" text\u003d\"Status\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"info-panel-h3\" text\u003d\"Description\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"      \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"      \u003cRowConstraints maxHeight\u003d\"47.42857142857143\" minHeight\u003d\"9.714298793247764\" prefHeight\u003d\"25.714272635323653\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"ShanHng"},"content":"   \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"ShanHng"},"content":"      \u003cColumnConstraints maxWidth\u003d\"93.14288766043526\" minWidth\u003d\"12.000004359654017\" prefWidth\u003d\"54.28570992606027\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"ShanHng"},"content":"      \u003cColumnConstraints maxWidth\u003d\"93.14285278320312\" minWidth\u003d\"10.0\" prefWidth\u003d\"50.857147216796875\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"ShanHng"},"content":"   \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"ShanHng"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"ShanHng"},"content":"      \u003cInsets bottom\u003d\"30.0\" left\u003d\"30.0\" right\u003d\"30.0\" top\u003d\"50.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"ShanHng"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"ShanHng"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"ShanHng":67}},{"path":"src/main/resources/view/InternshipListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"237.14286477225167\" minWidth\u003d\"5.714271136692588\" prefWidth\u003d\"24.571431023733965\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"296.0000145775931\" minWidth\u003d\"10.0\" prefWidth\u003d\"277.7142832619803\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"              \u003cminWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"              \u003c/minWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"      \u003cHBox GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"                \u003cLabel fx:id\u003d\"company\" style\u003d\"-fx-font-weight:bold\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$company\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"                \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$position\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"      \u003cVBox GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"               \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"               \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"                  \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"         \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":24,"ShanHng":36}},{"path":"src/main/resources/view/InternshipListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"    \u003cListView fx:id\u003d\"internshipListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Karen-Lam":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"The Intern\u0027s Ship\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"        \u003c!-- edit this if we want to change main icon image --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"            \u003cBorderPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"                \u003ctop\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                                \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"                \u003c/top\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"                \u003cleft\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"                    \u003cVBox fx:id\u003d\"internshipList\" minWidth\u003d\"240\" prefWidth\u003d\"240\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"                        \u003cStackPane fx:id\u003d\"internshipListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"ShanHng"},"content":"                \u003c/left\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"ShanHng"},"content":"                \u003cbottom\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"ShanHng"},"content":"                \u003c/bottom\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"ShanHng"},"content":"            \u003ccenter\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"ShanHng"},"content":"                    \u003cAnchorPane styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"ShanHng"},"content":"                        \u003cStackPane fx:id\u003d\"internshipInfoPanelPlaceholder\" alignment\u003d\"TOP_LEFT\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"ShanHng"},"content":"                    \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"ShanHng"},"content":"            \u003c/center\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"ShanHng"},"content":"            \u003c/BorderPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ShanHng":29,"-":46}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"ShanHng":1,"-":8}},{"path":"src/test/java/seedu/internship/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Karen-Lam":1,"-":57}},{"path":"src/test/java/seedu/internship/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Karen-Lam":1,"-":26}},{"path":"src/test/java/seedu/internship/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"-":133}},{"path":"src/test/java/seedu/internship/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.core.index;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Karen-Lam":2,"-":58}},{"path":"src/test/java/seedu/internship/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Karen-Lam":2,"-":34}},{"path":"src/test/java/seedu/internship/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Karen-Lam":3,"-":105}},{"path":"src/test/java/seedu/internship/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Config;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Karen-Lam":4,"-":112}},{"path":"src/test/java/seedu/internship/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"-":21}},{"path":"src/test/java/seedu/internship/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.testutil.TestUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":3,"-":42}},{"path":"src/test/java/seedu/internship/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.commons.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Karen-Lam":2,"-":141}},{"path":"src/test/java/seedu/internship/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.LogicManager.FILE_OPS_ERROR_MESSAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.COMPANY_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.POSITION_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.STATUS_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.TAG_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.storage.JsonInternshipCatalogueStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.storage.StorageManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        JsonInternshipCatalogueStorage internshipCatalogueStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"                new JsonInternshipCatalogueStorage(temporaryFolder.resolve(\"internshipcatalogue.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        StorageManager storage \u003d new StorageManager(internshipCatalogueStorage, userPrefsStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        JsonInternshipCatalogueStorage internshipCatalogueStorage \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"                new JsonInternshipCatalogueIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"                        .resolve(\"ioExceptionInternshipCatalogue.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        StorageManager storage \u003d new StorageManager(internshipCatalogueStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + POSITION_DESC_ML1 + COMPANY_DESC_ML1 + STATUS_DESC_ML1","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_ML1 + TAG_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(ML1).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"        expectedModel.addInternship(expectedInternship);","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        String expectedMessage \u003d FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInternshipList().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"anshumaantgi"},"content":"    private static class JsonInternshipCatalogueIoExceptionThrowingStub extends JsonInternshipCatalogueStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"anshumaantgi"},"content":"        private JsonInternshipCatalogueIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"anshumaantgi"},"content":"        public void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue, Path filePath)","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"anshumaantgi"},"content":"                throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Karen-Lam":6,"anshumaantgi":40,"-":121}},{"path":"src/test/java/seedu/internship/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"        model \u003d new ModelManager(getTypicalInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"    public void execute_newInternship_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"        expectedModel.addInternship(validInternship);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        assertCommandSuccess(new AddCommand(validInternship), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validInternship), expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"        Internship internshipInList \u003d model.getInternshipCatalogue().getInternshipList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"        assertCommandFailure(new AddCommand(internshipInList), model, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Karen-Lam":3,"anshumaantgi":1,"-":27,"sarthak181":15}},{"path":"src/test/java/seedu/internship/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.testutil.TypicalInternships;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"    public void constructor_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"    public void execute_internshipAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        ModelStubAcceptingInternshipAdded modelStub \u003d new ModelStubAcceptingInternshipAdded();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"        CommandResult commandResult \u003d new AddCommand(validInternship).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validInternship), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"        assertEquals(Arrays.asList(validInternship), modelStub.internshipsAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"        AddCommand addCommand \u003d new AddCommand(validInternship);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"        ModelStub modelStub \u003d new ModelStubWithInternship(validInternship);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP, () -\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"        Internship ml2 \u003d TypicalInternships.ML2;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        Internship se3 \u003d TypicalInternships.SE3;","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        AddCommand addML2Command \u003d new AddCommand(ml2);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        AddCommand addSE3Command \u003d new AddCommand(se3);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"        assertTrue(addML2Command.equals(addML2Command));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        AddCommand addML2CommandCopy \u003d new AddCommand(ml2);","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"        assertTrue(addML2Command.equals(addML2CommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"        assertFalse(addML2Command.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"        assertFalse(addML2Command.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"        assertFalse(addML2Command.equals(addSE3Command));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"sarthak181"},"content":"        public Path getInternshipCatalogueFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"sarthak181"},"content":"        public void setInternshipCatalogueFilePath(Path internshipCatalogueFilePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"sarthak181"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"sarthak181"},"content":"        public void setInternshipCatalogue(ReadOnlyInternshipCatalogue newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"sarthak181"},"content":"        public ReadOnlyInternshipCatalogue getInternshipCatalogue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"sarthak181"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"sarthak181"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"sarthak181"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"sarthak181"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"sarthak181"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"sarthak181"},"content":"    private class ModelStubWithInternship extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"sarthak181"},"content":"        private final Internship internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"sarthak181"},"content":"        ModelStubWithInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"sarthak181"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"sarthak181"},"content":"            this.internship \u003d internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"sarthak181"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"sarthak181"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"sarthak181"},"content":"            return this.internship.isSameInternship(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"sarthak181"},"content":"    private class ModelStubAcceptingInternshipAdded extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"sarthak181"},"content":"        final ArrayList\u003cInternship\u003e internshipsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"sarthak181"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"sarthak181"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"sarthak181"},"content":"            return internshipsAdded.stream().anyMatch(internship::isSameInternship);","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"sarthak181"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"sarthak181"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"sarthak181"},"content":"            internshipsAdded.add(internship);","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"sarthak181"},"content":"        public ReadOnlyInternshipCatalogue getInternshipCatalogue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"sarthak181"},"content":"            return new InternshipCatalogue();","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Karen-Lam":4,"anshumaantgi":7,"-":132,"sarthak181":54}},{"path":"src/test/java/seedu/internship/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Karen-Lam":1,"-":53}},{"path":"src/test/java/seedu/internship/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.InternshipByPositionCompanyPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_ML1 \u003d \"Machine Learning\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_ML1 \u003d \"Tiktok\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_ML1 \u003d \"1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_ML1 \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_ML1 \u003d \"Registration Deadline: 20 Mar 2023\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_SE1 \u003d \"Software Engineer\";","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_SE1 \u003d \"Grab\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_SE1 \u003d \"2\";","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_SE1 \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_SE1 \u003d \"Interview Date: 20 May 2023\";","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_DA1 \u003d \"Data Analytics\";","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_DA1 \u003d \"Google\";","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_DA1 \u003d \"3\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_DA1 \u003d 2;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_DA1 \u003d \"Internship Period: 01 May 2023 to 31 July 2023\";","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_SD1 \u003d \"Software Developer\";","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_SD1 \u003d \"Shopee\";","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_SD1 \u003d \"4\";","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_SD1 \u003d 3;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_SD1 \u003d \"Rejected on 21 Feb 2023\";","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_TAG_FUN \u003d \"fun\";","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_TAG_IMPORTANT \u003d \"important\";","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    public static final String COMPANY_DESC_ML1 \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_ML1;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"    public static final String POSITION_DESC_ML1 \u003d \" \" + PREFIX_POSITION + VALID_POSITION_ML1;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    public static final String STATUS_DESC_ML1 \u003d \" \" + PREFIX_STATUS + VALID_STATUS_ML1;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DESCRIPTION_DESC_ML1 \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_ML1;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TAG_DESC_ML1 \u003d \" \" + PREFIX_TAG + VALID_TAG_IMPORTANT;","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    public static final String COMPANY_DESC_SE1 \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_SE1;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    public static final String POSITION_DESC_SE1 \u003d \" \" + PREFIX_POSITION + VALID_POSITION_SE1;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    public static final String STATUS_DESC_SE1 \u003d \" \" + PREFIX_STATUS + VALID_STATUS_SE1;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DESCRIPTION_DESC_SE1 \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_SE1;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TAG_DESC_SE1 \u003d \" \" + PREFIX_TAG + VALID_TAG_FUN;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"    public static final String COMPANY_DESC_DA1 \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_DA1;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    public static final String POSITION_DESC_DA1 \u003d \" \" + PREFIX_POSITION + VALID_POSITION_DA1;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    public static final String STATUS_DESC_DA1 \u003d \" \" + PREFIX_STATUS + VALID_STATUS_DA1;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DESCRIPTION_DESC_DA1 \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_DA1;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TAG_DESC_DA1 \u003d \" \" + PREFIX_TAG + VALID_TAG_IMPORTANT;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"    public static final String COMPANY_DESC_SD1 \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_SD1;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    public static final String POSITION_DESC_SD1 \u003d \" \" + PREFIX_POSITION + VALID_POSITION_SE1;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"    public static final String STATUS_DESC_SD1 \u003d \" \" + PREFIX_STATUS + VALID_STATUS_SD1;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DESCRIPTION_DESC_SD1 \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_SD1;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TAG_DESC_SD1 \u003d \" \" + PREFIX_TAG + VALID_TAG_IMPORTANT;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION + \"Engineer\u0026\";","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY + \"\"; // company cannot be empty","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"5\";","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"imp and fun\"; // spaces not allowed in tags","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"anshumaantgi"},"content":"        InternshipCatalogue expectedInternshipCatalogue \u003d new InternshipCatalogue(actualModel.getInternshipCatalogue());","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"anshumaantgi"},"content":"        List\u003cInternship\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedInternshipCatalogue, actualModel.getInternshipCatalogue());","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"     * Updates {@code model}\u0027s filtered list to show only the internship at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"     * {@code model}\u0027s internship catalogue.","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"anshumaantgi"},"content":"    public static void showInternshipAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"        Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"anshumaantgi"},"content":"        model.updateFilteredInternshipList(new InternshipByPositionCompanyPredicate(internship.getPosition(),","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"                internship.getCompany()));","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Karen-Lam":6,"anshumaantgi":75,"-":62,"sarthak181":2}},{"path":"src/test/java/seedu/internship/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    private Model model \u003d new ModelManager(getTypicalInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"sarthak181"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInternshipCatalogue().getInternshipList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"    private void showNoInternship(Model model) {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"sarthak181"},"content":"        model.updateFilteredInternshipList(p -\u003e false);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"sarthak181"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Karen-Lam":5,"anshumaantgi":5,"-":71,"sarthak181":28}},{"path":"src/test/java/seedu/internship/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Karen-Lam":3,"anshumaantgi":2,"-":15}},{"path":"src/test/java/seedu/internship/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Karen-Lam":3,"anshumaantgi":2,"-":15}},{"path":"src/test/java/seedu/internship/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        model \u003d new ModelManager(getTypicalInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        expectedModel \u003d new ModelManager(model.getInternshipCatalogue(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":10,"-":27}},{"path":"src/test/java/seedu/internship/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.COMPANY_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.COMPANY_DESC_SE1;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.DESCRIPTION_DESC_SE1;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.POSITION_DESC_ML1;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.POSITION_DESC_SE1;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.STATUS_DESC_ML1;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.STATUS_DESC_SE1;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.TAG_DESC_ML1;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.TAG_DESC_SE1;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.VALID_COMPANY_SE1;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.VALID_DESCRIPTION_SE1;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.VALID_POSITION_SE1;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.VALID_STATUS_SE1;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.commands.CommandTestUtil.VALID_TAG_FUN;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.SE1;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(SE1).withTags(VALID_TAG_FUN).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"                + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"sarthak181"},"content":"        // multiple positions - last position accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_ML1 + POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"                + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"        // multiple companies - last company accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_SE1 + COMPANY_DESC_ML1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"                + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_ML1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"                + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"        // multiple descriptions - last address accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"                + DESCRIPTION_DESC_ML1 + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"        Internship expectedInternshipMultipleTags \u003d new InternshipBuilder(SE1).withTags(VALID_TAG_FUN, VALID_TAG_FUN)","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_SE1 + TAG_DESC_SE1 + TAG_DESC_SE1 , new AddCommand(expectedInternshipMultipleTags));","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(ML1).withTags().build();","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, POSITION_DESC_ML1 + COMPANY_DESC_ML1 + STATUS_DESC_ML1 + DESCRIPTION_DESC_ML1,","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"                new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"        // missing position prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"        assertParseFailure(parser, VALID_POSITION_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1 + DESCRIPTION_DESC_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"        // missing company prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + VALID_COMPANY_SE1 + STATUS_DESC_SE1 + DESCRIPTION_DESC_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"sarthak181"},"content":"        // missing status prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"sarthak181"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + VALID_STATUS_SE1 + DESCRIPTION_DESC_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"        // missing description prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"sarthak181"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1 + VALID_DESCRIPTION_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"        assertParseFailure(parser, VALID_POSITION_SE1 + VALID_COMPANY_SE1 + VALID_STATUS_SE1 + VALID_DESCRIPTION_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"sarthak181"},"content":"        // invalid position","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, INVALID_POSITION_DESC + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"sarthak181"},"content":"                + TAG_DESC_ML1 + TAG_DESC_SE1, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"sarthak181"},"content":"        // invalid company","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + INVALID_COMPANY_DESC + STATUS_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"sarthak181"},"content":"                + TAG_DESC_ML1 + TAG_DESC_SE1, Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"sarthak181"},"content":"        // invalid status","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + INVALID_STATUS_DESC","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"sarthak181"},"content":"                + TAG_DESC_ML1 + TAG_DESC_SE1, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, POSITION_DESC_SE1 + COMPANY_DESC_SE1 + STATUS_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"                + DESCRIPTION_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"sarthak181"},"content":"                + INVALID_TAG_DESC + TAG_DESC_SE1, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, INVALID_POSITION_DESC + COMPANY_DESC_SE1 + INVALID_STATUS_DESC","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"                        + DESCRIPTION_DESC_SE1 ,","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"sarthak181"},"content":"                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + POSITION_DESC_SE1 + COMPANY_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"                        + STATUS_DESC_SE1 + DESCRIPTION_DESC_SE1","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"sarthak181"},"content":"                        + TAG_DESC_ML1 + TAG_DESC_SE1,","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Karen-Lam":6,"anshumaantgi":33,"sarthak181":49,"-":54}},{"path":"src/test/java/seedu/internship/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Karen-Lam":1,"-":149}},{"path":"src/test/java/seedu/internship/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":1,"-":36}},{"path":"src/test/java/seedu/internship/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_INTERNSHIP));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Karen-Lam":4,"anshumaantgi":1,"-":25,"sarthak181":2}},{"path":"src/test/java/seedu/internship/logic/parser/InternshipCatalogueParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.testutil.InternshipUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipCatalogueParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    private final InternshipCatalogueParser parser \u003d new InternshipCatalogueParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(InternshipUtil.getAddCommand(internship));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(new AddCommand(internship), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_INTERNSHIP.getOneBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_INTERNSHIP), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Karen-Lam":5,"anshumaantgi":17,"-":46}},{"path":"src/test/java/seedu/internship/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private static final String INVALID_POSITION \u003d \"Softwa**re Engin**ring\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private static final String INVALID_COMPANY \u003d \"**Google\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private static final String INVALID_STATUS \u003d \"50\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private static final String VALID_POSITION \u003d \"Softwaare Engineering\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private static final String VALID_COMPANY \u003d \"Google\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    private static final String VALID_STATUS \u003d \"0\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    public void parsePosition_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePosition((String) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    public void parsePosition_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePosition(INVALID_POSITION));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    public void parsePosition_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        Position expectedPostion \u003d new Position(VALID_POSITION);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedPostion, ParserUtil.parsePosition(VALID_POSITION));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    public void parsePosition_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        String positionWithWhitespace \u003d WHITESPACE + VALID_POSITION + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        Position expectedName \u003d new Position(VALID_POSITION);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedName, ParserUtil.parsePosition(positionWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"    public void parseCompany_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompany((String) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"    public void parseCompany_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    public void parseCompany_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        Company expectedPhone \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedPhone, ParserUtil.parseCompany(VALID_COMPANY));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    public void parseCompany_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        String companyWithWhitespace \u003d WHITESPACE + VALID_COMPANY + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"        Company expectedPhone \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedPhone, ParserUtil.parseCompany(companyWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus((String) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"        Status expectedStatus \u003d new Status(Integer.valueOf(VALID_STATUS));","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"    public void parseStatus_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"        String statusWithWhitespace \u003d WHITESPACE + VALID_STATUS + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"        Status expectedAddress \u003d new Status(Integer.valueOf(VALID_STATUS));","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(expectedAddress, ParserUtil.parseStatus(statusWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Karen-Lam":4,"anshumaantgi":48,"-":63}},{"path":"src/test/java/seedu/internship/model/InternshipCatalogueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.ML2;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.VALID_COMPANY_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.VALID_DESCRIPTION_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.VALID_POSITION_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.VALID_STATUS_ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.VALID_TAG_IMPORTANT;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"public class InternshipCatalogueTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    private final InternshipCatalogue internshipCatalogue \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(Collections.emptyList(), internshipCatalogue.getInternshipList());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e internshipCatalogue.resetData(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    public void resetData_withValidReadOnlyInternshipCatalogue_replacesData() {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        InternshipCatalogue newData \u003d getTypicalInternshipCatalogue();","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        internshipCatalogue.resetData(newData);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        assertEquals(newData, internshipCatalogue);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    public void resetData_withDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        // Two internships with the same identity fields","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"        //Needs to be changed when we have valid internship feilds","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        Internship editedML1 \u003d new InternshipBuilder().withPosition(VALID_POSITION_ML1)","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"                .withCompany(VALID_COMPANY_ML1).withDescription(VALID_DESCRIPTION_ML1)","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"                .withStatus(VALID_STATUS_ML1).withTags(VALID_TAG_IMPORTANT).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        List\u003cInternship\u003e newInternships \u003d Arrays.asList(ML1, editedML1);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        InternshipCatalogueStub newData \u003d new InternshipCatalogueStub(newInternships);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e internshipCatalogue.resetData(newData));","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    public void hasinternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e internshipCatalogue.hasInternship(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    public void hasInternship_internshipNotInInternshipCatalogue_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"        assertFalse(internshipCatalogue.hasInternship(ML2));","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    public void hasInternship_internshipInInternshipCatalogue_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        internshipCatalogue.addInternship(ML2);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        assertTrue(internshipCatalogue.hasInternship(ML2));","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    public void getInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e internshipCatalogue.getInternshipList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"     * A stub ReadOnlyInternshipCatalogue whose internships list can violate interface constraints.","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"    private static class InternshipCatalogueStub implements ReadOnlyInternshipCatalogue {","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        InternshipCatalogueStub(Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"            return internships;","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Karen-Lam":5,"anshumaantgi":96}},{"path":"src/test/java/seedu/internship/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.TypicalInternships.ML2;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.testutil.InternshipCatalogueBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"        assertEquals(new InternshipCatalogue(), new InternshipCatalogue(modelManager.getInternshipCatalogue()));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"        userPrefs.setInternshipCatalogueFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"        userPrefs.setInternshipCatalogueFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInternshipCatalogueFilePath(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"        modelManager.setInternshipCatalogueFilePath(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"        assertEquals(path, modelManager.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInternship(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"    public void hasInternship_internshipNotInInternshipCatalogue_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"        assertFalse(modelManager.hasInternship(ML2));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"Karen-Lam"},"content":"    public void hasInternship_internshipInInternshipCatalogue_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Karen-Lam"},"content":"        modelManager.addInternship(ML1);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Karen-Lam"},"content":"        assertTrue(modelManager.hasInternship(ML1));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"Karen-Lam"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Karen-Lam"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredInternshipList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"        InternshipCatalogue internshipCatalogue \u003d new InternshipCatalogueBuilder().withInternship(ML2)","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"                .withInternship(ML1).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCatalogue differentInternshipCatalogue \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"Karen-Lam"},"content":"        modelManager \u003d new ModelManager(internshipCatalogue, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Karen-Lam"},"content":"        ModelManager modelManager1Copy \u003d new ModelManager(internshipCatalogue, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"Karen-Lam"},"content":"        assertTrue(modelManager.equals(modelManager1Copy));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"Karen-Lam"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInternshipCatalogue, userPrefs)));","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"Karen-Lam"},"content":"        modelManager.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"Karen-Lam"},"content":"        differentUserPrefs.setInternshipCatalogueFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Karen-Lam"},"content":"        assertFalse(modelManager.equals(new ModelManager(internshipCatalogue, differentUserPrefs)));","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Karen-Lam":30,"anshumaantgi":3,"-":94}},{"path":"src/test/java/seedu/internship/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    public void setInternshipCatalogueFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInternshipCatalogueFilePath(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":2,"-":17}},{"path":"src/test/java/seedu/internship/model/internship/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"public class CompanyTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"        // null position","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"        // invalid positions","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Company.isValidCompany(\"%^\u0026*\")); // non-alphanumerical numbers","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"        // valid positions","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"        assertTrue(Company.isValidCompany(\"Google\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"        assertTrue(Company.isValidCompany(\"G\")); // one character","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":34}},{"path":"src/test/java/seedu/internship/model/internship/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    public void isEmpty() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"        // empty description","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"        Description emptyDescription \u003d new Description(\"\");","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"        assertTrue(emptyDescription.isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"        // description with only whitespace","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"        Description emptySpaceDescription \u003d new Description(\"   \");","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"        assertTrue(emptySpaceDescription.isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"        // valid description","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"        Description validDescription \u003d new Description(\"Test test test\");","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"        System.out.println(validDescription.isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        assertFalse(validDescription.isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":30}},{"path":"src/test/java/seedu/internship/model/internship/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"public class PositionTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    public void isValidPosition() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"        // null position","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"        // invalid positions","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Position.isValidPosition(\"%^\u0026*\")); // non-alphanumerical numbers","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"        // valid positions","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"        assertTrue(Position.isValidPosition(\"Software Engineering\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"        assertTrue(Position.isValidPosition(\"s\")); // one character","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":34}},{"path":"src/test/java/seedu/internship/model/internship/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"    public void constructor_invalid_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"        Integer invalidStatus \u003d 1000;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"        // null address","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"        // invalid statuses","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"        assertFalse(Status.isValidStatus(4)); // not 0 - 3","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"        // valid statuses","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"        assertTrue(Status.isValidStatus(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"        Integer statusIdInterested \u003d 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"        Integer statusIdApplied \u003d 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"        Integer statusIdOffered \u003d 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"        Integer statusIdRejected \u003d 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"        // valid mapping from status id to status type","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"        assertEquals((new Status(statusIdInterested)).toString(), \"INTERESTED\");","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"        assertEquals((new Status(statusIdApplied)).toString(), \"APPLIED\");","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"        assertEquals((new Status(statusIdOffered)).toString(), \"OFFERED\");","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"        assertEquals((new Status(statusIdRejected)).toString(), \"REJECTED\");","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":2,"ShanHng":48}},{"path":"src/test/java/seedu/internship/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.model.tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Karen-Lam":2,"-":24}},{"path":"src/test/java/seedu/internship/storage/JsonAdaptedInternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.storage.JsonAdaptedInternship.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"public class JsonAdaptedInternshipTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"    private static final String INVALID_POSITION \u003d \"Engineer\u0026\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"    private static final String INVALID_COMPANY \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"    private static final String INVALID_STATUS \u003d \"5\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"    private static final String INVALID_TAG \u003d \"imp and fun\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    private static final String VALID_POSITION \u003d ML1.getPosition().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"    private static final String VALID_COMPANY \u003d ML1.getCompany().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    private static final String VALID_STATUS \u003d String.valueOf(ML1.getStatus().statusId);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"    private static final String VALID_DESCRIPTION \u003d ML1.getDescription().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ML1.getTags().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_validInternshipDetails_returnsInternship() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(ML1);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"        assertEquals(ML1, internship.toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_invalidPosition_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"                new JsonAdaptedInternship(INVALID_POSITION, VALID_COMPANY, VALID_STATUS,","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"                        VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d Position.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_nullPosition_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(null, VALID_COMPANY, VALID_STATUS,","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"                VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"                new JsonAdaptedInternship(VALID_POSITION, INVALID_COMPANY, VALID_STATUS, VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_nullCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(VALID_POSITION, null, VALID_STATUS,","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"                VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"                new JsonAdaptedInternship(VALID_POSITION, VALID_COMPANY, INVALID_STATUS, VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(VALID_POSITION, VALID_COMPANY, null,","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"                VALID_DESCRIPTION, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"sarthak181"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"sarthak181"},"content":"                new JsonAdaptedInternship(VALID_POSITION, VALID_COMPANY, VALID_STATUS, VALID_DESCRIPTION, invalidTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, internship::toModelType);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"anshumaantgi":9,"sarthak181":90}},{"path":"src/test/java/seedu/internship/storage/JsonInternshipCatalogueStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.DA1;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.testutil.TypicalInternships.ML1;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"public class JsonInternshipCatalogueStorageTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            \"JsonInternshipCatalogueStorageTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"    @TempDir","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"    public void readInternshipCatalogue_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"        assertThrows(NullPointerException.class, () -\u003e readInternshipCatalogue(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"    private java.util.Optional\u003cReadOnlyInternshipCatalogue\u003e readInternshipCatalogue(String filePath) throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"        return new JsonInternshipCatalogueStorage(Paths.get(filePath)).readInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"                : null;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"        assertFalse(readInternshipCatalogue(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"                \"notJsonFormatInternshipCatalogue.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"    public void readInternshipCatalogue_invalidInternshipInternshipCatalogue_throwDataConversionException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"                \"invalidInternshipInternshipCatalogue.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"    public void readAddressBook_invalidAndValidInternshipInternshipCatalogue_throwDataConversionException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"                \"invalidAndValidInternshipInternshipCatalogue.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"    public void readAndSaveInternshipCatalogue_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"        Path filePath \u003d testFolder.resolve(\"TempInternshipCatalogue.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"        InternshipCatalogue original \u003d getTypicalInternshipCatalogue();","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"        JsonInternshipCatalogueStorage jsonInternshipCatalogueStorage \u003d new JsonInternshipCatalogueStorage(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"        jsonInternshipCatalogueStorage.saveInternshipCatalogue(original, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"        ReadOnlyInternshipCatalogue readBack \u003d jsonInternshipCatalogueStorage.readInternshipCatalogue(filePath).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"        assertEquals(original, new InternshipCatalogue(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"        original.addInternship(ML1);","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"        original.removeInternship(ML1);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"        jsonInternshipCatalogueStorage.saveInternshipCatalogue(original, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"        readBack \u003d jsonInternshipCatalogueStorage.readInternshipCatalogue(filePath).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"        assertEquals(original, new InternshipCatalogue(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"        original.addInternship(DA1);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"        jsonInternshipCatalogueStorage.saveInternshipCatalogue(original); // file path not specified","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"        readBack \u003d jsonInternshipCatalogueStorage.readInternshipCatalogue().get(); // file path not specified","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"        assertEquals(original, new InternshipCatalogue(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"sarthak181"},"content":"    public void saveInternshipCatalogue_nullInternshipCatalogue_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"                null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"sarthak181"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"sarthak181"},"content":"    private void saveInternshipCatalogue(ReadOnlyInternshipCatalogue internshipCatalogue, String filePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"            new JsonInternshipCatalogueStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"sarthak181"},"content":"                    .saveInternshipCatalogue(internshipCatalogue, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"sarthak181"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"sarthak181"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"sarthak181"},"content":"    public void saveInternshipCatalogue_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternshipCatalogue(","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"                new InternshipCatalogue(), null));","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"anshumaantgi":15,"sarthak181":102}},{"path":"src/test/java/seedu/internship/storage/JsonSerializableInternshipCatalogueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.util.JsonUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.testutil.TypicalInternships;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"public class JsonSerializableInternshipCatalogueTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"            \"src\", \"test\", \"data\", \"JsonSerializableInternshipCatalogueTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    private static final Path TYPICAL_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            \"typicalInternshipsInternshipCatalogue.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private static final Path INVALID_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            \"invalidInternshipInternshipCatalogue.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    private static final Path DUPLICATE_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            \"duplicateInternshipInternshipCatalogue.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_typicalInternshipsFile_success() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"        JsonSerializableInternshipCatalogue dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_INTERNSHIP_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"                JsonSerializableInternshipCatalogue.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        InternshipCatalogue internshipCatalogueFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"        InternshipCatalogue typicalInternshipsInternshipCatalogue \u003d TypicalInternships.getTypicalInternshipCatalogue();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"        assertEquals(internshipCatalogueFromFile, typicalInternshipsInternshipCatalogue);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_invalidInternshipsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"        JsonSerializableInternshipCatalogue dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INTERNSHIP_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"                JsonSerializableInternshipCatalogue.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"    public void toModelType_duplicateInternships_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"        JsonSerializableInternshipCatalogue dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INTERNSHIP_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"                JsonSerializableInternshipCatalogue.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableInternshipCatalogue.MESSAGE_DUPLICATE_INTERNSHIP,","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Karen-Lam":4,"anshumaantgi":8,"-":23,"sarthak181":16}},{"path":"src/test/java/seedu/internship/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        userPrefs.setInternshipCatalogueFilePath(Paths.get(\"data/internshipcatalogue.json\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Karen-Lam":4,"anshumaantgi":1,"-":117,"sarthak181":1}},{"path":"src/test/java/seedu/internship/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import static seedu.internship.testutil.TypicalInternships.getTypicalInternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.ReadOnlyInternshipCatalogue;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"import seedu.internship.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        JsonInternshipCatalogueStorage internshipCatalogueStorage \u003d new JsonInternshipCatalogueStorage(","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"                getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        storageManager \u003d new StorageManager(internshipCatalogueStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    public void internshipCatalogueReadSave() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"        InternshipCatalogue original \u003d getTypicalInternshipCatalogue();","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"        storageManager.saveInternshipCatalogue(original);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"        ReadOnlyInternshipCatalogue retrieved \u003d storageManager.readInternshipCatalogue().get();","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"        assertEquals(original, new InternshipCatalogue(retrieved));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"        assertNotNull(storageManager.getInternshipCatalogueFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":4,"-":54,"sarthak181":9}},{"path":"src/test/java/seedu/internship/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Karen-Lam":1,"-":33}},{"path":"src/test/java/seedu/internship/testutil/EditInternshipDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"// Only Edit and Put after we make the Edit command.","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"//package seedu.internship.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"//import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"//import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"//import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"//import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"//import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"///**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"// * A utility class to help with building EditInternshipDescriptor objects.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"// */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"//public class EditInternshipDescriptorBuilder {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"//    private EditInternshipDescriptor descriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"//        this.descriptor \u003d new EditInternshipDescriptor(descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"//     * Returns an {@code EditInternshipDescriptor} with fields containing {@code internship}\u0027s details","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder(Internship internship) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setPosition(internship.getPosition());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setCompany(internship.getCompany());","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setStatus(internship.getStatus());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setDescription(internship.getDescription());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setTags(internship.getTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"//     * Sets the {@code Position} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setPosition(new Position(position));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"//        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"//     * Sets the {@code Company} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"//        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"//     * Sets the {@code Status} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder withStatus(Integer status) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"//        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"//     * Sets the {@code Description} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"//        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"//    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"//     * that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"//     */","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"//        return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"//    public EditInternshipDescriptor build() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"//        return descriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"//}","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"//","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"anshumaantgi":88}},{"path":"src/test/java/seedu/internship/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Company;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Position;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"public class InternshipBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"    public static final String DEFAULT_ID \u003d \"1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DEFAULT_POSITION \u003d \"Architect\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    public static final String DEFAULT_COMPANY \u003d \"ABC\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    public static final Integer DEFAULT_STATUS \u003d 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"The is a dummy internship. Interview date on DDMMYYYY.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"    // private Id id;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"    private Position position;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    private Company company;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"    private Status status;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"    private Description description;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"        // id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Karen-Lam"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Karen-Lam"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"     * Initializes the InternshipBuilder with the data of {@code internshipToCopy}.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"        position \u003d internshipToCopy.getPosition();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Karen-Lam"},"content":"        company \u003d internshipToCopy.getCompany();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"        status \u003d internshipToCopy.getStatus();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Karen-Lam"},"content":"        description \u003d internshipToCopy.getDescription();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"        tags \u003d new HashSet\u003c\u003e(internshipToCopy.getTags());","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Karen-Lam"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Internship} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Karen-Lam"},"content":"     * Sets the {@code Position} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder withPosition(String position) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Karen-Lam"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"     * Sets the {@code Company} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder withCompany(String company) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Karen-Lam"},"content":"     * Sets the {@code Status} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder withStatus(Integer status) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Karen-Lam"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Karen-Lam"},"content":"     * Sets the {@code Description} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipBuilder withDescription(String description) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Karen-Lam"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Karen-Lam"},"content":"    public Internship build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Karen-Lam"},"content":"        return new Internship(position, company, status, description, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":98,"anshumaantgi":4}},{"path":"src/test/java/seedu/internship/testutil/InternshipCatalogueBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":" * A utility class to help with building InternshipCatalogue objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":" *     {@code InternshipCatalogue ic \u003d new InternshipCatalogueBuilder().withInternship(\"SE1\", \"SE2\").build();}","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"public class InternshipCatalogueBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"    private InternshipCatalogue internshipCatalogue;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipCatalogueBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Karen-Lam"},"content":"        this.internshipCatalogue \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipCatalogueBuilder(InternshipCatalogue internshipCatalogue) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"        this.internshipCatalogue \u003d internshipCatalogue;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"     * Adds a new {@code Internship} to the {@code InternshipCatalogue} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    public InternshipCatalogueBuilder withInternship(Internship internship) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"        internshipCatalogue.addInternship(internship);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"    public InternshipCatalogue build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Karen-Lam"},"content":"        return internshipCatalogue;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":32,"anshumaantgi":2}},{"path":"src/test/java/seedu/internship/testutil/InternshipUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.logic.commands.AddCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" * Util commands required for internship tests.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Karen-Lam"},"content":"public class InternshipUtil {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Karen-Lam"},"content":"     * Returns an add command string for adding the {@code internship}.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Karen-Lam"},"content":"    public static String getAddCommand(Internship internship) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Karen-Lam"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getInternshipDetails(internship);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Karen-Lam"},"content":"     * Returns the part of command string for the given {@code internship}\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Karen-Lam"},"content":"    public static String getInternshipDetails(Internship internship) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Karen-Lam"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Karen-Lam"},"content":"        sb.append(PREFIX_POSITION + internship.getPosition().positionName + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Karen-Lam"},"content":"        sb.append(PREFIX_COMPANY + internship.getCompany().companyName + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        sb.append(PREFIX_STATUS + String.valueOf(internship.getStatus().statusId) + \" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Karen-Lam"},"content":"        sb.append(PREFIX_DESCRIPTION + internship.getDescription().descriptionMessage + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Karen-Lam"},"content":"        internship.getTags().stream().forEach(","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Karen-Lam"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Karen-Lam"},"content":"        );","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Karen-Lam"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Karen-Lam":30,"anshumaantgi":9}},{"path":"src/test/java/seedu/internship/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":1,"-":71}},{"path":"src/test/java/seedu/internship/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size() / 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"     * Returns the Internship in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    public static Internship getInternship(Model model, Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"        return model.getFilteredInternshipList().get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Karen-Lam":2,"anshumaantgi":7,"-":46}},{"path":"src/test/java/seedu/internship/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Karen-Lam":5,"-":7}},{"path":"src/test/java/seedu/internship/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Karen-Lam"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.InternshipCatalogue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.model.internship.Internship;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Karen-Lam"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Karen-Lam"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Karen-Lam"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Karen-Lam"},"content":"public class TypicalInternships {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"    // Values declared below should be moved to static seedu.address.logic.commands.CommandTestUtil package","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_ML1 \u003d \"Machine Learning\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_ML1 \u003d \"Tiktok\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_ML1 \u003d \"1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_ML1 \u003d 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_ML1 \u003d \"Registration Deadline: 20 Mar 2023\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_SE1 \u003d \"Software Engineer\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_SE1 \u003d \"Grab\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_SE1 \u003d \"2\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_SE1 \u003d 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_SE1 \u003d \"Interview Date: 20 May 2023\";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_DA1 \u003d \"Data Analytics\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_DA1 \u003d \"Google\";","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_DA1 \u003d \"3\";","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_DA1 \u003d 2;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_DA1 \u003d \"Internship Period: 01 May 2023 to 31 July 2023\";","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_POSITION_SD1 \u003d \"Software Developer\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_COMPANY_SD1 \u003d \"Shopee\";","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_ID_SD1 \u003d \"4\";","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    public static final Integer VALID_STATUS_SD1 \u003d 3;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_DESCRIPTION_SD1 \u003d \"Rejected on 21 Feb 2023\";","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_TAG_FUN \u003d \"fun\";","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    public static final String VALID_TAG_IMPORTANT \u003d \"important\";","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship ML2 \u003d new InternshipBuilder().withPosition(\"Machine Learning\")","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"GovTech\")","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Karen-Lam"},"content":"            .withTags(\"priority\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship SE3 \u003d new InternshipBuilder().withPosition(\"Software Engineer\")","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"GovTech\")","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Karen-Lam"},"content":"            .withTags(\"priority\", \"fun\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship SE4 \u003d new InternshipBuilder().withPosition(\"Software Engineer\")","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"Apple\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship DS1 \u003d new InternshipBuilder().withPosition(\"Data Science\")","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"Gojek\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship BE1 \u003d new InternshipBuilder().withPosition(\"Backend Engineer\")","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"TikTok\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship ST1 \u003d new InternshipBuilder().withPosition(\"Software Testing\")","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"Razor\").withTags(\"priority\", \"important\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship DA2 \u003d new InternshipBuilder().withPosition(\"Data Analyst\")","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(\"Infineon Technologies\").withStatus(2)","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Karen-Lam"},"content":"            .withDescription(\"Final interview unconfirmed\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Karen-Lam"},"content":"    // Manually added - Internship\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship ML1 \u003d new InternshipBuilder().withPosition(VALID_POSITION_ML1)","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(VALID_COMPANY_ML1).withDescription(VALID_DESCRIPTION_ML1)","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Karen-Lam"},"content":"            .withStatus(VALID_STATUS_ML1).withTags(VALID_TAG_IMPORTANT).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship SE1 \u003d new InternshipBuilder().withPosition(VALID_POSITION_SE1)","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(VALID_COMPANY_SE1).withDescription(VALID_DESCRIPTION_SE1)","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Karen-Lam"},"content":"            .withStatus(VALID_STATUS_SE1).withTags(VALID_TAG_IMPORTANT).withTags(VALID_TAG_FUN).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship DA1 \u003d new InternshipBuilder().withPosition(VALID_POSITION_DA1)","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(VALID_COMPANY_DA1).withDescription(VALID_DESCRIPTION_DA1)","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Karen-Lam"},"content":"            .withStatus(VALID_STATUS_DA1).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Karen-Lam"},"content":"    public static final Internship SD1 \u003d new InternshipBuilder().withPosition(VALID_POSITION_SD1)","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"            .withCompany(VALID_COMPANY_SD1).withDescription(VALID_DESCRIPTION_SD1)","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Karen-Lam"},"content":"            .withStatus(VALID_STATUS_SD1).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Karen-Lam"},"content":"    public static final String KEYWORD_MATCHING_SOFTWARE \u003d \"software\"; // A keyword that matches software","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Karen-Lam"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Karen-Lam"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Karen-Lam"},"content":"     * Returns an {@code InternshipCatalogue} with all the typical internships.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Karen-Lam"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Karen-Lam"},"content":"    public static InternshipCatalogue getTypicalInternshipCatalogue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Karen-Lam"},"content":"        InternshipCatalogue ic \u003d new InternshipCatalogue();","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Karen-Lam"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Karen-Lam"},"content":"            ic.addInternship(internship);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Karen-Lam"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Karen-Lam"},"content":"        return ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Karen-Lam"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ML2, SE3, SE4, DS1, BE1, ST1, DA2));","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"Karen-Lam"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Karen-Lam"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Karen-Lam"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Karen-Lam":55,"anshumaantgi":37,"sarthak181":1}},{"path":"src/test/java/seedu/internship/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Karen-Lam":1,"-":34}},{"path":"src/test/java/seedu/internship/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Karen-Lam"},"content":"package seedu.internship.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Karen-Lam"},"content":"import static seedu.internship.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Karen-Lam"},"content":"import seedu.internship.MainApp;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Karen-Lam":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"\u003c?import seedu.internship.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Karen-Lam":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Karen-Lam"},"content":"\u003cfx:root type\u003d\"seedu.internship.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Karen-Lam":1,"-":5}}]
